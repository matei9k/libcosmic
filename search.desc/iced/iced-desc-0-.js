searchState.loadedDescShard("iced", 0, "Iced is a cross-platform GUI library focused on simplicity …\nA list with all the defined themes.\nAlignment on the axis of a container.\nThe black color.\nThe background of some element.\nA border.\nAlign at the center of the axis.\nA color in the <code>sRGB</code> color space.\nA solid color.\nA set of asynchronous actions to be performed by some …\nScale as big as it can be without needing to crop or hide …\nThe strategy used to fit the contents of a widget to its …\nScale the image to cover all of the bounding box, cropping …\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nA non-monospaced sans-serif font with normal <code>Weight</code>.\nThe built-in dark variant.\nDegrees\nA DnD event.\nA generic widget.\nAlign at the end of the axis.\nContains the error value\nAn error that occurred while running an application.\nA user interface event.\nA type that can run futures.\nThe futures executor could not be created.\nDistort the image so the widget is 100% covered without …\nFill all the remaining space\nFill a portion of the remaining space relative to other …\nFill a fixed amount of space\nA font.\nA fill which transitions colors progressively along a …\nLinearly interpolate between several colors.\nThe application graphics context could not be created.\nA <code>Size</code> with infinite width and height.\nA keyboard event\nThe strategy used to fill space in a specific dimension.\nThe built-in light variant.\nA set of size constraints for layouting.\nA linear gradient interpolates colors along a direction at …\nA monospaced font with normal <code>Weight</code>.\nThe type of <strong>messages</strong> your <code>Sandbox</code> will produce.\nA mouse event\nNo limits\nDon’t resize or scale the image at all.\nThe origin (i.e. a <code>Point</code> at (0, 0)).\nContains the success value\nAn amount of space to pad for each side of a box\nAn amount of logical pixels.\nA platform specific event\nA 2D point.\nThe range of radians of a circle.\nRadians\nThe border radii for the corners of a graphics primitive …\nA rectangle.\nThe default graphics renderer for <code>iced</code>.\nThe result of running an application.\nA sandboxed <code>Application</code>.\nScale the image down if it’s too big for the space, but …\nFill the least amount of space\nAn amount of space in 2 dimensions.\nAlign at the start of the axis.\nA request to listen to external events.\nA color with no opacity.\nA built-in theme.\nA touch event\nA <code>Size</code> with a width and height of 1 unit.\nA 2D vector.\nThe white color.\nA window event\nThe application window could not be created.\nPadding of zero\nA <code>Size</code> with zero width and height.\nThe zero <code>Vector</code>.\nTransparency, 0.0 - 1.0\nReturns all of the actions of the <code>Command</code>.\nLeverage advanced concepts like custom widgets.\nAlign and position widgets.\nBuild interactive cross-platform applications.\nReturns the area of the <code>Rectangle</code>.\nBlue component, 0.0 - 1.0\nCreates a <code>Command</code> that performs the actions of all the …\nBatches all the provided subscriptions and returns the …\nDraw lines around containers.\nBottom padding\nReturns the <code>Point</code> at the center of the <code>Rectangle</code>.\nReturns the X coordinate of the <code>Point</code> at the center of the …\nReturns the Y coordinate of the <code>Point</code> at the center of the …\nAccess the clipboard.\nThe color of the border.\nCreates a <code>Color</code> with shorter and cleaner syntax.\nRun asynchronous actions.\nReturns true if the given <code>Point</code> is contained in the …\nReturns true if the given <code>Point</code> is contained in the …\nCreates a new custom <code>Theme</code> from the given <code>Palette</code>.\nCreates a new custom <code>Theme</code> from the given <code>Palette</code>, with a …\nComputes the distance to another <code>Point</code>.\nRuns the given closure inside the <code>Executor</code>.\nHandle events of a user interface.\nChoose your preferred executor to power your application.\nExpands the <code>Rectangle</code> a given amount.\nExpands this <code>Size</code> by the given amount.\nReturns the <code>palette::Extended</code> of the <code>Theme</code>.\nThe <code>Family</code> of the <code>Font</code>.\nReturns the <em>fill factor</em> of the <code>Length</code>.\nAttempt to apply the given fit for a content size within …\nFits the <code>Padding</code> between the provided <code>inner</code> and <code>outer</code> <code>Size</code>.\nReturns the “fluid” variant of the <code>Length</code>.\nLoad and use fonts.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>Color</code> from its linear RGBA components.\nCreates a <code>Subscription</code> from a <code>Recipe</code> describing it.\nCreates a <code>Color</code> from its RGB components.\nCreates a <code>Color</code> from its RGB8 components.\nCreates a <code>Color</code> from its RGBA components.\nCreates a <code>Color</code> from its RGB8 components and an alpha …\nGreen component, 0.0 - 1.0\nColors that transition progressively.\nApplies a height constraint to the current <code>Limits</code>.\nHeight of the rectangle.\nThe height.\nReturns the total amount of horizontal <code>Padding</code>.\nWidget and Window IDs.\nComputes the intersection with the given <code>Rectangle</code>.\nReturns whether the <code>Rectangle</code> intersects with the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the <code>Color</code> into its linear values.\nReturns the different recipes of the <code>Subscription</code>.\nConverts the <code>Color</code> into its RGBA8 equivalent.\nReturns the inverted <code>Color</code>.\nInverts the <code>Color</code> in-place.\nReturns <code>true</code> iff the <code>Length</code> is either <code>Length::Fill</code> or\nReturns true if the current <code>Rectangle</code> is completely within …\nReturns true if the current <code>Rectangle</code> is completely within …\nListen and react to keyboard events.\nLeft padding\nRemoves the minimum width constraint for the current <code>Limits</code>…\nApplies a transformation to the result of a <code>Command</code>.\nTransforms the <code>Subscription</code> output with the given function.\nReturns the maximum <code>Size</code> of the <code>Limits</code>.\nReturns the maximum of each component of this size and …\nApplies a maximum height constraint to the current <code>Limits</code>.\nApplies a maximum width constraint to the current <code>Limits</code>.\nReturns the minimum <code>Size</code> of the <code>Limits</code>.\nReturns the minimum of each component of this size and …\nApplies a minimum height constraint to the current <code>Limits</code>.\nApplies a minimum width constraint to the current <code>Limits</code>.\nListen and react to mouse events.\nAdjust the opacity of the gradient by a multiplier applied …\nInitializes the <code>Sandbox</code>.\nCreates a new <code>Executor</code>.\nCreates new <code>Limits</code> with the given minimum and maximum <code>Size</code>.\nCreates a new <code>Color</code>.\nCreate a Padding that is equal on all sides\nCreates a new <code>Point</code> with the given coordinates.\nCreates a new <code>Rectangle</code> with its top-left corner in the …\nCreates a new  <code>Size</code> with the given width and height.\nCreates a new <code>Vector</code> with the given components.\nCreates an empty <code>Command</code>.\nReturns an empty <code>Subscription</code> that will not produce any …\nDisplay interactive elements on top of other widgets.\nReturns the <code>Palette</code> of the <code>Theme</code>.\nCreates a <code>Command</code> that performs the action of the given …\nReturns the position of the top left corner of the …\nRed component, 0.0 - 1.0\nThe radius of the border.\nComputes the resulting <code>Size</code> that fits the <code>Limits</code> given …\nRight padding\nRuns the <code>Sandbox</code>.\nRuns the <code>Sandbox</code>.\nCreates a <code>Command</code> that runs the given stream to completion.\nReturns the scale factor of the <code>Sandbox</code>.\nReturns the scale factor of the <code>Sandbox</code>.\nConfigure your application\nShrinks the current <code>Limits</code> by the given <code>Size</code>.\nCreates a <code>Command</code> that performs a single <code>Action</code>.\nReturns the <code>Size</code> of the <code>Rectangle</code>.\nSnaps the <code>Rectangle</code> to <strong>unsigned</strong> integer coordinates.\nSpawns a future in the <code>Executor</code>.\nThe <code>Stretch</code> of the <code>Font</code>.\nReturns the current style variant of <code>theme::Application</code>.\nReturns the current style variant of <code>theme::Application</code>.\nThe <code>Style</code> of the <code>Font</code>.\nListen to external events in your application.\nUse the built-in theme and styles.\nReturns the current <code>Theme</code> of the <code>Sandbox</code>.\nReturns the current <code>Theme</code> of the <code>Sandbox</code>.\nListen and react to time.\nReturns the current title of the <code>Sandbox</code>.\nCalculates the line in which the angle intercepts the …\nTop padding\nListen and react to touch events.\nComputes the union with the given <code>Rectangle</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Sandbox</code>.\nReturns the total amount of vertical <code>Padding</code>.\nReturns the widgets to display in the <code>Sandbox</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nUse the built-in widgets or create your own.\nCreates a <code>Command</code> that performs a <code>widget::Operation</code>.\nApplies a width constraint to the current <code>Limits</code>.\nThe width of the border.\nWidth of the rectangle.\nThe width.\nConfigure the window of your application in native …\nAdds a value to the <code>Subscription</code> context.\nCreates a non-monospaced <code>Font</code> with the given <code>Family::Name</code> …\nCreates a new default <code>Border</code> with the given <code>Radius</code>.\nCreates a new <code>Rectangle</code> with its top-left corner at the …\nThe X coordinate.\nX coordinate of the top-left corner.\nThe X component of the <code>Vector</code>\nThe Y coordinate.\nY coordinate of the top-left corner.\nThe Y component of the <code>Vector</code>\nA buffer for short-term storage and transfer within and …\nThe hasher used to compare layouts.\nThe bounds of a <code>Node</code> and its children, using absolute …\nAn interactive component that can be displayed on top of …\nA component that can be used by widgets to draw themselves …\nA connection to the state of a shell.\nA paragraph.\nA component that displays information and allows …\nReturns whether the widgets of the current application …\nReturns the bounds of the <code>Layout</code>.\nThe bounds of the paragraph.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns an iterator over the <code>Layout</code> of the children of a …\nClears all of the recorded primitives in the <code>Renderer</code>.\nThe content of the paragraph.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nAdds the drag destination rectangles of the widget. Runs …\nDraws the <code>Overlay</code> using the associated <code>Renderer</code>.\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nEnds a DnD operation.\nFills a <code>Quad</code> with the provided <code>Background</code>.\nThe font of the <code>Text</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe horizontal alignment of the <code>Text</code>.\nReturns the id of the widget\nLoad and draw raster graphics.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInvalidates the current application layout.\nInvalidates the current application widgets.\nReturns true if the <code>Shell</code> contains no published messages\nReturns whether the current layout is invalid or not.\nReturns true if the cursor is over the <code>Overlay</code>.\nPosition your widgets properly.\nReturns the layout <code>Node</code> of the <code>Overlay</code>.\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nThe line height of the <code>Text</code>.\nMerges the current <code>Shell</code> with another one by applying the …\nHandle mouse events.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nCreates a new <code>Layout</code> for the given <code>Node</code> at the origin.\nCreates a new <code>Shell</code> with the provided buffer of messages.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nApplies an <code>Operation</code> to the <code>Overlay</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nDisplay interactive elements on top of other widgets.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nReturns the position of the <code>Layout</code>.\nPublish the given <code>Message</code> for an application to process it.\nReads the current content of the <code>Clipboard</code> as text.\nConsider using <code>read_data</code> instead Reads the current content …\nRead the current content of the primary <code>Clipboard</code> as text.\nConsider using <code>read_primary_data</code> instead Reads the current …\nReturns the request a redraw should happen, if any.\nStarts a DnD operation.\nWrite your own renderer.\nRequests a new frame to be drawn.\nTriggers the given function if the layout is invalid, …\nSet the final action for the DnD operation. Only should be …\nSets the id of the widget This may be called while diffing …\nThe <code>Shaping</code> strategy of the <code>Text</code>.\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nThe size of the <code>Text</code> in logical pixels.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nRegisters Dnd destinations\nReturns the <code>State</code> of the <code>Widget</code>.\nWrite your own subscriptions.\nLoad and draw vector graphics.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nDraw and interact with text.\nThe vertical alignment of the <code>Text</code>.\nCreate custom widgets and operate on them.\nDraws the primitives recorded in the given closure in a …\nCreates a new <code>Layout</code> for the given <code>Node</code> with the provided …\nApplies a <code>translation</code> to the primitives recorded in the …\nThe <code>Wrap</code> mode of the <code>Text</code>.\nWrites the given text contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nWrites the given text contents to the primary <code>Clipboard</code>.\nWrites the given text contents to the primary <code>Clipboard</code>.\nA wrapper around raw image data.\nIn-memory data\nThe data of a raster image.\nImage filtering strategy.\nA handle of some image data.\nThe image Handle to be displayed. Iced exposes its own …\nBilinear interpolation.\nNearest neighbor.\nFile data\nA <code>Renderer</code> that can render raster graphics.\nDecoded image pixels in RGBA format.\nReturns the dimensions of an image for the given <code>Handle</code>.\nDraws an image with the given <code>Handle</code> and inside the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates new <code>Bytes</code> around <code>data</code>.\nThe height of the image.\nThe pixels.\nThe width of the image.\nThe bounds of a <code>Node</code> and its children, using absolute …\nA set of size constraints for layouting.\nThe bounds of an element and its children.\nAligns the <code>Node</code> in the given space.\nMutable reference version of <code>Self::align</code>.\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nReturns the bounds of the <code>Node</code>.\nReturns the children of the <code>Node</code>.\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nCreates a new <code>Node</code> that wraps a single child with some …\nDistribute elements using a flex-based layout.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMoves the <code>Node</code> to the given position.\nMutable reference version of <code>Self::move_to</code>.\nCreates a new <code>Node</code> with the given <code>Size</code>.\nProduces a <code>Node</code> with two children nodes one right next to …\nComputes the <code>Node</code> that fits the <code>Limits</code> given some width, …\nComputes a <code>padded</code> <code>Node</code> with a positioning step.\nReturns the <code>Size</code> of the <code>Node</code>.\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nTranslates the <code>Node</code> by the given translation.\nCreates a new <code>Node</code> with the given <code>Size</code> and children.\nThe main axis of a flex layout.\nThe horizontal axis\nThe vertical axis\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nComputes the flex layout with the given axis and limits, …\nThe cursor has a defined position.\nThe back mouse button.\nThe button of a mouse.\nA mouse button was pressed.\nA mouse button was released.\nA mouse click.\nThe mouse cursor state.\nThe mouse cursor entered the window.\nThe mouse cursor left the window.\nThe mouse cursor was moved\nA mouse event.\nThe forward mouse button.\nThe interaction of a mouse cursor.\nThe left mouse button.\nA line-based scroll movement\nThe middle (wheel) button.\nSome other button.\nA pixel-based scroll movement\nThe right mouse button.\nA scroll movement.\nThe cursor is currently unavailable (i.e. out of bounds or …\nThe mouse wheel was scrolled.\nTrack mouse clicks.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the <code>Kind</code> of <code>Click</code>.\nCreates a new <code>Click</code> with the given position and previous …\nReturns the position of the <code>Click</code>.\nThe scroll movement.\nThe new position of the mouse cursor\nThe number of horizontal lines scrolled\nThe number of horizontal pixels scrolled\nThe number of vertical lines scrolled\nThe number of vertical pixels scrolled\nA mouse click.\nA double click\nThe kind of mouse click.\nA single click\nA triple click\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA generic <code>Overlay</code>.\nAn <code>Overlay</code> container that displays multiple overlay …\nAn interactive component that can be displayed on top of …\nDraws the <code>Overlay</code> using the associated <code>Renderer</code>.\nDraws the <code>Element</code> and its children using the given <code>Layout</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a <code>Group</code> of overlay <code>Element</code> children.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the cursor is over the <code>Element</code>.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns the layout <code>Node</code> of the <code>Overlay</code>.\nComputes the layout of the <code>Element</code> in the given bounds.\nApplies a transformation to the produced message of the …\nReturns the current <code>mouse::Interaction</code> of the <code>Element</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nCreates a new <code>Element</code> containing the given <code>Overlay</code>.\nCreates an empty <code>Group</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nApplies a <code>widget::Operation</code> to the <code>Element</code>.\nApplies an <code>Operation</code> to the <code>Overlay</code>.\nReturns the nested overlay of the <code>Element</code>, if there is any.\nTurns the <code>Group</code> into an overlay <code>overlay::Element</code>.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the position of the <code>Element</code>.\nAdds an <code>overlay::Element</code> to the <code>Group</code>.\nTranslates the <code>Element</code>.\nCreates a <code>Group</code> with the given elements.\nA renderer that does nothing.\nA polygon with four sides.\nA component that can be used by widgets to draw themselves …\nThe styling attributes of a <code>Renderer</code>.\nThe <code>Border</code> of the <code>Quad</code>.\nThe bounds of the <code>Quad</code>.\nClears all of the recorded primitives in the <code>Renderer</code>.\nFills a <code>Quad</code> with the provided <code>Background</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe color to apply to symbolic icons.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Null</code> renderer.\nThe scale factor\nThe <code>Shadow</code> of the <code>Quad</code>.\nThe text color\nDraws the primitives recorded in the given closure in a …\nApplies a <code>translation</code> to the primitives recorded in the …\nA stream of runtime events.\nThe events that will be produced by a <code>Subscription</code> with …\nThe description of a <code>Subscription</code>.\nHashes the <code>Recipe</code>.\nExecutes the <code>Recipe</code> and produces the stream of events of …\nIn-memory data\nThe data of a vectorial image.\nA handle of Svg data.\nFile data\nA <code>Renderer</code> that can render vector graphics.\nReturns the default dimensions of an SVG for the given …\nDraws an SVG with the given <code>Handle</code>, an optional <code>Color</code> …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe <code>char</code> representing a ▼ icon in the built-in <code>ICON_FONT</code>.\nAn absolute height in logical pixels.\nAdvanced text shaping and font fallback.\nNo shaping and no font fallback.\nA bounds difference.\nThe <code>char</code> representing a ✔ icon in the <code>ICON_FONT</code>.\nThe point was within the bounds of the returned character …\nThe difference detected in some text.\nA component that can be used by widgets to edit multi-line …\nThe <code>Editor</code> of this <code>Renderer</code>.\nThe font of this <code>Paragraph</code>.\nThe font of the <code>Editor</code>.\nThe font type used.\nWraps at a glyph level\nThe output of the <code>Highlighter</code>.\nA type capable of highlighting text.\nThe result of hit testing on text.\nThe icon font of the backend.\nThe highlight iterator type.\nThe height of a line of text in a paragraph.\nNo wraping\nNo difference.\nA text paragraph.\nThe <code>Paragraph</code> of this <code>Renderer</code>.\nThe Raw of this <code>Renderer</code>.\nA factor of the size of the text.\nA renderer capable of measuring and drawing <code>Text</code>.\nThe settings to configure the <code>Highlighter</code>.\nA shape difference.\nThe shaping strategy of some text.\nA paragraph.\nWraps at a word level\nWraps at the word level, or fallback to glyph level if a …\nThe wrap mode of some text.\nReturns the current boundaries of the <code>Editor</code>.\nThe bounds of the paragraph.\nNotifies the <code>Highlighter</code> that the line at the given index …\nCompares the <code>Paragraph</code> with some desired <code>Text</code> and returns …\nThe content of the paragraph.\nReturns the current line of the <code>Highlighter</code>.\nReturns the current <code>Cursor</code> of the <code>Editor</code>.\nComputes the cursor position of the <code>Hit</code> .\nReturns the current cursor position of the <code>Editor</code>.\nReturns the default <code>Self::Font</code>.\nReturns the default size of <code>Text</code>.\nEdit text.\nDraws the given <code>Editor</code> at the given position and with the …\nDraws the given <code>Paragraph</code> at the given position and with …\nDraws the given Raw\nDraws the given <code>Text</code> at the given position and with the …\nThe font of the <code>Text</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the distance to the given grapheme index in the …\nRuns a text <code>Highlighter</code> in the <code>Editor</code>.\nHighlights the given line.\nHighlight text.\nTests whether the provided point is within the boundaries …\nReturns the horizontal alignment of the <code>Paragraph</code>.\nThe horizontal alignment of the <code>Text</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the text of the given line in the <code>Editor</code>, if it …\nReturns the amount of lines in the <code>Editor</code>.\nThe line height of the <code>Text</code>.\nLoads a <code>Self::Font</code> from its bytes.\nReturns the minimum boundaries that can fit the contents …\nReturns the minimum height that can fit the contents of …\nReturns the minimum width that can fit the contents of the …\nCreates a new <code>Highlighter</code> from its <code>Self::Settings</code>.\nPerforms an <code>Action</code> on the <code>Editor</code>.\nLays out the <code>Paragraph</code> with some new boundaries.\nReturns the current selected text of the <code>Editor</code>.\nThe <code>Shaping</code> strategy of the <code>Text</code>.\nThe size of the <code>Text</code> in logical pixels.\nUpdates the <code>Editor</code> with some new attributes.\nUpdates the <code>Highlighter</code> with some new <code>Self::Settings</code>.\nUpdates the <code>Paragraph</code> to match the given <code>Text</code>, if needed.\nReturns the vertical alignment of the <code>Paragraph</code>.\nThe vertical alignment of the <code>Text</code>.\nCreates a new <code>Paragraph</code> laid out with the given <code>Text</code>.\nCreates a new <code>Editor</code> laid out with the given text.\nThe <code>Wrap</code> mode of the <code>Text</code>.\nAn interaction with an <code>Editor</code>.\nDelete the previous character.\nCursor without a selection\nClick the <code>Editor</code> at the given <code>Point</code>.\nThe cursor of an <code>Editor</code>.\nDelete the next character.\nA direction in some text.\nMove to the end of the text.\nMove to the start of the text.\nMove down.\nDrag the mouse on the <code>Editor</code> to the given <code>Point</code>.\nAn action that edits text.\nPerform an <code>Edit</code>.\nA component that can be used by widgets to edit multi-line …\nMove to the end of the line.\nBreak the current line.\nThe font of the <code>Editor</code>.\nMove to the start of the line.\nInsert the given character.\nMove left.\n&lt;-\nA cursor movement.\nApply a <code>Motion</code>.\nMove to the start of the next window.\nMove to the start of the previous window.\nPaste the given text.\nMove right.\n-&gt;\nScroll the <code>Editor</code> a certain amount of lines.\nSelect text with a given <code>Motion</code>.\nSelect the line at the current cursor.\nSelect the word at the current cursor.\nCursor selecting a range of text\nMove up.\nMove to the left boundary of a word.\nMove to the right boundary of a word.\nReturns the current boundaries of the <code>Editor</code>.\nReturns the current <code>Cursor</code> of the <code>Editor</code>.\nReturns the current cursor position of the <code>Editor</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRuns a text <code>Highlighter</code> in the <code>Editor</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the text of the given line in the <code>Editor</code>, if it …\nReturns the amount of lines in the <code>Editor</code>.\nPerforms an <code>Action</code> on the <code>Editor</code>.\nReturns the current selected text of the <code>Editor</code>.\nUpdates the <code>Editor</code> with some new attributes.\nCreates a new <code>Editor</code> laid out with the given text.\nThe amount of lines to scroll.\nThe format of some text.\nThe output of the <code>Highlighter</code>.\nA type capable of highlighting text.\nThe highlight iterator type.\nA highlighter that highlights nothing.\nThe settings to configure the <code>Highlighter</code>.\nNotifies the <code>Highlighter</code> that the line at the given index …\nThe <code>Color</code> of the text.\nReturns the current line of the <code>Highlighter</code>.\nThe <code>Font</code> of the text.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHighlights the given line.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Highlighter</code> from its <code>Self::Settings</code>.\nUpdates the <code>Highlighter</code> with some new <code>Self::Settings</code>.\nThe identifier of a generic widget.\nWidget Id\nApplication Message\nA piece of logic that can traverse the widget tree of an …\nA wrapper around an <code>Operation</code> output that can be used for …\nA paragraph of text.\nA persistent state widget tree.\nA component that displays information and allows …\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nThe children of the root widget of the <code>Tree</code>.\nOperates on a widget that contains other widgets.\nOperates on a custom widget.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the current tree with the provided <code>Widget</code>.\nReconciles the children of the tree with the provided list …\nReconciliates the children of the tree with the provided …\nAdds the drag destination rectangles of the widget. Runs …\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nCreates an empty, stateless <code>Tree</code> with no children.\nFinds a widget state in the tree by its id.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nOperates on a widget that can be focused.\nSets the <code>Font</code> of the <code>Text</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the height of the <code>Text</code> boundaries.\nSets the <code>alignment::Horizontal</code> of the <code>Text</code>.\nReturns the id of the widget\nthe Id of the <code>Tree</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nSets the <code>LineHeight</code> of the <code>Text</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nCreate a new fragment of <code>Text</code> with the given contents.\nCreates a new <code>Tree</code> for the provided <code>Widget</code>.\nProcesses a runtime <code>Event</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nQuery or update internal widget state.\nReturns the overlay of the <code>Widget</code>, if there is any.\nOperates on a widget that can be scrolled.\nSets the id of the widget This may be called while diffing …\nSets the <code>Shaping</code> strategy of the <code>Text</code>.\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nSets the size of the <code>Text</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nThe <code>State</code> of the <code>Tree</code>.\nSets the style of the <code>Text</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nThe tag of the <code>Tree</code>.\nTakes all named widgets from the tree.\nWrite some text for your users to read.\nOperates on a widget that has text input.\nStore internal widget state in a state tree to ensure …\nSets the <code>alignment::Vertical</code> of the <code>Text</code>.\nSets the width of the <code>Text</code> boundaries.\nSets the <code>Wrap</code> mode of the <code>Text</code>.\nThe <code>Operation</code> needs to be followed by another <code>Operation</code>.\nThe internal state of a widget that can be focused.\nWidget Id\nWidget Id\nMap Operation\nApplication Message\nApplication Message\nThe <code>Operation</code> produced no result.\nA piece of logic that can traverse the widget tree of an …\nA wrapper around an <code>Operation</code> output that can be used for …\nA wrapper around an <code>Operation</code> that can be used for …\nThe result of an <code>Operation</code>.\nThe internal state of a widget that can be scrolled.\nThe <code>Operation</code> produced some result.\nThe internal state of a widget that has text input.\nWrapper\nOperates on a widget that contains other widgets.\nOperates on a custom widget.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFocuses the widget.\nOperate on widgets that can be focused.\nOperates on a widget that can be focused.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the widget is focused or not.\nMaps the output of an <code>Operation</code> using the given function.\nMoves the cursor of the text input to an arbitrary …\nMoves the cursor of the text input to the end of the input …\nMoves the cursor of the text input to the front of the …\nCreates a new <code>MapOperation</code>.\nProduces an <code>Operation</code> that applies the given <code>Operation</code> to …\nScroll the widget to the given <code>AbsoluteOffset</code> along the …\nOperate on widgets that can be scrolled.\nOperates on a widget that can be scrolled.\nSearch for widgets with the target Id.\nSelects all the content of the text input.\nSnaps the scroll of the widget to the given <code>percentage</code> …\nOperate on widgets that have text input.\nOperates on a widget that has text input.\nUnfocuses the widget.\nA summary of the focusable widgets present on a widget …\nThe internal state of a widget that can be focused.\nProduces an <code>Operation</code> that generates a <code>Count</code> and chains it …\nProduces an <code>Operation</code> that searches for the current …\nProduces an <code>Operation</code> that focuses the widget with the …\nFocuses the widget.\nProduces an <code>Operation</code> that searches for the current …\nProduces an <code>Operation</code> that searches for the current …\nThe index of the current focused widget, if any.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns whether the widget is focused or not.\nThe total amount of focusable widgets.\nUnfocuses the widget.\nThe amount of absolute offset in each direction of a …\nThe amount of relative offset in each direction of a …\nThe internal state of a widget that can be scrolled.\nProduces an <code>Operation</code> that scrolls the widget with the …\nScroll the widget to the given <code>AbsoluteOffset</code> along the …\nProduces an <code>Operation</code> that snaps the widget with the given …\nSnaps the scroll of the widget to the given <code>percentage</code> …\nThe amount of horizontal offset\nThe amount of horizontal offset\nThe amount of vertical offset\nThe amount of vertical offset\nProduces an <code>Operation</code> that searches for the Id\nThe internal state of a widget that has text input.\nProduces an <code>Operation</code> that moves the cursor of the widget …\nMoves the cursor of the text input to an arbitrary …\nProduces an <code>Operation</code> that moves the cursor of the widget …\nMoves the cursor of the text input to the end of the input …\nProduces an <code>Operation</code> that moves the cursor of the widget …\nMoves the cursor of the text input to the front of the …\nProduces an <code>Operation</code> that selects all the content of the …\nSelects all the content of the text input.\nAn absolute height in logical pixels.\nAdvanced text shaping and font fallback.\nThe apperance of some text.\nNo shaping and no font fallback.\nWraps at a glyph level\nThe height of a line of text in a paragraph.\nNo wraping\nA factor of the size of the text.\nThe shaping strategy of some text.\nThe internal state of a <code>Text</code> widget.\nThe supported style of the <code>StyleSheet</code>.\nThe style sheet of some text.\nA paragraph of text.\nWraps at a word level\nWraps at the word level, or fallback to glyph level if a …\nThe wrap mode of some text.\nProduces the <code>Appearance</code> of some text.\nThe <code>Color</code> of the text.\nDraws text using the same logic as the <code>Text</code> widget.\nProduces the <code>layout::Node</code> of a <code>Text</code> widget.\nA map of named widget states.\nNo meaningful internal state.\nSome meaningful internal state.\nThe internal <code>State</code> of a widget.\nThe identifier of some widget state.\nA persistent state widget tree.\nThe children of the root widget of the <code>Tree</code>.\nReconciliates the <code>current_children</code> with the provided list …\nDowncasts the <code>State</code> to <code>T</code> and returns a mutable reference …\nDowncasts the <code>State</code> to <code>T</code> and returns a reference to it.\nReturns the argument unchanged.\nReturns the argument unchanged.\nthe Id of the <code>Tree</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>State</code>.\nCreates a <code>Tag</code> for a state of type <code>T</code>.\nThe <code>State</code> of the <code>Tree</code>.\nCreates a <code>Tag</code> for a stateless widget.\nThe tag of the <code>Tree</code>.\nAlignment on the axis of a container.\nAlign bottom\nAlign at the center of the axis.\nHorizontally centered\nVertically centered\nAlign at the end of the axis.\nThe horizontal <code>Alignment</code> of some resource.\nAlign left\nAlign right\nAlign at the start of the axis.\nAlign top\nThe vertical <code>Alignment</code> of some resource.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe appearance of an application.\nAn interactive cross-platform application.\nThe <code>Executor</code> that will run commands and subscriptions.\nThe data needed to initialize your <code>Application</code>.\nThe type of <strong>messages</strong> your <code>Application</code> will produce.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of an application.\nThe theme of your <code>Application</code>.\nReturns the <code>Appearance</code> of the application for the provided …\nThe background <code>Color</code> of the application.\nReturns the argument unchanged.\nThe default icon <code>Color</code> of the application.\nCalls <code>U::from(self)</code>.\nInitializes the <code>Application</code> with the flags provided to <code>run</code> …\nRuns the <code>Application</code>.\nReturns the scale factor of the <code>Application</code>.\nReturns the current <code>Style</code> of the <code>Theme</code>.\nReturns the event <code>Subscription</code> for the current state of the\nThe default text <code>Color</code> of the application.\nReturns the current <code>Theme</code> of the <code>Application</code>.\nReturns the current title of the <code>Application</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Application</code>.\nReturns the widgets to display in the <code>Application</code>.\nA border.\nThe border radii for the corners of a graphics primitive …\nThe color of the border.\nThe radius of the border.\nThe width of the border.\nRead the current contents of the clipboard.\nReads the current content of the <code>Clipboard</code>.\nRead the current contents of primary.\nReads the current content of the primary <code>Clipboard</code>.\nWrite the given contents to the clipboard.\nWrite the given contents to primary.\nA set of asynchronous actions to be performed by some …\nCreates a <code>Command</code> that produces the <code>Message</code>s published …\nThe <code>Event</code> was handled and processed by a widget.\nA DnD event.\nA user interface event.\nThe <code>Event</code> was <strong>NOT</strong> handled by any widget.\nA keyboard event\nDescribes an event specific to MacOS\nA MacOS specific event\nA mouse event\nA platform specific event\nA platform specific event\nTriggered when the app receives an URL from the system\nThe status of an <code>Event</code> after being processed.\nA touch event\nA window event\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>Subscription</code> to all the ignored runtime events.\nCreates a <code>Subscription</code> that produces a message for every …\nCreates a <code>Subscription</code> that listens and filters all the …\nA default cross-platform executor.\nA type that can run futures.\nRuns the given closure inside the <code>Executor</code>.\nCreates a new <code>Executor</code>.\nSpawns a future in the <code>Executor</code>.\nGlyphs in cursive fonts generally use a more informal …\nAn error while loading a font.\nA font family.\nFantasy fonts are primarily decorative or expressive fonts …\nA font.\nThe sole criterion of a monospace font is that all glyphs …\nThe name of a font family of choice.\nGlyphs in sans-serif fonts, as the term is used in CSS, …\nSerif fonts represent the formal text style for a script.\nThe width of some text.\nThe style of some text.\nThe weight of some text.\nThe <code>Family</code> of the <code>Font</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad a font from its bytes.\nThe <code>Stretch</code> of the <code>Font</code>.\nThe <code>Style</code> of the <code>Font</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nA point along the gradient vector where the specified <code>color</code>…\nA fill which transitions colors progressively along a …\nA linear gradient.\nA linear gradient interpolates colors along a direction at …\nAdds a new <code>ColorStop</code>, defined by an offset and a color, to …\nAdds multiple <code>ColorStop</code>s to the gradient.\nHow the <code>Gradient</code> is angled within its bounds.\nThe color of the gradient at the specified <code>offset</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Linear</code> gradient with the given angle in …\nOffset along the gradient vector.\n<code>ColorStop</code>s along the linear gradient path.\na custom id, which is equal to any <code>Id</code> with a matching …\nThe identifier of a generic widget.\nSimilar to PartialEq, but only intended for use when …\nInternal representation of an <code>Id</code>.\nXXX Do not use this as an id for an accessibility node, it …\na unique id\nCompare two Ids for equality based on their number or name\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a custom <code>Id</code>.\nresets the id counter\nCreates a unique <code>Id</code>.\nget window node id that won’t conflict with other node …\nThe “alt” key.\nThe “command” key.\nThe “control” key.\nA key string that corresponds to the character typed by …\nA keyboard event.\nA key on the keyboard.\nA keyboard key was pressed.\nA keyboard key was released.\nThe “windows” key on Windows, “command” key on …\nThe left side of the keyboard.\nThe location of a key on the keyboard.\nThe current state of the keyboard modifiers.\nThe keyboard modifiers have changed.\nA key with an established name.\nThe numpad of the keyboard.\nThe right side of the keyboard.\nThe “shift” key.\nThe standard group of keys on the keyboard.\nAn unidentified key.\nGet a flags value with all known bits set.\nReturns true if the <code>ALT</code> key is pressed in the <code>Modifiers</code>.\nConvert <code>Key::Character(SmolStr)</code> to <code>Key::Character(&amp;str)</code> so …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns true if a “command key” is pressed in the …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturns true if the <code>CTRL</code> key is pressed in the <code>Modifiers</code>.\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nIdentify keyboard keys.\nReturns true if the <code>LOGO</code> key is pressed in the <code>Modifiers</code>.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nListens to keyboard key presses and calls the given …\nListens to keyboard key releases and calls the given …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nReturns true if the <code>SHIFT</code> key is pressed in the <code>Modifiers</code>.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe key pressed.\nThe key released.\nThe location of the key.\nThe location of the key.\nThe state of the modifier keys.\nThe state of the modifier keys.\nThe text produced by the key press, if any.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nThe Accept (Commit, OK) key. Accept current option or …\nRedo or repeat an action.\nInitate the multi-candidate mode.\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nThe Application switch key, which provides a list of …\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nToggle between muted state and prior volume level. (…\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\nUsed to remove the character to the left of the cursor. …\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nNavigate to previous content or page in current history. (…\nOpen the list of browser favorites. (…\nNavigate to next content or page in current history. (…\nGo to the user’s preferred home page. (…\nRefresh the current page or content. (…\nCall up the user’s preferred search page. (…\nStop loading the current page or content. (…\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nThe <code>Caps Lock</code> (Capital) key.\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\nThe Compose key, also known as “Multi_key” on the X …\nShow the application’s context menu. This key is …\nThe <code>Control</code> or <code>Ctrl</code> key.\nConvert the current input method sequence.\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nThe Cursor Select key.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nSelect Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)\nUsed to delete the character to the right of the cursor. …\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nToggle removable media to eject (open) and insert (close) …\nThe End key, used with keyboard entry to go to the end of …\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\nThe Erase to End of Field key. This key deletes all …\nThe <code>Esc</code> key. This key was originally used to initiate an …\nThe Extend Selection (Exsel) key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nThe Function switch <code>Fn</code> key. Activating this key …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nOpen a help dialog or toggle display of help information. (…\nThe Hibernate key. This key saves the current state of the …\nThe Hiragana (Japanese Kana characters) key.\nThe Hiragana/Katakana toggle key. (…\nThe Home key, used with keyboard entry, to go to start of …\nToggle display of information about currently selected …\nToggle between text modes for insertion or overtyping. (…\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nThe Kanji (Japanese name for ideographic characters of …\nThe Katakana (Japanese Kana characters) key.\nA key on the keyboard.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nThe “Calendar” key. (<code>KEYCODE_CALENDAR</code>)\nThe “Contacts” key. (<code>KEYCODE_CONTACTS</code>)\nThe “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)\nThe “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…\nLaunch linked content, if available and appropriate. (…\nList the current program. (<code>VK_LIST</code>)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (<code>VK_LOCK</code>)\nOpen an editor to forward the current message. (…\nOpen an editor to reply to the current message. (…\nSend the current message. (<code>APPCOMMAND_SEND_MAIL</code>)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)\nClose the current media, for example to close a CD or DVD …\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (<code>VK_LAST</code>, …\nPause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…\nInitiate or continue media playback at normal speed, if …\nToggle media between play and pause states. (…\nInitiate or resume recording of currently selected media. (…\nInitiate or continue reverse playback at faster than …\nSkip backward to next content or program. (…\nSkip forward to next content or program. (<code>VK_SKIP</code>, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)\nSeek to next media or program track. (…\nSeek to previous media or program track. (…\nToggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…\nDecrease microphone volume. (…\nMute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …\nIncrease microphone volume. (…\nToggle between or cycle through input modes of IMEs.\nA named key.\nA key with an established name.\nNavigate in. (<code>KEYCODE_NAVIGATE_IN</code>)\nNavigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)\nNavigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)\nNavigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)\nOpen a new document or message. (<code>APPCOMMAND_NEW</code>)\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nAccept current input method sequence without conversion in …\nThe Notification key. (<code>KEYCODE_NOTIFICATION</code>)\nThe <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …\nAccess on-demand content or programs. (<code>VK_ON_DEMAND</code>)\nOpen an existing document or message. (<code>APPCOMMAND_OPEN</code>)\nScroll down or display next page of content.\nScroll up or display previous page of content.\nPairing key to pair devices. (<code>KEYCODE_PAIRING</code>)\nThe Paste key. (<code>APPCOMMAND_PASTE</code>)\nPause the current state or application (as appropriate).\nMove picture-in-picture window down. (<code>VK_PINP_DOWN</code>)\nMove picture-in-picture window. (<code>VK_PINP_MOVE</code>)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (<code>VK_PINP_UP</code>)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)\nReset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)\nIncrease media playback speed. (<code>VK_PLAY_SPEED_UP</code>)\nToggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …\nThe <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.\nPrint the current document or message. (<code>APPCOMMAND_PRINT</code>)\nInitiate print-screen function.\nThe properties (Props) key.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (<code>APPCOMMAND_REDO</code>)\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe Roman characters function key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nSave the current document or message. (<code>APPCOMMAND_SAVE</code>)\nToggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)\nAdvance display screen mode to next available mode. (…\nToggle between scrolling and cursor movement modes.\nToggle display of device settings screen. (<code>VK_SETTINGS</code>, …\nUsed to enable shift modifier function for interpreting …\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\nUsed in text to insert a space between words. Usually …\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)\nThe Standby key. This key turns off the display and places …\nToggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)\nUsed to enable “super” modifier function for …\nThe Symbol modifier key (used on some virtual keyboards).\nSwitch to viewing TV. (<code>KEYCODE_TV</code>)\nTV 3D Mode. (<code>KEYCODE_3D_MODE</code>)\nToggle between antenna and cable input. (…\nAudio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)\nContents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)\nSwitch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)\nSwitch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…\nSwitch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…\nSwitch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…\nSwitch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…\nSwitch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)\nSwitch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)\nSwitch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)\nSwitch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)\nSwitch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)\nMedia context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)\nToggle network. (<code>KEYCODE_TV_NETWORK</code>)\nNumber entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)\nToggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)\nRadio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)\nSatellite. (<code>KEYCODE_TV_SATELLITE</code>)\nBroadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)\nCommunication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)\nToggle between available satellites. (…\nAnalog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)\nDigital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)\nTimer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)\nThe Horizontal Tabulation <code>Tab</code> key.\nToggle display of teletext, if available (<code>VK_TELETEXT</code>, …\nUndo the last action. (<code>APPCOMMAND_UNDO</code>)\nAn unidentified key.\nAdvance video mode to next available mode. (…\nThe WakeUp key. (<code>KEYCODE_WAKEUP</code>)\nCause device to identify itself in some manner, e.g., …\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)\nThe ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)\nToggle between full-screen and scaled content, or alter …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe cursor has a defined position.\nThe back mouse button.\nThe button of a mouse.\nA mouse button was pressed.\nA mouse button was released.\nThe mouse cursor state.\nThe mouse cursor entered the window.\nThe mouse cursor left the window.\nThe mouse cursor was moved\nA mouse event.\nThe forward mouse button.\nThe interaction of a mouse cursor.\nThe left mouse button.\nA line-based scroll movement\nThe middle (wheel) button.\nSome other button.\nA pixel-based scroll movement\nThe right mouse button.\nA scroll movement.\nThe cursor is currently unavailable (i.e. out of bounds or …\nThe mouse wheel was scrolled.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the <code>Cursor</code> is over the given <code>bounds</code>.\nReturns the absolute position of the <code>Cursor</code>, if available.\nReturns the relative position of the <code>Cursor</code> from the given …\nReturns the relative position of the <code>Cursor</code> inside the …\nReturns the absolute position of the <code>Cursor</code>, if available …\nThe scroll movement.\nThe new position of the mouse cursor\nThe number of horizontal lines scrolled\nThe number of horizontal pixels scrolled\nThe number of vertical lines scrolled\nThe number of vertical pixels scrolled\nA generic overlay.\nBuild and show dropdown menus.\nThe appearance of a menu.\nA list of selectable options.\nThe local state of a <code>Menu</code>.\nThe supported style of the <code>StyleSheet</code>.\nThe style sheet of a menu.\nProduces the <code>Appearance</code> of a menu.\nThe <code>Background</code> of the menu.\nThe <code>Border</code> of the menu.\nThe background <code>Color</code> of a selected option in the menu.\nThe text <code>Color</code> of a selected option in the menu.\nThe text <code>Color</code> of the menu.\nThe settings of an application.\nIf set to true, the renderer will try to perform …\nThe default <code>Font</code> to be used.\nThe text size that will be used by default.\nIf set to true the application will exit when the main …\nThe data needed to initialize the Application.\nThe fonts to load on boot.\nReturns the argument unchanged.\nThe identifier of the application.\nCalls <code>U::from(self)</code>.\nThe window settings.\nInitialize <code>Application</code> settings using the given data.\nA request to listen to external events.\nCreates a <code>Subscription</code> that publishes the events sent from …\nReturns a <code>Subscription</code> that will call the given function …\nReturns a <code>Subscription</code> that will create and asynchronously …\nReturns a <code>Subscription</code> that will create and asynchronously …\nThe style of an application.\nA simple box.\nThe style of a button.\nThe style of a checkbox.\nColored text.\nThe style of a container.\nA <code>Theme</code> with a customized <code>Palette</code>.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nThe built-in dark variant of a <code>Palette</code>.\nThe danger style.\nThe danger style.\nThe built-in dark variant.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nNo filtering to the rendered SVG.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nThe destructive style.\nThe built-in light variant of a <code>Palette</code>.\nThe built-in light variant.\nThe style of a menu.\nA color palette.\nThe style of a pane grid.\nThe style of a pick list.\nThe positive style.\nThe primary style.\nThe primary style.\nThe primary style.\nThe style of a progress bar.\nThe style of a radio button.\nThe style of a rule.\nThe style of a scrollable.\nThe secondary style.\nThe secondary style.\nThe style of a slider.\nThe success style.\nThe success style.\nSvg\nThe style of text.\nThe text style.\nThe style of a text input.\nThe style of a text input.\nA built-in theme.\nThe style of a toggler.\nNo style.\nThe background <code>Color</code> of the <code>Palette</code>.\nCreates a custom <code>Button</code> style variant.\nCreates a custom <code>Scrollable</code> theme.\nCreates a custom <code>Svg</code> style.\nThe danger <code>Color</code> of the <code>Palette</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a <code>Custom</code> theme from the given <code>Palette</code>.\nDefine the colors of a theme.\nThe primary <code>Color</code> of the <code>Palette</code>.\nThe success <code>Color</code> of the <code>Palette</code>.\nThe text <code>Color</code> of the <code>Palette</code>.\nCreates a <code>Custom</code> theme from the given <code>Palette</code> with a …\nA set of background colors.\nA set of danger colors.\nThe built-in dark variant of an <code>Extended</code> palette.\nThe built-in light variant of an <code>Extended</code> palette.\nAn extended set of colors generated from a <code>Palette</code>.\nRecommended background, icon, and text <code>Color</code>.\nA color palette.\nA set of primary colors.\nA set of secondary colors.\nA set of success colors.\nThe background <code>Color</code> of the <code>Palette</code>.\nThe set of background colors.\nThe base background color.\nThe base primary color.\nThe base secondary color.\nThe base success color.\nThe base danger color.\nThe background color.\nThe danger <code>Color</code> of the <code>Palette</code>.\nThe set of danger colors.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates an <code>Extended</code> palette from a simple <code>Palette</code>.\nGenerates a set of <code>Primary</code> colors from the base, …\nGenerates a set of <code>Secondary</code> colors from the base and text …\nGenerates a set of <code>Success</code> colors from the base, …\nGenerates a set of <code>Danger</code> colors from the base, …\nThe icon color, which defaults to the text color.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the palette is dark or not.\nCreates a new <code>Pair</code> from a background <code>Color</code> and some text …\nGenerates a set of <code>Background</code> colors from the base and …\nThe primary <code>Color</code> of the <code>Palette</code>.\nThe set of primary colors.\nThe set of secondary colors.\nA stronger version of the base background color.\nA stronger version of the base primary color.\nA stronger version of the base secondary color.\nA stronger version of the base success color.\nA stronger version of the base danger color.\nThe success <code>Color</code> of the <code>Palette</code>.\nThe set of success colors.\nThe text <code>Color</code> of the <code>Palette</code>.\nThe text color.\nA weaker version of the base background color.\nA weaker version of the base primary color.\nA weaker version of the base secondary color.\nA weaker version of the base success color.\nA weaker version of the base danger color.\nA <code>Duration</code> type to represent a span of time, typically …\nA measurement of a monotonically nondecreasing clock. …\nThe maximum duration.\nThe duration of one microsecond.\nThe duration of one millisecond.\nThe duration of one nanosecond.\nThe duration of one second.\nA duration of zero time.\nComputes the absolute difference between <code>self</code> and <code>other</code>.\nPanics\nReturns the total number of whole microseconds contained …\nReturns the total number of whole milliseconds contained …\nReturns the number of milliseconds contained by this …\nReturns the number of milliseconds contained by this …\nReturns the total number of nanoseconds contained by this …\nReturns the number of <em>whole</em> seconds contained by this …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nChecked <code>Duration</code> addition. Computes <code>self + other</code>, …\nChecked <code>Duration</code> division. Computes <code>self / other</code>, …\nReturns the amount of time elapsed from another instant to …\nChecked <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nChecked <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nDivide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.\nDivide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.\nDivide <code>Duration</code> by <code>f32</code>.\nDivide <code>Duration</code> by <code>f64</code>.\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed since this instant.\nReturns a <code>Subscription</code> that produces messages at a set …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Duration</code> from the specified number of days.\nCreates a new <code>Duration</code> from the specified number of hours.\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of whole …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of weeks.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this <code>Duration</code> spans no time.\nMultiplies <code>Duration</code> by <code>f32</code>.\nMultiplies <code>Duration</code> by <code>f64</code>.\nCreates a new <code>Duration</code> from the specified number of whole …\nReturns an instant corresponding to “now”.\nSaturating <code>Duration</code> addition. Computes <code>self + other</code>, …\nReturns the amount of time elapsed from another instant to …\nSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nReturns the amount of time elapsed from another instant to …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in …\nThe checked version of <code>from_secs_f32</code>.\nThe checked version of <code>from_secs_f64</code>.\nA touch interaction.\nA unique identifier representing a finger on a touch …\nA touch interaction was ended.\nA touch interaction was canceled.\nAn on-going touch interaction was moved.\nA touch interaction was started.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA generic widget that produces a message when pressed.\nA widget capable of drawing 2D graphics.\nA box that can be checked.\nA container that distributes its contents vertically.\nA widget for searching and selecting a single value from a …\nA reusable, custom widget that uses The Elm Architecture.\nAn element decorating some content.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe default height of a <code>ProgressBar</code>.\nThe default height of a <code>Slider</code>.\nThe default padding of a <code>PickList</code>.\nThe default size of a <code>Radio</code> button.\nThe default size of a <code>Toggler</code>.\nThe default spacing of a <code>Radio</code> button.\nThe default width of a <code>VerticalSlider</code>.\nThe built-in dark variant.\nThe type of event this <code>Component</code> handles internally.\nA frame that displays an image while keeping aspect ratio.\nA widget that only rebuilds its contents when necessary.\nThe built-in light variant.\nEmit messages on mouse events.\nA collection of panes distributed using either vertical or …\nA widget for selecting a single value from a list of …\nA bar that displays progress.\nA circular button representing a choice.\nThe default graphics renderer for <code>iced</code>.\nA widget that is aware of its dimensions.\nA container that distributes its contents horizontally.\nDisplay a horizontal or vertical rule for dividing content.\nA widget that can vertically display an infinite amount of …\nAn horizontal bar and a handle that selects a single value …\nAn amount of empty space.\nThe internal state of this <code>Component</code>.\nA vector graphics image.\nA paragraph.\nA multi-line text input.\nA field that can be filled with text.\nA built-in theme.\nA widget that applies any <code>Theme</code> to its contents.\nA toggler widget.\nAn element to display a widget over another.\nAn vertical bar and a handle that selects a single value …\nSets the horizontal alignment of the contents of the <code>Column</code>…\nSets the vertical alignment of the contents of the <code>Row</code> .\nSets the content alignment for the horizontal axis of the …\nSets the content alignment for the vertical axis of the …\nSets the border radius of the image.\nDefines breakpoints to visibly mark on the slider.\nAllow your users to perform actions by pressing a button.\nCreates a new <code>Button</code> with the provided content.\nDraw 2D graphics for your users.\nCreates a new <code>Canvas</code>.\nCenters the contents in the horizontal axis of the …\nCenters the contents in the vertical axis of the <code>Container</code>.\nShow toggle controls using checkboxes.\nCreates a new <code>Checkbox</code>.\nCreates a new <code>Column</code> with the given children.\nCreates a <code>Column</code> with the given children.\nDisplay a dropdown list of searchable and selectable …\nCreates a new <code>ComboBox</code>.\nTurns an implementor of <code>Component</code> into an <code>Element</code> that can …\nDecorate content and apply alignment.\nCreates a new <code>Container</code> with the provided content.\nSets the <code>ContentFit</code> of the <code>Svg</code>.\nSets the <code>ContentFit</code> of the <code>Image</code>.\nSets the <code>Direction</code> of the <code>Scrollable</code> .\nDraws the <code>TextInput</code> with the given <code>Renderer</code>, overriding its\nSets the <code>FilterMethod</code> of the <code>Image</code>.\nFocuses the next focusable widget.\nFocuses the previous focusable widget.\nSets the <code>Renderer::Font</code> of the text of the <code>Checkbox</code>.\nSets the <code>Renderer::Font</code> of the <code>ComboBox</code>.\nSets the font of the <code>PickList</code>.\nSets the text font of the <code>Radio</code> button.\nSets the <code>Font</code> of the <code>TextEditor</code>.\nSets the <code>Font</code> of the <code>TextInput</code>.\nSets the <code>Renderer::Font</code> of the text of the <code>Toggler</code>\nSets the font of the <code>Tooltip</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Svg</code> that will display the contents of the …\nSets the gap between the content and its <code>Tooltip</code>.\nSets the <code>Handle</code> of the <code>PickList</code>.\nSets the height of the <code>Column</code>.\nSets the height of the <code>Row</code>.\nSets the height of the <code>Button</code>.\nSets the height of the <code>Container</code>.\nSets the height of the <code>PaneGrid</code>.\nSets the height of the <code>ProgressBar</code>.\nSet the height of the rule Will not be applied if it is …\nSets the height of the <code>Scrollable</code>.\nSets the height of the <code>Slider</code>.\nSets the height of the <code>VerticalSlider</code>.\nSets the height of the <code>Svg</code>.\nSets the height of the <code>Image</code> boundaries.\nSets the height of the <code>Canvas</code>.\nHighlights the <code>TextEditor</code> with the given <code>Highlighter</code> and a …\nCreates a horizontal <code>Rule</code> with the given height.\nCreates a horizontal <code>Rule</code> with the given height.\nCreates a new horizontal <code>Space</code> with the given <code>Length</code>.\nSets the <code>Icon</code> of the <code>Checkbox</code>.\nSets the <code>text_input::Icon</code> of the <code>ComboBox</code>.\nSets the <code>Icon</code> of the <code>TextInput</code>.\nSets the <code>Id</code> of the <code>Button</code>.\nSets the <code>Id</code> of the <code>Scrollable</code>.\nSets the <code>Id</code> of the <code>TextInput</code>.\nDisplay images in your user interface.\nCreates a new <code>Image</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUse widgets that can provide hints to ensure continuity.\nCreates a new <code>keyed::Column</code> with the given children.\nCreates a <code>Column</code> with the given children.\nLays out the <code>TextInput</code>, overriding its <code>Value</code> if provided.\nCreates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …\nSets the <code>LineHeight</code> of the <code>ComboBox</code>.\nSets the <code>text::LineHeight</code> of the <code>TextInput</code>.\nSets the maximum height of the <code>Container</code>.\nSets the maximum width of the <code>Column</code>.\nSets the maximum width of the <code>Container</code>.\nA container intercepting mouse events.\nCreates an empty <code>Column</code>.\nCreates a <code>MouseArea</code> with the given content.\nCreates an empty <code>Row</code>.\nCreates an empty <code>Themer</code> that applies the given <code>Theme</code> to …\nCreates a new <code>Button</code> with the given content.\nCreates a new <code>Checkbox</code>.\nCreates a new <code>ComboBox</code> with the given list of options, a …\nCreates an empty <code>Container</code>.\nCreates a <code>PaneGrid</code> with the given <code>State</code> and view function.\nCreates a new <code>PickList</code> with the given list of options, the …\nCreates a new <code>ProgressBar</code>.\nCreates a new <code>Radio</code> button.\nCreates a new <code>Scrollable</code>.\nCreates a new <code>Slider</code>.\nCreates new <code>TextEditor</code> with the given <code>Content</code>.\nCreates a new <code>TextInput</code>.\nCreates a new <code>Toggler</code>.\nCreates a new <code>Tooltip</code>.\nCreates a new <code>VerticalSlider</code>.\nCreates a new <code>Responsive</code> widget with a closure that …\nCreates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …\nCreates a new <code>Svg</code> from the given <code>Handle</code>.\nCreates an amount of empty <code>Space</code> with the given width and …\nCreates a new <code>Image</code> with the given path.\nCreates a new <code>Canvas</code>.\nSets the message that should be produced when some action …\nSets the message that will be produced when a <code>Pane</code> of the …\nSets the message that will be produced when the outside …\nThe message to emit when a drag is initiated.\nEnables the drag and drop interactions of the <code>PaneGrid</code>, …\nSets the message that should be produced when some text is …\nSets the message that should be produced when some text is …\nThe message to emit on a middle button press.\nThe message to emit on a middle button release.\nThe message to emit on mouse enter.\nThe message to emit on mouse exit.\nSets the message that will be produced when an option of …\nSets the message that should be produced when some text is …\nThe message to emit on a left button press.\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nThe message to emit on a left button release.\nSets the release message of the <code>Slider</code>. This is called …\nSets the release message of the <code>VerticalSlider</code>. This is …\nEnables the resize interactions of the <code>PaneGrid</code>, which will\nThe message to emit on a right button press.\nThe message to emit on a right button release.\nSets a function to call when the <code>Scrollable</code> is scrolled.\nSets the message that should be produced when the <code>TextInput</code>…\nUpdate the <code>Component</code> state based on the provided <code>Operation</code>\nDisplay interactive elements on top of other widgets.\nSets the <code>Padding</code> of the <code>Column</code>.\nSets the <code>Padding</code> of the <code>Row</code>.\nSets the <code>Padding</code> of the <code>Button</code>.\nSets the <code>Padding</code> of the <code>ComboBox</code>.\nSets the <code>Padding</code> of the <code>Container</code>.\nSets the <code>Padding</code> of the <code>PickList</code>.\nSets the <code>Padding</code> of the <code>TextEditor</code>.\nSets the <code>Padding</code> of the <code>TextInput</code>.\nSets the padding of the <code>Tooltip</code>.\nLet your users split regions of your application and …\nConverts the <code>TextInput</code> into a secure password input.\nDisplay a dropdown list of selectable values.\nCreates a new <code>PickList</code>.\nSets the placeholder of the <code>PickList</code>.\nProvide progress feedback to your users.\nCreates a new <code>ProgressBar</code>.\nAdds an element to the <code>Column</code>.\nAdds an <code>Element</code> to the <code>Row</code>.\nCreate choices using radio buttons.\nCreates a new <code>Radio</code>.\nCreates a new <code>Responsive</code> widget with a closure that …\nCreates a new <code>Row</code> with the given children.\nCreates a <code>Row</code> with the given children.\nDisplay a horizontal or vertical rule for dividing content.\nNavigate an endless amount of content with a scrollbar.\nCreates a new <code>Scrollable</code> with the provided content.\nSets the size of the <code>Checkbox</code>.\nSets the text sixe of the <code>ComboBox</code>.\nSets the size of the <code>Radio</code> button.\nSets the text size of the <code>TextInput</code>.\nSets the size of the <code>Toggler</code>.\nSets the size of the text of the <code>Tooltip</code>.\nDisplay an interactive selector of a single value from a …\nCreates a new <code>Slider</code>.\nSets whether the <code>Tooltip</code> is snapped within the viewport.\nDistribute content vertically.\nSets the vertical spacing <em>between</em> elements.\nSets the horizontal spacing <em>between</em> elements.\nSets the spacing between the <code>Checkbox</code> and the text.\nSets the spacing <em>between</em> the panes of the <code>PaneGrid</code>.\nSets the spacing between the <code>Radio</code> button and the text.\nSets the spacing between the <code>Toggler</code> and the text.\nSets the step size of the <code>Slider</code>.\nSets the step size of the <code>VerticalSlider</code>.\nSets the style variant of this <code>Button</code>.\nSets the style of the <code>Checkbox</code>.\nSets the style of the <code>ComboBox</code>.\nSets the style of the <code>Container</code>.\nSets the style of the <code>PaneGrid</code>.\nSets the style of the <code>PickList</code>.\nSets the style of the <code>ProgressBar</code>.\nSets the style of the <code>Radio</code> button.\nSets the style of the <code>Rule</code>.\nSets the style of the <code>Scrollable</code> .\nSets the style of the <code>Slider</code>.\nSets the style of the <code>TextEditor</code>.\nSets the style of the <code>TextInput</code>.\nSets the style of the <code>Toggler</code>.\nSets the style of the <code>Tooltip</code>.\nSets the style of the <code>VerticalSlider</code>.\nSets the style variant of this <code>Svg</code>.\nDisplay vector graphics in your application.\nCreates a new <code>Svg</code> widget from the given <code>Handle</code>.\nSymbolic icons inherit their color from the renderer if a …\nDraw and interact with text.\nCreates a new <code>Text</code> widget with the provided content.\nSets the horizontal alignment of the text of the <code>Toggler</code>\nDisplay a multi-line text input for text editing.\nCreates a new <code>TextEditor</code>.\nDisplay fields that can be filled with text.\nCreates a new <code>TextInput</code>.\nSets the style of the <code>TextInput</code> of the <code>ComboBox</code>.\nSets the text <code>text::LineHeight</code> of the <code>Checkbox</code>.\nSets the text <code>text::LineHeight</code> of the <code>PickList</code>.\nSets the text <code>text::LineHeight</code> of the <code>Radio</code> button.\nSets the text <code>text::LineHeight</code> of the <code>Toggler</code>.\nSets the <code>text::Shaping</code> strategy of the <code>Checkbox</code>.\nSets the <code>text::Shaping</code> strategy of the <code>PickList</code>.\nSets the <code>text::Shaping</code> strategy of the <code>Radio</code> button.\nSets the <code>text::Shaping</code> strategy of the <code>Toggler</code>.\nSets the <code>text::Shaping</code> strategy of the <code>Tooltip</code>.\nSets the text size of the <code>Checkbox</code>.\nSets the text size of the <code>PickList</code>.\nSets the text size of the <code>Radio</code> button.\nSets the text size o the <code>Toggler</code>.\nSets the <code>text::Wrap</code> mode of the <code>Checkbox</code>.\nSets the <code>text::Wrap</code> mode of the <code>PickList</code>.\nSets the <code>text::Wrap</code> mode of the <code>Radio</code> button.\nSets the <code>text::Wrap</code> mode of the <code>Toggler</code>.\nUse the built-in theme and styles.\nA widget that applies any <code>Theme</code> to its contents.\nShow toggle controls using togglers.\nCreates a new <code>Toggler</code>.\nDisplay a widget over another.\nCreates a new <code>Tooltip</code> with the provided content, tooltip …\nProcesses an <code>Event</code> and updates the <code>Component</code> state …\nCreates a vertical <code>Rule</code> with the given width.\nCreates a vertical <code>Rule</code> with the given width.\nDisplay an interactive selector of a single value from a …\nCreates a new <code>VerticalSlider</code>.\nCreates a new vertical <code>Space</code> with the given <code>Length</code>.\nProduces the widgets of the <code>Component</code>, which may trigger …\nSets the width of the <code>Column</code>.\nSets the width of the <code>Row</code>.\nSets the width of the <code>Button</code>.\nSets the width of the <code>Checkbox</code>.\nSets the width of the <code>ComboBox</code>.\nSets the width of the <code>Container</code>.\nSets the width of the <code>PaneGrid</code>.\nSets the width of the <code>PickList</code>.\nSets the width of the <code>ProgressBar</code>.\nSets the width of the <code>Radio</code> button.\nSet the width of the rule Will not be applied if it is …\nSets the width of the <code>Scrollable</code>.\nSets the width of the <code>Slider</code>.\nSets the width of the <code>TextInput</code>.\nSets the width of the <code>Toggler</code>.\nSets the width of the <code>VerticalSlider</code>.\nSets the width of the <code>Svg</code>.\nSets the width of the <code>Image</code> boundaries.\nSets the width of the <code>Canvas</code>.\nCreates a <code>Column</code> with the given elements.\nCreates a <code>Row</code> with the given elements.\nCreates an amount of vertical <code>Space</code>.\nCreates an amount of horizontal <code>Space</code>.\nThe appearance of a button.\nA generic widget that produces a message when pressed.\nThe local state of a <code>Button</code>.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a button.\nProduces the active <code>Appearance</code> of a button.\nThe <code>Background</code> of the button.\nThe <code>Border</code> of the buton.\nThe border <code>Color</code> of the button.\nThe border radius of the button.\nThe border width of the button.\nProduces the disabled <code>Appearance</code> of a button.\nDraws a <code>Button</code>.\nProduces a <code>Command</code> that focuses the <code>Button</code> with the given …\nFocuses the <code>Button</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nProduces the hovered <code>Appearance</code> of a button.\nThe icon <code>Color</code> of the button.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the <code>Button</code> is currently focused or not.\nReturns whether the <code>Button</code> is currently hovered or not.\nComputes the layout of a <code>Button</code>.\nReturns the <code>mouse::Interaction</code> of a <code>Button</code>.\nCreates a new <code>State</code>.\nProduces the pressed <code>Appearance</code> of a button.\nThe <code>Shadow</code> of the butoon.\nThe amount of offset to apply to the shadow of the button.\nThe text <code>Color</code> of the button.\nUnfocuses the <code>Button</code>.\nProcesses the given <code>Event</code> and updates the <code>State</code> of a <code>Button</code>\nA bevelled corner.\nThe stroke for each sub-path does not extend beyond its …\nA simple cache that stores generated <code>Geometry</code> to avoid …\nA widget capable of drawing 2D graphics.\nA <code>Canvas</code> event.\nThe style used to fill geometry.\nThe kind of geometry this renderer can draw.\nA fill which linearly interpolates colors along a …\nA <code>Gradient</code> color.\nA keyboard event.\nThe shape used at the end of open subpaths when they are …\nThe dash pattern used when stroking the line.\nThe shape used at the corners of paths or basic shapes …\nA linear gradient interpolates colors along a direction …\nA sharp corner.\nA mouse event.\nAn immutable set of points that may or may not be …\nThe state and logic of a <code>Canvas</code>.\nA renderer capable of drawing some <code>Self::Geometry</code>.\nAt the end of each sub-path, the shape representing the …\nA round corner.\nA solid <code>Color</code>.\nAt the end of each sub-path, the shape representing the …\nThe internal state mutated by the <code>Program</code>.\nThe style of a stroke.\nThe coloring style of some drawing.\nA bunch of text that can be drawn to a canvas\nA touch event.\nReturns the coordinate of the center of the <code>Frame</code>.\nCreates a new <code>Path</code> representing a circle given its center …\nClears the <code>Cache</code>, forcing a redraw the next time it is …\nThe color of the text\nThe contents of the text\nDraws the given layers of <code>Self::Geometry</code>.\nDraws the state of the <code>Program</code>, producing a bunch of …\nDraws <code>Geometry</code> using the provided closure and stores it in …\nComputes the <code>Path</code>s of the <code>Text</code> and draws them using the …\nHandle events of a canvas.\nFill <code>Geometry</code> with a certain style.\nDraws the given <code>Path</code> on the <code>Frame</code> by filling it with the …\nDraws an axis-aligned rectangle given its top-left corner …\nDraws the characters of the given <code>Text</code> on the <code>Frame</code>, …\nThe font of the text\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA gradient that can be used as a fill for some geometry.\nReturns the height of the <code>Frame</code>.\nThe horizontal alignment of the text\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Path</code> representing a line segment given its …\nThe shape to be used at the end of open subpaths when they …\nThe dash pattern used when stroking the line.\nThe line height of the text.\nThe shape to be used at the corners of paths or basic …\nReturns the current mouse interaction of the <code>Program</code>.\nCreates a new empty <code>Cache</code>.\nCreates a new <code>Path</code> with the provided closure.\nThe offset of <code>LineDash::segments</code> to start the pattern.\nPacks the <code>Gradient</code> for use in shader code.\nBuild different kinds of 2D shapes.\nThe position of the text relative to the alignment …\nReturns the internal <code>lyon_path::Path</code>.\nCreates a new <code>Path</code> representing a rectangle given its …\nApplies a rotation in radians to the current transform of …\nThe fill rule defines how to determine what is inside and …\nApplies a uniform scaling to the current transform of the …\nApplies a non-uniform scaling to the current transform of …\nThe alternating lengths of lines and gaps which describe …\nThe shaping strategy of the text.\nReturns the dimensions of the <code>Frame</code>.\nThe size of the text\nCreate lines from a <code>Path</code> and assigns them various …\nDraws the stroke of the given <code>Path</code> on the <code>Frame</code> with the …\nThe color or gradient of the fill.\nThe color or gradient of the stroke.\nReturns the current <code>Path</code> with the given transform applied …\nApplies a translation to the current transform of the <code>Frame</code>…\nUpdates the <code>State</code> of the <code>Program</code>.\nThe vertical alignment of the text\nReturns the width of the <code>Frame</code>.\nThe distance between the two edges of the stroke.\nExecutes the given drawing operations within a <code>Rectangle</code> …\nSets the color of the <code>Stroke</code>.\nSets the <code>LineCap</code> of the <code>Stroke</code>.\nSets the <code>LineJoin</code> of the <code>Stroke</code>.\nStores the current transform of the <code>Frame</code> and executes the …\nSets the width of the <code>Stroke</code>.\nThe <code>Event</code> was handled and processed by a widget.\nA <code>Canvas</code> event.\nThe <code>Event</code> was <strong>NOT</strong> handled by any widget.\nA keyboard event.\nA mouse event.\nThe status of an <code>Event</code> after being processed.\nA touch event.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMerges two <code>Status</code> into one.\nThe style used to fill geometry.\nA <code>Gradient</code> color.\nThe fill rule defines how to determine what is inside and …\nA solid <code>Color</code>.\nThe coloring style of some drawing.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe fill rule defines how to determine what is inside and …\nThe color or gradient of the fill.\nA fill which linearly interpolates colors along a …\nA linear gradient.\nA linear gradient interpolates colors along a direction …\nPacked <code>Gradient</code> data for use in shader code.\nAdds a new <code>ColorStop</code>, defined by an offset and a color, to …\nAdds multiple <code>ColorStop</code>s to the gradient.\nThe absolute ending position of the gradient.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Linear</code> builder.\nCreates a new <code>Packed</code> gradient for use in shader code.\nPacks the <code>Gradient</code> for use in shader code.\nThe absolute starting position of the gradient.\n<code>ColorStop</code>s along the linear gradient direction.\nA segment of a differentiable curve.\nA <code>Path</code> builder.\nAn immutable set of points that may or may not be …\nBuild and draw curves.\nAdds an <code>Arc</code> to the <code>Path</code> from <code>start_angle</code> to <code>end_angle</code> in a …\nAdds a circular arc to the <code>Path</code> with the given control …\nAdds a cubic Bézier curve to the <code>Path</code> given its two …\nBuilds the <code>Path</code> of this <code>Builder</code>.\nThe center of the arc.\nAdds a circle to the <code>Path</code> given its center coordinate and …\nCloses the current sub-path in the <code>Path</code> with a straight …\nAdds an ellipse to the <code>Path</code> using a clockwise direction.\nThe end of the segment’s angle in radians, clockwise …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConnects the last point in the <code>Path</code> to the given <code>Point</code> …\nMoves the starting point of a new sub-path to the given …\nCreates a new <code>Builder</code>.\nAdds a quadratic Bézier curve to the <code>Path</code> given its …\nThe radius of the arc.\nAdds a rectangle to the <code>Path</code> given its top-left corner …\nThe start of the segment’s angle in radians, clockwise …\nA segment of a differentiable curve.\nAn elliptical <code>Arc</code>.\nThe center of the arc.\nThe center of the arc.\nThe end of the segment’s angle in radians, clockwise …\nThe end of the segment’s angle in radians, clockwise …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe radii of the arc’s ellipse. The horizontal and …\nThe radius of the arc.\nThe clockwise rotation of the arc’s ellipse.\nThe start of the segment’s angle in radians, clockwise …\nThe start of the segment’s angle in radians, clockwise …\nFlag parameters for arcs as described by the SVG …\nAn alias for <code>usize</code>.\nA view over a contiguous storage of custom attributes.\nInterface for objects storing custom attributes associated …\nAn alias for a slice of <code>f32</code> values.\nA beveled corner is to be used to join path segments. The …\nThe default builder for <code>Path</code>.\nA builder for <code>Path</code> with custom attributes.\nThe stroke for each sub-path does not extend beyond its …\nID of a control point in a path.\nID of an endpoint point in a path.\nRepresents an event or edge of path.\nRefers to an event in a path.\nThe fill rule defines how to determine what is inside and …\nA path event representing endpoints and control points as …\nAn iterator of endpoint and control point ids for <code>Path</code> and …\nA view over a sequence of endpoint IDs forming a polygon.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nLine cap as defined by the SVG specification.\nLine join as defined by the SVG specification.\nA sharp corner is to be used to join path segments.\nSame as a miter join, but if the miter limit is exceeded, …\nAn empty attribute slice.\nA simple path data structure.\nAn object that stores multiple paths contiguously.\nA view on a <code>PathBuffer</code>.\nThe commands of a path encoded in a single array using IDs …\nA view over <code>PathCommands</code>.\nA path event representing endpoints and control points as …\nA view on a <code>Path</code>.\nA view over a sequence of endpoints forming a polygon.\nInterface for types types (typically endpoints and control …\nInterface for objects storing endpoints and control points …\nAn iterator of over a <code>Path</code> traversing the path in reverse.\nAt each end of each sub-path, the shape representing the …\nA round corner is to be used to join path segments.\nThe positive or negative side of a vector or segment.\nAt the end of each sub-path, the shape representing the …\nThe two possible orientations for the edges of a shape to …\nReturns a view on the path commands.\nReturns a view on this <code>Path</code>.\nReturns a slice over an endpoint’s custom attributes.\nReturns a slice over an endpoint’s custom attributes.\nPath building utilities.\nCreates a PathCommandsBuilder to create path commands.\nCreates a Builder to build a path.\nCreates a BuilderWithAttributes to build a path with …\nA generic representation for paths that allow more control …\nReturns the event for a given event ID.\nReturns the event for a given event ID.\nReturns the event for a given event ID.\nReturns the event for a given event ID.\nReturns an iterator over the path, with endpoints and …\nReturns the first endpoint and its custom attributes if …\nIterate on a flattened approximation of the path with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the endpoint’s custom attributes as a slice of …\nIterates over the endpoint and control point ids of the …\nIterates over the endpoint and control point ids of the …\nReturns an iterator of <code>IdEvent</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBuilds a <code>Path</code> from This iterator.\nReturns whether the path buffer is empty.\nReturns whether the path buffer is empty.\nReturns an iterator over the path commands.\nReturns an iterator over the path commands.\nIterates over the entire <code>Path</code>, ignoring custom attributes.\nIterates over the path.\nReturns an iterator of <code>Event&lt;&amp;T&gt;</code>.\nIterates over the entire <code>Path</code> with custom attributes.\nIterates over the entire <code>Path</code> with custom attributes.\nTools to iterate over paths.\nOf the four candidate arc sweeps, two will represent an …\nReturns the last endpoint and its custom attributes if any.\nReturns the number of paths in the path buffer.\nReturns the number of paths in the path buffer.\nf32 version of the lyon_geom types used everywhere. Most …\nCreates an Empty <code>Path</code>.\nReturns the next event id within the path.\nReturns the next event id within the path.\nReturns the next event id within the sub-path.\nReturns the next event id within the path.\nReturns the number of float attributes per endpoint.\nThe default path data structure.\nA container to store multiple paths contiguously.\nReturns an iterator of <code>PathEvent</code>.\nReturns a view on a path made of these commands with …\nSpecific path types for polygons.\nReturns a reversed version of this path in the form of an …\nReturns a reversed version of this path in the form of an …\nCreates an WithSvg to build a path with a rich set of …\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\n<code>lyon_path</code> traits reexported here for convenience.\nApplies a transform to all endpoints and control points of …\nThe radius of each corner of a rounded rectangle.\nBuilds a path.\nA Builder that approximates curves with successions of …\nA convenience wrapper for <code>PathBuilder</code> without custom …\nThe base path building interface.\nThe type of object that is created by this builder.\nA path building interface that tries to stay close to SVG…\nBuilds a path with a transformation applied.\nImplements an SVG-like building interface on top of a …\nAdds a sub-path containing a circle.\nAdds a sub-path containing a circle.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single point.\nAdds a sub-path containing a single point.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds an elliptical arc.\nStarts a new sub-path at a given position.\nStarts a new sub-path at a given position.\nBuilds a path object, consuming the builder.\nBuilds a path object, consuming the builder.\nEnds the current sub-path by connecting it back to its …\nCloses the current sub path.\nCloses the current sub path.\nAdds a cubic bézier curve to the current sub-path.\nAdds a cubic bézier segment to the current sub-path.\nAdds a cubic bézier curve to the current sub-path.\nEnds the current sub path.\nEnds the current sub path.\nReturns a builder that approximates all curves with …\nReturns a builder that approximates all curves with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAdds an horizontal line segment.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdds a line segment to the current sub-path.\nAdds a line segment to the current sub-path.\nAdds a line segment to the current sub-path.\nStart a new sub-path at the given position.\nApplies the provided path event.\nApplies the provided path event.\nAdds a quadratic bézier curve to the current sub-path.\nAdds a quadratic bézier segment to the current sub-path.\nAdds a quadratic bézier curve to the current sub-path.\nEquivalent to <code>arc_to</code> in relative coordinates.\nEquivalent to <code>cubic_bezier_to</code> in relative coordinates.\nAdds an horizontal line segment in relative coordinates.\nEquivalent to <code>line_to</code> in relative coordinates.\nEquivalent to <code>move_to</code> in relative coordinates.\nEquivalent to <code>quadratic_bezier_to</code> in relative coordinates.\nAdds a vertical line segment in relative coordinates.\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nEquivalent to <code>cubic_bezier_to</code> with implicit first control …\nEquivalent to <code>quadratic_bezier_to</code> with implicit control …\nEquivalent to <code>smooth_cubic_bezier_to</code> in relative …\nEquivalent to <code>smooth_quadratic_bezier_to</code> in relative …\nReturns a builder that applies the given transformation to …\nReturns a builder that applies the given transformation to …\nAdds a vertical line segment.\nReturns a builder that support SVG commands.\nReturns a builder that support SVG commands.\nA view on a <code>PathCommands</code> buffer and two slices for …\nAn iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.\nAn iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.\nThe commands of a path encoded in a single array using IDs …\nBuilds path commands.\nA view over <code>PathCommands</code>.\nAn iterator of <code>PathEvent</code>.\nConsumes the builder and returns path commands.\nReturns an iterator over the events of the path using …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over the events of the path using IDs.\nCreates a builder without allocating memory.\nCreates a pre-allocated builder.\nAn angle in radians\nAn elliptic arc curve segment.\nFlag parameters for arcs as described by the SVG …\nA 2d curve segment defined by four points: the beginning …\nAn infinite line defined by a point and a vector.\nA line defined by the equation …\nA linear segment.\nA 2d curve segment defined by three points: the beginning …\nAlias for <code>euclid::default::Rotation2D</code>\nCommon APIs to segment types.\nAn elliptic arc curve segment using the SVG’s end-point …\nAlias for <code>euclid::default::Transform2D</code>\nAlias for <code>euclid::default::Translation2D</code>\nA 2D triangle defined by three points <code>a</code>, <code>b</code> and <code>c</code>.\nReturn the curve after the split point.\nReturn the curve after the split point.\nReturn the curve after the split point.\nReturn the segment after the split point.\nReturn the curve after the split point.\nAngle in radians\nReturns the shortest signed angle between two angles.\nCompute the length of the segment using a flattened …\nCompute the length of the segment using a flattened …\nElliptic arc related maths and tools.\nReturn the curve before the split point.\nReturn the curve before the split point.\nReturn the curve before the split point.\nReturn the segment before the split point.\nReturn the curve before the split point.\nReturns a conservative rectangle that contains the curve.\nReturns a conservative rectangle that contains the curve.\nReturn the smallest rectangle containing this segment.\nReturns the smallest rectangle the curve is contained in\nReturns the smallest rectangle that contains this triangle.\nReturns the smallest range of x that contains this curve.\nReturns the smallest range of x that contains this curve.\nReturns a conservative range of x that contains this …\nReturns the smallest range of y that contains this curve.\nReturns the smallest range of y that contains this curve.\nReturns a conservative range of y that contains this …\nReturns a triangle containing this curve segment.\nCast from one numeric representation to another.\nCreate simple circle.\nClip this segment against a rectangle.\nHorizontally clip this segment against a range of the x …\nVertically clip this segment against a range of the y axis.\nComputes the closest point on this segment to <code>p</code>.\nAnalytic solution to finding the closest point on the …\nComputes the intersection points (if any) between this …\nComputes the intersections (if any) between this segment …\nSample the derivative at t (expecting t between 0 and 1).\nSample the curve’s derivative at t (expecting t between …\nSample the curve’s derivative at t (expecting t between …\nComputes the distance between this segment and a point.\nReturns the shortest distance between this segment and a …\nSample x derivative at t (expecting t between 0 and 1).\nSample the x coordinate of the curve’s derivative at t …\nSample the x coordinate of the curve’s derivative at t …\nSample y derivative at t (expecting t between 0 and 1).\nSample the y coordinate of the curve’s derivative at t …\nSample the y coordinate of the curve’s derivative at t …\nEpsilon constants are usually not a good way to deal with …\nReturns a conservative rectangle that contains the curve.\nReturns a conservative rectangle the curve is contained in.\nReturns a conservative rectangle that contains the curve.\nReturns a conservative range of x that contains this curve.\nReturns a conservative range of x that contains this curve.\nReturns a conservative range of y that contains this curve.\nReturns a conservative range of y that contains this curve.\nComputes a “fat line” of this segment.\nComputes a “fat line” of this segment.\nReturns the flattened representation of the curve as an …\nReturns the flattened representation of the curve as an …\nReturns the flattened representation of the curve as an …\nReturns the flattened representation of the curve as an …\nFind the interval of the beginning of the curve that can …\nSwap the direction of the segment.\nSwap the direction of the segment.\nSwap the beginning and the end of the segment.\nReturns an inverted version of this segment where the …\nSwap the beginning and the end of the segment.\nApproximate the arc with a sequence of cubic bézier …\nApproximates the arc with a sequence of cubic bézier …\nApproximates the curve with sequence of line segments.\nApproximates the curve with sequence of line segments.\nApproximates the curve with sequence of line segments.\nApproximates the curve with sequence of line segments.\nApproximates the curve with sequence of line segments.\nApproximates the curve with sequence of line segments.\nApproximates the curve with sequence of line segments.\nApproximates the curve with sequence of line segments.\nCompute a flattened approximation of the curve, invoking a …\nInvokes a callback at each inflection point if any.\nReturn local x extrema or None if this curve is monotonic.\nReturn local y extrema or None if this curve is monotonic.\nInvokes a callback for each monotonic part of the segment.\nInvokes a callback for each monotonic part of the segment.\nInvokes a callback for each monotonic part of the segment.\nInvokes a callback for each monotonic part of the segment.\nApproximate the arc with a sequence of quadratic bézier …\nApproximates the arc with a sequence of quadratic bézier …\nApproximates the cubic bézier curve with sequence of …\nApproximate the arc with a sequence of quadratic bézier …\nApproximates the arc with a sequence of quadratic bézier …\nApproximates the cubic bézier curve with sequence of …\nInvokes a callback for each x-monotonic part of the …\nInvokes a callback for each x-monotonic part of the …\nInvokes a callback for each x-monotonic part of the …\nInvokes a callback for each x-monotonic part of the …\nInvokes a callback for each y-monotonic part of the …\nInvokes a callback for each y-monotonic part of the …\nInvokes a callback for each y-monotonic part of the …\nInvokes a callback for each y-monotonic part of the …\nStart of the curve.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from the SVG arc notation.\nSample the curve’s angle at t (expecting t between 0 and …\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nComputes the intersection (if any) between this segment …\nTest for triangle-triangle intersection.\nTest for triangle-segment intersection.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the curve can be approximated with a …\nReturns true if the angle is a finite number.\nReturns true if the curve can be approximated with a …\nReturns true if the curve can be approximated with a …\nReturns whether this segment is fully monotonic.\nReturns whether this segment is fully monotonic.\nReturns true if the curve can be safely approximated with …\nPer SVG spec, this arc should be rendered as a line_to …\nReturns whether this segment is monotonic on the x axis.\nReturns whether this segment is monotonic on the x axis.\nReturns whether this segment is monotonic on the y axis.\nReturns whether this segment is monotonic on the y axis.\nOf the four candidate arc sweeps, two will represent an …\nComputes the length of this segment.\nComputes the length of this segment.\nLinear interpolation between two angles, using the …\nComputes the intersection points (if any) between this …\nComputes the intersection points (if any) between this …\nComputes the intersections (if any) between this segment …\nComputes the intersections (if any) between this segment a …\nComputes the intersection points (if any) between this …\nComputes the intersections (if any) between this segment …\nComputes the intersections (if any) between this segment …\nReturn the x inflection point or None if this curve is …\nReturn the y inflection point or None if this curve is …\nComputes third mid-point of this segment.\nComputes the number of quadratic bézier segments required …\nShorthand for <code>Point::new(x, y)</code>.\nReturns this angle in the [0..2*PI[ range.\nComputes the intersection points (if any) between this …\nComputes the intersections (if any) between this segment a …\nSample the curve at t (expecting t between 0 and 1).\nSample the curve at t (expecting t between 0 and 1).\nSample the curve at t (expecting t between 0 and 1).\nSample the segment at t (expecting t between 0 and 1).\nSample the curve at t (expecting t between 0 and 1).\nSample the curve’s tangent at t (expecting t between 0 …\nChanges the segment’s length, moving destination point.\nReturns this angle in the ]-PI..PI] range.\nReturns (sin(self), cos(self)).\nShorthand for <code>Size::new(x, y)</code>.\nReturn the parameter values corresponding to a given x …\nReturn the parameter values corresponding to a given y …\nSplit this curve into two sub-curves.\nSplit this curve into two sub-curves.\nSplit this curve into two sub-curves.\nSplit this curve into two sub-segments.\nSplit this curve into two sub-curves.\nReturn the curve inside a given range of t.\nReturn the sub-curve inside a given range of t.\nReturn the sub-curve inside a given range of t.\nReturn the sub-segment inside a given range of t.\nReturn the sub-curve inside a given range of t.\nComputes the squared distance between this segment and a …\nReturned the squared distance to a point.\nReturns the shortest squared distance between this segment …\nComputes the squared length of this segment.\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\nEnd of the curve.\nConverts this arc from endpoints to center notation.\nElevate this curve to a third order bézier.\nCast angle to <code>f32</code>.\nCast angle <code>f64</code>.\nReturns the line containing this segment.\nApproximate the curve with a single quadratic bézier …\nEvaluates an upper bound on the maximum distance between …\nConvert to the SVG arc notation.\nReturns the vector between this segment’s <code>from</code> and <code>to</code> …\n[Not implemented] Applies the transform to this triangle …\nApplies the transform to this curve and returns the …\nApplies the transform to this segment and returns the …\nApplies the transform to this curve and returns the …\nFallible cast from one numeric representation to another.\nShorthand for <code>Vector::new(x, y)</code>.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nSample x at t (expecting t between 0 and 1).\nSample the x coordinate of the curve at t (expecting t …\nSample the x coordinate of the segment at t (expecting t …\nSample the x coordinate of the curve at t (expecting t …\nThe <code>x</code> (traditionally, horizontal) coordinate.\nFind the advancement of the x-most position in the curve.\nFind the advancement of the x-most position in the curve.\nFind the x-least position in the curve.\nFind the advancement of the x-least position in the curve.\nSample y at t (expecting t between 0 and 1).\nSample the y coordinate of the curve at t (expecting t …\nSample the y coordinate of the segment at t (expecting t …\nSample the y coordinate of the curve at t (expecting t …\nThe <code>y</code> (traditionally, vertical) coordinate.\nFind the advancement of the y-most position in the curve.\nFind the advancement of the y-most position in the curve.\nFind the advancement of the y-least position in the curve.\nFind the advancement of the y-least position in the curve.\nAn elliptic arc curve segment.\nFlag parameters for arcs as described by the SVG …\nFlattening iterator for arcs.\nAn elliptic arc curve segment using the SVG’s end-point …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOf the four candidate arc sweeps, two will represent an …\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\nA string with a fixed capacity.\nA vector with a fixed capacity.\nError value indicating insufficient capacity\nA draining iterator for <code>ArrayVec</code>.\nBy-value iterator for <code>ArrayVec</code>.\nReturn a raw mutable pointer to the vector’s buffer.\nReturn a mutable slice containing all elements of the …\nReturn a mutable string slice of the whole <code>ArrayString</code>.\nReturn a raw pointer to the vector’s buffer.\nReturn a slice containing all elements of the vector.\nReturn a string slice of the whole <code>ArrayString</code>.\nReturn the capacity of the <code>ArrayVec</code>.\nReturn the capacity of the <code>ArrayString</code>.\nRemove all elements in the vector.\nMake the string empty.\nReturn an empty array\nReturn an empty <code>ArrayString</code>\nCreate a draining iterator that removes the specified …\nExtract the overflowing element\nExtend the <code>ArrayVec</code> with an iterator.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>ArrayString</code> from a <code>str</code>.\nReturns the argument unchanged.\nCreate a new <code>ArrayString</code> from a byte string literal.\nCreate an <code>ArrayVec</code> from an iterator.\nInsert <code>element</code> at position <code>index</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the inner fixed size array, if it is full to its …\nReturn the inner fixed size array.\nReturns whether the <code>ArrayVec</code> is empty.\nReturns whether the string is empty.\nReturn true if the <code>ArrayVec</code> is completely filled to its …\nReturn if the <code>ArrayString</code> is completely filled.\nReturn the number of elements in the <code>ArrayVec</code>.\nReturn the length of the string.\nCreate a new empty <code>ArrayVec</code>.\nCreate a new empty <code>ArrayString</code>.\nCreate a new <code>CapacityError</code> from <code>element</code>.\nCreate a new empty <code>ArrayVec</code> (const fn).\nCreate a new empty <code>ArrayString</code> (const fn).\nRemove the last element in the vector and return it.\nRemoves the last character from the string and returns it.\nRemove the element at <code>index</code> and shift down the following …\nPush <code>element</code> to the end of the vector.\nAdds the given char to the end of the string.\nAdds the given string slice to the end of the string.\nPush <code>element</code> to the end of the vector without checking the …\nReturns the capacity left in the <code>ArrayVec</code>.\nReturns the capacity left in the <code>ArrayString</code>.\nRemove the element at <code>index</code> and shift down the following …\nRemoves a <code>char</code> from this <code>ArrayString</code> at a byte position …\nRetains only the elements specified by the predicate.\nSet the vector’s length without dropping or moving out …\nSet the strings’s length.\nConvert into a <code>CapacityError</code> that does not carry an …\nRemove the element at <code>index</code> and swap the last element into …\nRemove the element at <code>index</code> and swap the last element into …")