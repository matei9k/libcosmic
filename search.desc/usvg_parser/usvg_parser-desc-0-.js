searchState.loadedDescShard("usvg_parser", 0, "<code>usvg-parser</code> is an SVG parser used by usvg.\nAn attribute ID.\nAn element ID.\nWe do not allow SVG with more than 1_000_000 elements for …\nList of all errors.\nAn <code>xlink:href</code> resolver for <code>&lt;image&gt;</code> elements.\nSVG doesn’t have a valid size.\nCompressed SVG must use the GZip algorithm.\nOnly UTF-8 content are supported.\nProcessing options.\nFailed to parse an SVG data.\nA trait to parse <code>usvg_tree::Tree</code> from various sources.\nDecompresses an SVGZ file.\nCreates a default Data URL resolver closure.\nDefault viewport size to assume if there is no <code>viewBox</code> …\nCreates a default string resolver.\nTarget DPI.\nA default font family.\nA default font size.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParses <code>Tree</code> from an SVG data.\nParses <code>Tree</code> from an SVG string.\nParses <code>Tree</code> from <code>roxmltree::Document</code>.\nConverts a relative path into absolute relative to the SVG …\nSpecifies the way <code>xlink:href</code> in <code>&lt;image&gt;</code> elements should be …\nSpecifies the default image rendering method.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if this is a gradient element.\nChecks if this is a graphics element.\nChecks if this is a paint server element.\nA list of languages.\nResolver function that will be used when <code>xlink:href</code> …\nResolver function that will be used to handle an arbitrary …\nDirectory that will be used during relative paths …\nSpecifies the default shape rendering method.\nSpecifies the default text rendering method.\nReturns the original string.\nReturns the original string.")