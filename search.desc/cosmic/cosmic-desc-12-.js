searchState.loadedDescShard("cosmic", 12, "The width of some text.\nThe style of some text.\nThe weight of some text.\nThe <code>Family</code> of the <code>Font</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad a font from its bytes.\nThe <code>Stretch</code> of the <code>Font</code>.\nThe <code>Style</code> of the <code>Font</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nThe “alt” key.\nThe “command” key.\nThe “control” key.\nA key string that corresponds to the character typed by …\nA keyboard event.\nA key on the keyboard.\nA keyboard key was pressed.\nA keyboard key was released.\nThe “windows” key on Windows, “command” key on …\nThe left side of the keyboard.\nThe location of a key on the keyboard.\nThe current state of the keyboard modifiers.\nThe keyboard modifiers have changed.\nA key with an established name.\nThe numpad of the keyboard.\nThe right side of the keyboard.\nThe “shift” key.\nThe standard group of keys on the keyboard.\nAn unidentified key.\nGet a flags value with all known bits set.\nReturns true if the <code>ALT</code> key is pressed in the <code>Modifiers</code>.\nConvert <code>Key::Character(SmolStr)</code> to <code>Key::Character(&amp;str)</code> so …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns true if a “command key” is pressed in the …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturns true if the <code>CTRL</code> key is pressed in the <code>Modifiers</code>.\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nReturns true if the <code>LOGO</code> key is pressed in the <code>Modifiers</code>.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nReturns true if the <code>SHIFT</code> key is pressed in the <code>Modifiers</code>.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe key pressed.\nThe key released.\nThe location of the key.\nThe location of the key.\nThe state of the modifier keys.\nThe state of the modifier keys.\nThe text produced by the key press, if any.\nAn overlay container that displays nested overlays\nDraws the <code>Nested</code> overlay using the associated <code>Renderer</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns true if the cursor is over the <code>Nested</code> overlay.\nReturns the layout <code>Node</code> of the <code>Nested</code> overlay.\nReturns the current <code>mouse::Interaction</code> of the <code>Nested</code> …\nCreates a nested overlay from the provided <code>overlay::Element</code>\nProcesses a runtime <code>Event</code>.\nApplies a <code>widget::Operation</code> to the <code>Nested</code> overlay.\nReturns the position of the <code>Nested</code> overlay.\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nThe core of a user interface application following The Elm …\nThe graphics backend to use to draw the <code>Program</code>.\nThe execution state of a <code>Program</code>. It leverages caching, …\nThe theme used to draw the <code>Program</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns whether the event queue of the <code>State</code> is empty or …\nReturns the current <code>mouse::Interaction</code> of the <code>State</code>.\nCreates a new <code>State</code> with the provided <code>Program</code>, …\nApplies <code>Operation</code>s to the <code>State</code>\nReturns a reference to the <code>Program</code> of the <code>State</code>.\nQueues an event in the <code>State</code> for processing during an …\nQueues a message in the <code>State</code> for processing during an …\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nProcesses all the queued events and messages, rebuilding …\nReturns the widgets to display in the <code>Program</code>.\nAn operation to be performed on the system.\nContains informations about the system (e.g. system name, …\nQuery system information and produce <code>T</code> with the result.\nDetailed processor model information\nThe number of physical cores on the processor\nReturns the argument unchanged.\nReturns the argument unchanged.\nModel information for the active graphics adapter\nUnderlying graphics backend for rendering\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaps the output of a system <code>Action</code> using the provided …\nTotal RAM size, KB\nMemory used by this process, KB\nOperating system kernel version\nThe operating system name\nShort operating system version number\nLong operating system version\nReusable data of a specific <code>UserInterface</code>.\nThe <code>UserInterface</code> is outdated and needs to be rebuilt.\nThe resulting state after updating a <code>UserInterface</code>.\nThe <code>UserInterface</code> is up-to-date and can be reused without …\nA set of interactive graphical elements with a specific …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates an empty <code>Cache</code>.\nThe <code>window::RedrawRequest</code> when a redraw should be …\nAn operation to be performed on some window.\nChange the window <code>Icon</code>.\nChange the window <code>Level</code>.\nChange the <code>Mode</code> of the window.\nClose the window and exits the application.\nMove the window with the left mouse button until the …\nFetch the raw identifier unique to the window.\nFetch if the current window is maximized or not.\nFetch if the current window is minimized or not.\nFetch the current <code>Mode</code> of the window.\nFetch the current logical dimensions of the window.\nBring the window to the front and sets input focus. Has no …\nThe id of the window.\nThe reserved window <code>Id</code> for the first window in an Iced …\nSet the window to maximized or back\nSet the window to minimized or back\nMove the window to the given logical coordinates.\nRequest user attention to the window, this has no effect …\nResize the window to the given logical dimensions.\nData of a screenshot, captured with <code>window::screenshot()</code>.\nScreenshot the viewport of the window.\nShow window menu at cursor position.\nSpawns a new window with some <code>Settings</code>.\nToggle whether window has decorations.\nToggle the window to maximized or back\nThe bytes of the <code>Screenshot</code>.\nChanges the <code>Icon</code> of the window.\nChanges the window <code>Level</code>.\nChanges the <code>Mode</code> of the window.\nCloses the window with <code>id</code>.\nCrops a <code>Screenshot</code> to the provided <code>region</code>. This will …\nBegins dragging the window while the left mouse button is …\nFetches an identifier unique to the window, provided by …\nFetches if the window is maximized.\nFetches if the window is minimized.\nFetches the current <code>Mode</code> of the window.\nFetches the window’s size in logical dimensions.\nSubscribes to the frames of the window of the running …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBrings the window to the front and sets input focus. Has …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaps the output of a window <code>Action</code> using the provided …\nMaximizes the window.\nMinimizes the window.\nMoves the window to the given logical coordinates.\nCreates a new <code>Screenshot</code>.\nRequest user attention to the window. This has no effect …\nResizes the window to the given logical dimensions.\nTake screenshots of a window.\nCaptures a <code>Screenshot</code> from the window.\nShow window menu at cursor position.\nThe size of the <code>Screenshot</code>.\nSpawns a new window with the given <code>settings</code>.\nToggles the window decorations.\nToggles the window to maximized or back.\nCreates a new unique window <code>Id</code>.\nErrors that can occur when cropping a <code>Screenshot</code>.\nThe cropped region’s size is out of bounds.\nData of a screenshot, captured with <code>window::screenshot()</code>.\nThe cropped region’s size is zero.\nThe bytes of the <code>Screenshot</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe size of the <code>Screenshot</code>.\nThe settings of an application.\nThe data needed to initialize an <code>Application</code>.\nThe fonts to load on boot.\nThe identifier of the application.\nThe <code>window::Settings</code>.\nA list with all the defined themes.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe built-in dark variant.\nThe built-in light variant.\nA built-in theme.\nChange the appearance of an application.\nChange the apperance of a button.\nChange the appearance of a checkbox.\nChange the appearance of a container.\nCreates a new custom <code>Theme</code> from the given <code>Palette</code>.\nCreates a new custom <code>Theme</code> from the given <code>Palette</code>, with a …\nReturns the <code>palette::Extended</code> of the <code>Theme</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nChange the appearance of menus.\nReturns the <code>Palette</code> of the <code>Theme</code>.\nChange the appearance of a pane grid.\nChange the appearance of a pick list.\nChange the appearance of a progress bar.\nChange the appearance of radio buttons.\nChange the appearance of a rule.\nChange the appearance of a scrollable.\nChange the apperance of a slider.\nChange the appearance of a svg.\nChange the appearance of a text editor.\nChange the appearance of a text input.\nUse the built-in theme and styles.\nChange the appearance of a toggler.\nThe appearance of an application.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of an application.\nReturns the <code>Appearance</code> of the application for the provided …\nThe background <code>Color</code> of the application.\nReturns the argument unchanged.\nThe default icon <code>Color</code> of the application.\nCalls <code>U::from(self)</code>.\nThe default text <code>Color</code> of the application.\nThe appearance of a button.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a button.\nProduces the active <code>Appearance</code> of a button.\nThe <code>Background</code> of the button.\nThe <code>Border</code> of the buton.\nThe border <code>Color</code> of the button.\nThe border radius of the button.\nThe border width of the button.\nProduces the disabled <code>Appearance</code> of a button.\nReturns the argument unchanged.\nProduces the hovered <code>Appearance</code> of a button.\nThe icon <code>Color</code> of the button.\nCalls <code>U::from(self)</code>.\nProduces the pressed <code>Appearance</code> of a button.\nThe <code>Shadow</code> of the butoon.\nThe amount of offset to apply to the shadow of the button.\nThe text <code>Color</code> of the button.\nThe appearance of a checkbox.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a checkbox.\nProduces the active <code>Appearance</code> of a checkbox.\nThe <code>Background</code> of the checkbox.\nThe <code>Border</code> of hte checkbox.\nReturns the argument unchanged.\nProduces the hovered <code>Appearance</code> of a checkbox.\nThe icon <code>Color</code> of the checkbox.\nCalls <code>U::from(self)</code>.\nThe text <code>Color</code> of the checkbox.\nThe appearance of a container.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the <code>Appearance</code> of a container.\nProduces the <code>Appearance</code> of a container.\nThe <code>Background</code> of the container.\nThe <code>Border</code> of the container.\nReturns the argument unchanged.\nThe icon <code>Color</code> of the container.\nCalls <code>U::from(self)</code>.\nThe <code>Shadow</code> of the container.\nThe text <code>Color</code> of the container.\nDerives a new <code>Appearance</code> with the given <code>Background</code>.\nDerives a new <code>Appearance</code> with a border of the given <code>Color</code> …\nThe appearance of a menu.\nThe supported style of the <code>StyleSheet</code>.\nThe style sheet of a menu.\nProduces the <code>Appearance</code> of a menu.\nThe <code>Background</code> of the menu.\nThe <code>Border</code> of the menu.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe background <code>Color</code> of a selected option in the menu.\nThe text <code>Color</code> of a selected option in the menu.\nThe text <code>Color</code> of the menu.\nThe appearance of the hovered region of a pane grid.\nA line.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a container.\nThe <code>Background</code> of the pane region.\nThe <code>Border</code> of the pane region.\nThe <code>Color</code> of the <code>Line</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe <code>Appearance</code> to draw when a pane is hovered.\nThe <code>Line</code> to draw when a split is hovered.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Line</code> to draw when a split is picked.\nThe width of the <code>Line</code>.\nThe appearance of a pick list.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a container.\nProduces the active <code>Appearance</code> of a pick list.\nThe <code>Background</code> of the pick list.\nThe <code>Border</code> of the pick list.\nReturns the argument unchanged.\nThe handle <code>Color</code> of the pick list.\nProduces the hovered <code>Appearance</code> of a pick list.\nCalls <code>U::from(self)</code>.\nThe placeholder <code>Color</code> of the pick list.\nThe text <code>Color</code> of the pick list.\nThe appearance of a progress bar.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a progress bar.\nProduces the <code>Appearance</code> of the progress bar.\nThe <code>Background</code> of the progress bar.\nThe <code>Background</code> of the bar of the progress bar.\nThe border radius of the progress bar.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe appearance of a radio button.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a radio button.\nProduces the active <code>Appearance</code> of a radio button.\nThe <code>Background</code> of the radio button.\nThe border <code>Color</code> of the radio button.\nThe border width of the radio button.\nThe <code>Color</code> of the dot of the radio button.\nReturns the argument unchanged.\nProduces the hovered <code>Appearance</code> of a radio button.\nCalls <code>U::from(self)</code>.\nThe text <code>Color</code> of the radio button.\nThe appearance of a rule.\nDifferent offset on each end of the rule, length units. …\nThe fill mode of a rule.\nFill the whole length of the container.\nUniform offset from each end, length units.\nFill a percent of the length of the container. The rule …\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a rule.\nProduces the style of a rule.\nThe color of the rule.\nReturn the starting offset and length of the rule.\nThe <code>FillMode</code> of the rule.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe radius of the line corners.\nThe width (thickness) of the rule line.\nThe appearance of a scrollable.\nThe appearance of the scroller of a scrollable.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a scrollable.\nProduces the style of an active scrollbar.\nProduces the style of an active horizontal scrollbar.\nThe <code>Background</code> of a scrollable.\nThe <code>Border</code> of a scrollable.\nThe <code>Border</code> of the scroller.\nThe <code>Color</code> of the scroller.\nProduces the style of a scrollbar that is being dragged.\nProduces the style of a horizontal scrollbar that is being …\nReturns the argument unchanged.\nReturns the argument unchanged.\nProduces the style of a scrollbar when the scrollable is …\nProduces the style of a horizontal scrollbar when the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe appearance of the <code>Scroller</code> of a scrollable.\nThe appearance of a slider.\nThe appearance of slider breakpoints.\nA circular handle.\nLinear gradient for the background of the rail includes an …\nThe appearance of the handle of a slider.\nThe shape of the handle of a slider.\nStart and end colors of the rail\nThe appearance of a slider rail\nThe background color of the rail\nA rectangular shape.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a slider.\nProduces the style of an active slider.\nThe border <code>Color</code> of the handle.\nThe border radius of the corners of the rail.\nThe border width of the handle.\nThe appearance of breakpoints.\nThe color of the slider breakpoint.\nThe <code>Color</code> of the handle.\nThe colors of the rail of the slider.\nProduces the style of a slider that is being dragged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe appearance of the <code>Handle</code> of the slider.\nProduces the style of an hovered slider.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe colors of the rail of the slider.\nThe shape of the handle.\nThe width of the stroke of a slider rail.\nThe border radius of the corners of the rectangle.\nThe height of the rectangle.\nThe radius of the circle.\nThe width of the rectangle.\nLet the widget determin the angle of the gradient\nthe linear gradient of the slider\nThe appearance of an SVG.\nThe supported style of the <code>StyleSheet</code>.\nThe stylesheet of a svg.\nProduces the <code>Appearance</code> of the svg.\nThe <code>Color</code> filter of an SVG.\nReturns the argument unchanged.\nProduces the hovered <code>Appearance</code> of a svg content.\nCalls <code>U::from(self)</code>.\nThe appearance of a text input.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a text input.\nProduces the style of an active text input.\nThe <code>Background</code> of the text editor.\nThe <code>Border</code> of the text editor.\nProduces the style of a disabled text input.\nProduces the <code>Color</code> of the value of a disabled text input.\nProduces the style of a focused text input.\nReturns the argument unchanged.\nProduces the style of an hovered text input.\nCalls <code>U::from(self)</code>.\nProduces the <code>Color</code> of the placeholder of a text input.\nProduces the <code>Color</code> of the selection of a text input.\nProduces the <code>Color</code> of the value of a text input.\nThe appearance of a text input.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a text input.\nProduces the style of an active text input.\nThe <code>Background</code> of the text input.\nThe <code>Border</code> of the text input.\nProduces the style of a disabled text input.\nProduces the <code>Color</code> of the value of a disabled text input.\nProduces the style of a focused text input.\nReturns the argument unchanged.\nProduces the style of an hovered text input.\nThe icon <code>Color</code> of the text input.\nCalls <code>U::from(self)</code>.\nProduces the <code>Color</code> of the placeholder of a text input.\nProduces the <code>Color</code> of the selection of a text input.\nProduces the <code>Color</code> of the value of a text input.\nThe style of an application.\nA simple box.\nThe style of a button.\nThe style of a checkbox.\nColored text.\nThe style of a container.\nA <code>Theme</code> with a customized <code>Palette</code>.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nThe built-in dark variant of a <code>Palette</code>.\nThe danger style.\nThe danger style.\nThe built-in dark variant.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nNo filtering to the rendered SVG.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nThe destructive style.\nThe built-in light variant of a <code>Palette</code>.\nThe built-in light variant.\nThe style of a menu.\nA color palette.\nThe style of a pane grid.\nThe style of a pick list.\nThe positive style.\nThe primary style.\nThe primary style.\nThe primary style.\nThe style of a progress bar.\nThe style of a radio button.\nThe style of a rule.\nThe style of a scrollable.\nThe secondary style.\nThe secondary style.\nThe style of a slider.\nThe success style.\nThe success style.\nSvg\nThe style of text.\nThe text style.\nThe style of a text input.\nThe style of a text input.\nA built-in theme.\nThe style of a toggler.\nNo style.\nThe background <code>Color</code> of the <code>Palette</code>.\nCreates a custom <code>Button</code> style variant.\nCreates a custom <code>Scrollable</code> theme.\nCreates a custom <code>Svg</code> style.\nThe danger <code>Color</code> of the <code>Palette</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a <code>Custom</code> theme from the given <code>Palette</code>.\nDefine the colors of a theme.\nThe primary <code>Color</code> of the <code>Palette</code>.\nThe success <code>Color</code> of the <code>Palette</code>.\nThe text <code>Color</code> of the <code>Palette</code>.\nCreates a <code>Custom</code> theme from the given <code>Palette</code> with a …\nA set of background colors.\nA set of danger colors.\nThe built-in dark variant of an <code>Extended</code> palette.\nThe built-in light variant of an <code>Extended</code> palette.\nAn extended set of colors generated from a <code>Palette</code>.\nRecommended background, icon, and text <code>Color</code>.\nA color palette.\nA set of primary colors.\nA set of secondary colors.\nA set of success colors.\nThe background <code>Color</code> of the <code>Palette</code>.\nThe set of background colors.\nThe base background color.\nThe base primary color.\nThe base secondary color.\nThe base success color.\nThe base danger color.\nThe background color.\nThe danger <code>Color</code> of the <code>Palette</code>.\nThe set of danger colors.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates an <code>Extended</code> palette from a simple <code>Palette</code>.\nGenerates a set of <code>Primary</code> colors from the base, …\nGenerates a set of <code>Secondary</code> colors from the base and text …\nGenerates a set of <code>Success</code> colors from the base, …\nGenerates a set of <code>Danger</code> colors from the base, …\nThe icon color, which defaults to the text color.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the palette is dark or not.\nCreates a new <code>Pair</code> from a background <code>Color</code> and some text …\nGenerates a set of <code>Background</code> colors from the base and …\nThe primary <code>Color</code> of the <code>Palette</code>.\nThe set of primary colors.\nThe set of secondary colors.\nA stronger version of the base background color.\nA stronger version of the base primary color.\nA stronger version of the base secondary color.\nA stronger version of the base success color.\nA stronger version of the base danger color.\nThe success <code>Color</code> of the <code>Palette</code>.\nThe set of success colors.\nThe text <code>Color</code> of the <code>Palette</code>.\nThe text color.\nA weaker version of the base background color.\nA weaker version of the base primary color.\nA weaker version of the base secondary color.\nA weaker version of the base success color.\nA weaker version of the base danger color.\nThe appearance of a toggler.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a toggler.\nReturns the active <code>Appearance</code> of the toggler for the …\nThe background <code>Color</code> of the toggler.\nThe <code>Color</code> of the background border of the toggler.\nThe border radius of the toggler.\nThe foreground <code>Color</code> of the toggler.\nThe <code>Color</code> of the foreground border of the toggler.\nReturns the argument unchanged.\nthe space between the handle and the border of the toggler\nthe radius of the handle of the toggler\nReturns the hovered <code>Appearance</code> of the toggler for the …\nCalls <code>U::from(self)</code>.\nUI scaling is important, so read the docs for this module …\nThe <code>Event</code> enum and assorted supporting types.\nThe <code>EventLoop</code> struct and assorted supporting types, …\nTypes related to the keyboard.\nTypes useful for interacting with a user’s monitors.\nContains traits with platform-specific methods in them.\nThe <code>Window</code> struct and associated types.\nA position represented in logical pixels.\nA size represented in logical pixels.\nA position represented in physical pixels.\nA size represented in physical pixels.\nA position that’s either physical or logical.\nA size that’s either physical or logical.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks that the scale factor is a normal positive <code>f64</code>.\nThe event loop can’t be re-run while it’s already …\nA general error that may occur while running the Winit …\nApplication has exit with an error status.\nAn error that may be generated when requesting Winit state\nThe operation was ignored.\nThe operation is not supported by the backend.\nThe operation is not supported by the backend.\nThe error type for when the requested operation is not …\nThe OS cannot perform the operation.\nThe OS cannot perform the operation.\nThe error type for when the OS cannot perform the …\nThe event loop can’t be re-created.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEmitted when the event loop is about to block and wait for …\nThe activation token was delivered back and now could be …\nIdentifier for a specific analog axis on some device.\nMotion on some analog axis. May report data redundant to …\nIdentifier for a specific button on some device.\nOn iOS, the force is calibrated so that the same number …\nThe window has been requested to close.\nNotifies when text should be inserted into the editor …\nThe cursor has entered the window.\nThe cursor has left the window.\nThe cursor has moved on the window.\nThe window has been destroyed.\nRepresents raw hardware events that are not associated …\nEmitted when the OS sends an event to a device.\nIdentifier of an input device.\nNotifies when the IME was disabled.\nA file has been dropped into the window.\nDescribes the input state of a key.\nNotifies when the IME was enabled.\nDescribes a generic event.\nThe window gained or lost focus.\nDescribes the force of a touch event\nA file is being hovered over the window.\nA file was hovered, but has exited the window.\nDescribes input method events.\nAn event from an input method.\nSent once, immediately after <code>run</code> is called. Indicates that …\nHandle to synchroniously change the size of the window …\nDescribes a keyboard input targeting a window.\nAn event from the keyboard has been received.\nAmount in lines or rows to scroll in the horizontal and …\nEmitted when the event loop is being shut down.\nDescribes an event that only happens in <code>MacOS</code>.\nEmitted when the application has received a memory warning.\nDescribes keyboard modifiers event.\nThe keyboard modifiers have changed.\nMotion on some analog axis. This event will be reported …\nDescribes a button of a mouse controller.\nAn mouse button press has been received.\nChange in physical position of a pointing device.\nDescribes a difference in the mouse scroll wheel state.\nA mouse wheel movement or touchpad scroll occurred.\nPhysical scroll event\nThe position of the window has changed. Contains the window…\nEmitted when new events arrive from the OS to be processed.\nIf the platform reports the force as normalized, we have …\nThe window has been occluded (completely hidden from view).\nAmount in pixels to scroll in the horizontal and vertical …\nDescribes an event from some specific platform.\nEmitted when the event loop receives an event that only …\nSent if the event loop is being resumed after the loop’s …\nNotifies when a new composing text should be set at the …\nDescribes a keyboard input as a raw device event.\nEmitted when a window should be redrawn.\nThe size of the window has changed. Contains the client …\nSent if the time specified by <code>ControlFlow::WaitUntil</code> has …\nEmitted when the application has been resumed.\nThe window’s scale factor has changed.\nSmart magnification event.\nDescribes the reason the event loop is resuming.\nEmitted when the application has been suspended.\nThe system window theme has changed.\nRepresents a touch event\nTouch event has been received\nDescribes touch-screen input state.\nTouchpad magnification event with two-finger pinch gesture.\nTouchpad pressure event.\nTouchpad rotation event with two-finger rotation gesture.\nEmitted when an event is sent from …\nSent if the OS has new events to send to the window, after …\nDescribes an event from a [<code>Window</code>].\nEmitted when the OS sends an event to a winit window.\nReturns a dummy id, useful for unit testing.\nDescribes how hard the screen was pressed. May be <code>None</code> if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnique identifier of a finger.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if <code>self == Pressed</code>.\nThe state of the left alt key.\nThe state of the left control key.\nContains the location of this key on the keyboard.\nThis value is affected by all modifiers except Ctrl.\nThe state of the left shift key.\nThe state of the left super key.\nReturns the force normalized to the range between 0.0 and …\nRepresents the position of a key independent of the …\nThe state of the right alt key.\nThe state of the right control key.\nWhether or not this key is a key repeat event.\nTry to request inner size which will be set synchroniously …\nThe state of the right shift key.\nThe state of the right super key.\nThe state of the modifiers.\nWhether the key is being pressed or released.\nContains the text produced by this keypress.\n(x, y) change in position in unspecified units.\nThe altitude (in radians) of the stylus.\nThe force of the touch, where a value of 1.0 represents …\nThe maximum possible force for a touch.\nHandle to update inner size during scale changes.\nIf <code>true</code>, the event was generated synthetically by winit in …\n(x,y) coords in pixels relative to the top-left corner of …\nReport device events regardless of window focus.\nA unique identifier of the winit’s async request.\nSet through <code>EventLoopWindowTarget::set_control_flow()</code>.\nControl when device events are captured.\nProvides a way to retrieve events from the system and from …\nObject that allows building the event loop.\nThe error that is returned when an <code>EventLoopProxy</code> attempts …\nUsed to send custom events to <code>EventLoop</code>.\nTarget that associates windows with an <code>EventLoop</code>.\nNever capture device events.\nWhen the current loop iteration finishes, immediately …\nWhen the current loop iteration finishes, suspend the …\nWhen the current loop iteration finishes, suspend the …\nOnly capture device events while the window is focused.\nGet the underlying EventLoop’s <code>fd</code> which you can register …\nGet the underlying EventLoop’s raw <code>fd</code> which you can …\nReturns the list of all the monitors available on the …\nBuilds a new event loop.\nGets the current <code>ControlFlow</code>.\nCreates an <code>EventLoopProxy</code> that can be used to dispatch …\nThis exits the event loop.\nReturns if the <code>EventLoop</code> is about to stop.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange if or when <code>DeviceEvent</code>s are captured.\nAlias for <code>EventLoopBuilder::new().build()</code>.\nStart building a new event loop.\nReturns the primary monitor of the system.\nRuns the event loop in the calling thread and calls the …\nSend an event to the <code>EventLoop</code> from which this proxy was …\nSets the <code>ControlFlow</code>.\nCreates a <code>ControlFlow</code> that waits until a timeout has …\nStart building a new event loop, with the given type as …\nThe “alt” key.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nThe Accept (Commit, OK) key. Accept current option or …\nFound on Sun’s USB keyboard.\nRedo or repeat an action.\nInitate the multi-candidate mode.\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn Android “scancode”.\nAn Android “keycode”, which is similar to a “…\nThe Application switch key, which provides a list of …\n↓\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\n←\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\n→\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\n↑\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nToggle between muted state and prior volume level. (…\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\nUsed to remove the character to the left of the cursor. …\n[ on a US keyboard.\n] on a US keyboard.\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nSome laptops place this key to the left of the ↑ key.\nNavigate to previous content or page in current history. (…\nOpen the list of browser favorites. (…\nSome laptops place this key to the right of the ↑ key.\nNavigate to next content or page in current history. (…\nThe “home” button on Android.\nGo to the user’s preferred home page. (…\nRefresh the current page or content. (…\nCall up the user’s preferred search page. (…\nStop loading the current page or content. (…\nThe “control” key.\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nCapsLock or ⇪\nThe <code>Caps Lock</code> (Capital) key.\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nA known key code\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n, on a US keyboard.\nThe Compose key, also known as “Multi_key” on the X …\nThe application context menu key, which is typically found …\nShow the application’s context menu. This key is …\nThe <code>Control</code> or <code>Ctrl</code> key.\nControl or ⌃\nControl or ⌃\nJapanese: 変 (henkan)\nConvert the current input method sequence.\nFound on Sun’s USB keyboard.\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nThe Cursor Select key.\nFound on Sun’s USB keyboard.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nSelect Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)\nContains the text representation of the dead-key when …\n⌦. The forward delete key. Note that on Apple keyboards, …\nUsed to delete the character to the right of the cursor. …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nEject or ⏏. This key is placed in the function section …\nToggle removable media to eject (open) and insert (close) …\nPage Down, End, or ↘\nThe End key, used with keyboard entry to go to the end of …\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nEnter or ↵. Labeled Return on Apple keyboards.\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\n= on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nEsc or ⎋\nThe <code>Esc</code> key. This key was originally used to initiate an …\nThe Extend Selection (Exsel) key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nFound on Sun’s USB keyboard.\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nFn This is typically a hardware key that does not generate …\nThe Function switch <code>Fn</code> key. Activating this key …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nHelp. Not present on standard PC keyboards.\nOpen a help dialog or toggle display of help information. (…\nThe Hibernate key. This key saves the current state of the …\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana (Japanese Kana characters) key.\nThe Hiragana/Katakana toggle key. (…\nHome or ↖\nThe Home key, used with keyboard entry, to go to start of …\nToggle display of information about currently selected …\nInsert or Ins. Not present on Apple keyboards.\nToggle between text modes for insertion or overtyping. (…\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nJapanese: カタカナ/ひらがな/ローマ字 …\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nThe Kanji (Japanese name for ideographic characters of …\nUse for dedicated カタカナ key found on some Japanese …\nThe Katakana (Japanese Kana characters) key.\nKey represents the meaning of a keypress.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nCode representing the location of a physical key\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nThe location of the key on the keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nThe “Calendar” key. (<code>KEYCODE_CALENDAR</code>)\nThe “Contacts” key. (<code>KEYCODE_CONTACTS</code>)\nThe “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)\nThe “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…\nThe key is on the left side of the keyboard.\nLaunch linked content, if available and appropriate. (…\nList the current program. (<code>VK_LIST</code>)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (<code>VK_LOCK</code>)\nA macOS “scancode”.\nA macOS “scancode”. There does not appear to be any …\nOpen an editor to forward the current message. (…\nOpen an editor to reply to the current message. (…\nSend the current message. (<code>APPCOMMAND_SEND_MAIL</code>)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)\nClose the current media, for example to close a CD or DVD …\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (<code>VK_LAST</code>, …\nPause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…\nInitiate or continue media playback at normal speed, if …\nToggle media between play and pause states. (…\nInitiate or resume recording of currently selected media. (…\nInitiate or continue reverse playback at faster than …\nSkip backward to next content or program. (…\nSkip forward to next content or program. (<code>VK_SKIP</code>, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)\nSeek to next media or program track. (…\nSeek to previous media or program track. (…\nToggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…\nDecrease microphone volume. (…\nMute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …\nIncrease microphone volume. (…\n- on a US keyboard.\nToggle between or cycle through input modes of IMEs.\nThe state of the particular modifiers key.\nRepresents the current state of the keyboard modifiers\nA simple (unparameterised) action\nA <code>Key::Named</code> value\nContains the platform-native logical key identifier\nContains the platform-native physical key identifier\nNavigate in. (<code>KEYCODE_NAVIGATE_IN</code>)\nNavigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)\nNavigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)\nNavigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)\nOpen a new document or message. (<code>APPCOMMAND_NEW</code>)\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nJapanese: 無変換 (muhenkan)\nAccept current input method sequence without conversion in …\nThe Notification key. (<code>KEYCODE_NOTIFICATION</code>)\nOn the Mac, this is used for the numpad Clear key.\nThe <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …\nThe key is on the numpad.\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nAccess on-demand content or programs. (<code>VK_ON_DEMAND</code>)\nFound on Sun’s USB keyboard.\nOpen an existing document or message. (<code>APPCOMMAND_OPEN</code>)\nPage Down, PgDn, or ⇟\nScroll down or display next page of content.\nPage Up, PgUp, or ⇞\nScroll up or display previous page of content.\nPairing key to pair devices. (<code>KEYCODE_PAIRING</code>)\nFound on Sun’s USB keyboard.\nThe Paste key. (<code>APPCOMMAND_PASTE</code>)\nPause Break\nPause the current state or application (as appropriate).\n. on a US keyboard.\nRepresents the location of a physical key.\nMove picture-in-picture window down. (<code>VK_PINP_DOWN</code>)\nMove picture-in-picture window. (<code>VK_PINP_MOVE</code>)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (<code>VK_PINP_UP</code>)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)\nReset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)\nIncrease media playback speed. (<code>VK_PLAY_SPEED_UP</code>)\nThis key is placed in the function section on some Apple …\nToggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …\nThe <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.\nThe particular key is pressed.\nPrint the current document or message. (<code>APPCOMMAND_PRINT</code>)\nPrtScr SysRq or Print Screen\nInitiate print-screen function.\nFound on Sun’s USB keyboard.\nThe properties (Props) key.\n’ on a US keyboard.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (<code>APPCOMMAND_REDO</code>)\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe key is on the right side of the keyboard.\nThe Roman characters function key.\nThe “shift” key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nThis is the “windows” key on PC and “command” key …\nSave the current document or message. (<code>APPCOMMAND_SAVE</code>)\nToggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)\nAdvance display screen mode to next available mode. (…\nScroll Lock\nToggle between scrolling and cursor movement modes.\nFound on Sun’s USB keyboard.\n; on a US keyboard.\nToggle display of device settings screen. (<code>VK_SETTINGS</code>, …\nUsed to enable shift modifier function for interpreting …\nShift or ⇧\nShift or ⇧\n/ on a US keyboard.\nA <code>SmolStr</code> is a string type that has the following …\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\n  (space)\nUsed in text to insert a space between words. Usually …\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)\nThe key is in its “normal” location on the keyboard.\nThe Standby key. This key turns off the display and places …\nToggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)\nUsed to enable “super” modifier function for …\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Symbol modifier key (used on some virtual keyboards).\nSwitch to viewing TV. (<code>KEYCODE_TV</code>)\nTV 3D Mode. (<code>KEYCODE_3D_MODE</code>)\nToggle between antenna and cable input. (…\nAudio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)\nContents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)\nSwitch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)\nSwitch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…\nSwitch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…\nSwitch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…\nSwitch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…\nSwitch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)\nSwitch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)\nSwitch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)\nSwitch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)\nSwitch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)\nMedia context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)\nToggle network. (<code>KEYCODE_TV_NETWORK</code>)\nNumber entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)\nToggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)\nRadio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)\nSatellite. (<code>KEYCODE_TV_SATELLITE</code>)\nBroadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)\nCommunication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)\nToggle between available satellites. (…\nAnalog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)\nDigital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)\nTimer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)\nTab or ⇥\nThe Horizontal Tabulation <code>Tab</code> key.\nToggle display of teletext, if available (<code>VK_TELETEXT</code>, …\nFound on Sun’s USB keyboard.\nUndo the last action. (<code>APPCOMMAND_UNDO</code>)\nThis variant is used when the key cannot be translated to …\nThis variant is used when the key cannot be translated to …\nThe state of the key is unknown.\nAdvance video mode to next available mode. (…\nThe WakeUp key. (<code>KEYCODE_WAKEUP</code>)\nA “key value string”.\nA Windows “scancode”.\nA Windows “virtual-key code”.\nCause device to identify itself in some manner, e.g., …\nAn XKB “keycode”.\nAn XKB “keysym”.\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)\nThe ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)\nToggle between full-screen and scaled content, or alter …\nGet a flags value with all known bits set.\nReturns <code>true</code> if the alt key is pressed.\nConvert <code>Key::Character(SmolStr)</code> to <code>Key::Character(&amp;str)</code> so …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturns <code>true</code> if the control key is pressed.\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nConstructs inline variant of <code>SmolStr</code>.\nConstructs a <code>SmolStr</code> from a statically allocated string.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nReturns <code>true</code> if the shift key is pressed.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReturns <code>true</code> if the super key is pressed.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nConvert an action to its approximate textual equivalent.\nConvert a key to its approximate textual equivalent.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nHandle to a monitor.\nDescribes a fullscreen video mode of a monitor.\nReturns the bit depth of this video mode, as in how many …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the monitor that this video mode is valid for. …\nReturns a human-readable name of the monitor.\nReturns the top-left corner position of the monitor …\nReturns the refresh rate of this video mode in mHz.\nThe monitor refresh rate used by the system.\nReturns the scale factor of the underlying monitor. To map …\nReturns the resolution of this video mode.\nReturns the monitor’s resolution.\nReturns all fullscreen video modes supported by this …\nWindow startup notification to handle window raising.\nAdditional methods for the <code>KeyEvent</code> which cannot be …\nThis value ignores all modifiers including, but not …\nIdentical to <code>KeyEvent::text</code> but this is affected by Ctrl.\nContinue running external loop.\nAdditional methods on <code>EventLoop</code> for pumping events within …\nExit external loop.\nThe return status for <code>pump_events</code>\nA type provided by the user that can be passed through …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPump the <code>EventLoop</code> to check for and dispatch pending …\nAdditional methods on <code>EventLoop</code> to return control flow to …\nA type provided by the user that can be passed through …\nRuns the event loop in the calling thread and calls the …\nAdditional methods for the <code>PhysicalKey</code> type that allow the …\nConstructs a <code>PhysicalKey</code> from a platform-specific physical …\nThe raw value of the platform-specific physical key …\nRead the token from the environment.\nRequest a new activation token.\nRemove the activation environment variables from the …\nSet environment variables responsible for activation token.\nUse this <code>ActivationToken</code> during window creation.\nUse the dark variant.\nAdditional methods on <code>EventLoopBuilder</code> that are specific …\nAdditional methods on <code>EventLoopWindowTarget</code> that are …\nUse the light variant.\nAdditional methods on <code>MonitorHandle</code> that are specific to …\nThe theme variant to use.\nAdditional methods on <code>WindowBuilder</code> that are specific to …\nAdditional methods on <code>Window</code> that are specific to Wayland.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrue if the <code>EventLoopWindowTarget</code> uses Wayland.\nReturns the inner identifier of the monitor.\nWhether to allow the event loop to be created off of the …\nBuild window with the given name.\nForce using Wayland.\nThis should be used on the windows that are popped up by …\nA desktop feature. This can include a single window …\nThis is a dialog window.\nThis indicates the the window is being dragged. This …\nA dock or panel feature. Typically a Window Manager would …\nA dropdown menu that usually appears when the user clicks …\nAdditional methods on <code>EventLoopBuilder</code> that are specific …\nAdditional methods on <code>EventLoopWindowTarget</code> that are …\nFailed to load one or several shared libraries.\nPinnable menu windows. “Torn off” from the main …\nAdditional methods on <code>MonitorHandle</code> that are specific to …\nThis is a normal, top-level window.\nThe window is a notification. This property is typically …\nA popup menu that usually appears when the user right …\nThe window is a splash screen displayed as an application …\nToolbar windows. “Torn off” from the main application.\nA tooltip window. Usually used to show additional …\nA small persistent utility window, such as a palette or …\nAdditional methods on <code>WindowBuilder</code> that are specific to …\nAdditional methods on <code>Window</code> that are specific to X11.\nError returned if this system doesn’t have XLib or can’…\nConnecting to the X server with <code>XOpenDisplay</code> failed.\nA unique identifer for an X11 visual.\nA unique identifier for an X11 window.\nX window type. Maps directly to <code>_NET_WM_WINDOW_TYPE</code>.\nWe encountered an error while converting the connection to …\nThe first argument in the provided hook will be the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if the <code>EventLoopWindowTarget</code> uses X11.\nReturns the inner identifier of the monitor.\nHook to winit’s xlib error handling callback.\nWhether to allow the event loop to be created off of the …\nBuild window with base size hint. Only implemented on X11.\nEmbed this window into another parent window.\nBuild window with the given <code>general</code> and <code>instance</code> names.\nBuild window with override-redirect flag; defaults to …\nForce using X11.\nCreate this window with a specific X11 visual.\nBuild window with <code>_NET_WM_WINDOW_TYPE</code> hints; defaults to …\nA raw display handle for Android NDK.\nRaw display handle for Android.\nA raw window handle for Android NDK.\nRaw window handle for Android NDK.\nA raw window handle for AppKit.\nA raw display handle for AppKit.\nRaw display handle for AppKit.\nRaw window handle for AppKit.\nThe handle to the display controller of the windowing …\nA raw window handle for the Linux Kernel Mode Set/Direct …\nA raw display handle for the Linux Kernel Mode Set/Direct …\nRaw display handle for the Linux Kernel Mode Set/Direct …\nRaw window handle for the Linux Kernel Mode Set/Direct …\nA raw window handle for the Linux Generic Buffer Manager.\nA raw display handle for the Linux Generic Buffer Manager.\nRaw display handle for the Linux Generic Buffer Manager.\nRaw window handle for the Linux Generic Buffer Manager.\nA raw window handle for Haiku.\nA raw display handle for Haiku.\nRaw display handle for Haiku.\nRaw window handle for Haiku.\nAn error that can occur while fetching a display or window …\nA display that acts as a wrapper around a display handle.\nDisplay that wraps around a raw display handle.\nWindow that wraps around a raw window handle.\nA handle to a window.\nThe underlying handle cannot be represented using the …\nA raw display handle for OpenHarmony OS NDK\nRaw display handle for OpenHarmony.\nA raw window handle for the OpenHarmony OS NDK\nRaw window handle for Ohos NDK.\nA raw window handle for the Redox operating system.\nA raw display handle for the Redox operating system.\nRaw display handle for the Redox operating system.\nRaw window handle for the Redox operating system.\nA display server handle for a particular windowing system.\nA window handle for a particular windowing system.\nA raw window handle for UIKit (Apple’s non-macOS …\nA raw display handle for UIKit (Apple’s non-macOS …\nRaw display handle for UIKit.\nRaw window handle for UIKit.\nThe underlying handle is not available.\nA raw window handle for Wayland.\nA raw display handle for Wayland.\nRaw display handle for Wayland.\nRaw window handle for Wayland.\nA raw window handle for the Web.\nA raw display handle for the Web.\nA raw window handle for a Web canvas registered via …\nRaw window handle for a Web canvas registered via …\nRaw display handle for the Web.\nA raw window handle for a Web offscreen canvas registered …\nRaw window handle for a Web offscreen canvas registered via\nRaw window handle for the Web.\nA raw window handle for Win32.\nRaw window handle for Win32.\nA raw window handle for WinRT.\nRaw window handle for WinRT.\nThe handle to a window.\nA raw display handle for Win32.\nRaw display handle for Windows.\nA raw window handle for Xcb.\nA raw display handle for Xcb.\nRaw display handle for Xcb.\nRaw window handle for Xcb.\nA raw window handle for Xlib.\nA raw display handle for Xlib.\nRaw display handle for Xlib.\nRaw window handle for Xlib.\nA pointer to an <code>ANativeWindow</code>.\nCreate an Android-based display handle.\nCreate an AppKit-based display handle.\nGet the underlying raw display handle.\nGet the underlying raw window handle.\nA pointer to a BDirectWindow object that might be null\nA pointer to a BWindow object\nCreate a <code>DisplayHandle</code> from a <code>RawDisplayHandle</code>.\nBorrow a <code>WindowHandle</code> from a <code>RawWindowHandle</code>.\nA pointer to an X server <code>xcb_connection_t</code>.\nA WinRT <code>CoreWindow</code> handle.\nA pointer to an Xlib <code>Display</code>.\nA pointer to a <code>wl_display</code>.\nGet a handle to the display controller of the windowing …\nThe drm file descriptor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe gbm device.\nThe gbm surface.\nCreate an Haiku-based display handle.\nThe <code>GWLP_HINSTANCE</code> associated with this type’s <code>HWND</code>.\nA Win32 <code>HWND</code> handle.\nAn ID value inserted into the data attributes of the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new empty display handle.\nCreate a new handle to an <code>ANativeWindow</code>.\nCreate a new empty display handle.\nCreate a new handle to a view.\nCreate a new empty display handle.\nCreate a new handle to a window.\nCreate a new empty display handle.\nCreate a new handle to an <code>OHNativeWindow</code> on OpenHarmony.\nCreate a new empty display handle.\nCreate a new handle to a window.\nCreate a new empty display handle.\nCreate a new handle to a view.\nCreate a new handle to a display.\nCreate a new handle to a window.\nCreate a new handle to a connection and screen.\nCreate a new handle to a window.\nCreate a new display handle.\nCreate a new handle to a surface.\nCreate a new handle to a file descriptor.\nCreate a new handle to a plane.\nCreate a new handle to a device.\nCreate a new handle to a surface.\nCreate a new empty display handle.\nCreate a new handle to a canvas element.\nCreate a new handle from a pointer to <code>HtmlCanvasElement</code>.\nCreate a new handle from a pointer to an <code>OffscreenCanvas</code>.\nCreate a new empty display handle.\nCreate a new handle to a window.\nCreate a new handle to a window.\nA pointer to an <code>NSView</code> object.\nA pointer to the <code>JsValue</code> of an <code>HtmlCanvasElement</code>.\nA pointer to the <code>JsValue</code> of an <code>OffscreenCanvas</code>.\nCreate an OpenHarmony-based display handle.\nCreate an Orbital-based display handle.\nThe primary drm plane handle.\nAn X11 screen to use with this display handle.\nAn X11 screen to use with this display handle.\nA pointer to a <code>wl_surface</code>.\nA pointer to an <code>UIView</code> object.\nA pointer to an <code>UIViewController</code> object, if the view has …\nCreate a UiKit-based display handle.\nAn Xlib visual ID, or 0 if unknown.\nAn X11 <code>xcb_visualid_t</code>.\nCreate a Web-based display handle.\nA pointer to an orbclient window.\nAn Xlib <code>Window</code>.\nAn X11 <code>xcb_window_t</code>.\nGet a handle to the window.\nCreate a Windows-based display handle.\nAn opaque token used to activate the <code>Window</code>.\nIndicates an alias of/shortcut to something is to be …\nIndicates that the something can be scrolled in any …\nThe window will always be below normal windows.\nThe window will always be on top of normal windows.\nAn error produced when using <code>Icon::from_rgba</code> with invalid …\nProviding <code>None</code> to <code>Borderless</code> will fullscreen on the …\nProduced when the length of the <code>rgba</code> argument isn’t …\nIndicates that a cell or set of cells may be selected. …\nIndicates that the item/column can be resized …\nThe cursor is confined to the window area.\nA context menu is available for the object under the …\nIndicates something is to be copied. Often rendered as an …\nPlatform-specific\nA simple crosshair (e.g., short line segments resembling a …\nThe behavior of cursor grabbing.\nDescribes the appearance of the (usually mouse) cursor …\nAn error which could be returned when parsing <code>CursorIcon</code>.\nUse the dark variant.\nThe platform-dependent default cursor. Often rendered as …\nProduced when the number of pixels (<code>rgba.len() / 4</code>) isn’…\nThe east border to be moved.\nThe east and west borders to be moved.\nFullscreen modes.\nIndicates that something can be grabbed (dragged to be …\nIndicates that something is being grabbed (dragged to be …\nHelp is available for the object under the cursor. Often …\nAn icon used for the window titlebar, taskbar, etc.\nGeneric IME purposes for use in <code>Window::set_ime_purpose</code>.\nPlatform-specific\nUse the light variant.\nThe cursor is locked inside the window area to the certain …\nIndicates something is to be moved.\nThe north border to be moved.\nThe north-east corner to be moved.\nThe north-east and south-west corners to be moved.\nIndicates that the dragged item cannot be dropped at the …\nNo grabbing of the cursor is performed.\nThe default.\nNo special hints for the IME (default).\nIndicates that the requested action will not be carried …\nThe south and north borders to be moved.\nThe north-west corner to be moved.\nThe north-west and south-east corners to be moved.\nProduced when underlying OS functionality failed to create …\nThe IME is used for password input.\nThe cursor is a pointer that indicates a link. Often …\nA progress indicator. The program is performing some …\nDefines the orientation that a window resize will be …\nIndicates that the item/row can be resized vertically. …\nThe south border to be moved.\nThe south-east corner to be moved.\nThe south-west corner to be moved.\nThe IME is used to input into a terminal.\nIndicates text that may be selected. Often rendered as an …\nThe theme variant to use.\nPlatform-specific\nIndicates vertical-text that may be selected. Often …\nThe west border to be moved.\nIndicates that the program is busy and the user should …\nRepresents a window.\nAttributes to use when creating a window.\nObject that allows building windows.\nIdentifier of a window. Unique for each window.\nA window level groups windows with respect to their …\nIndicates that something can be zoomed in. Often rendered …\nIndicates that something can be zoomed in. Often rendered …\nGet a flags value with all known bits set.\nA list of alternative names for the cursor icon as …\nReturns the list of all the monitors available on the …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nBuilds the window.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturns the monitor on which the window currently resides.\nThe intersection of a source flags value with the …\nResizes the window with the left mouse button until the …\nMoves the window with the left mouse button until the …\nReturns a dummy id, useful for unit testing.\nGet a flags value with all bits unset.\nGets the enabled window buttons.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nBrings the window to the front and sets input focus. Has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nCreates an icon from 32bpp RGBA data.\nParse a string slice into <code>CursorIcon</code>.\nGets the window’s current fullscreen state.\nGet <code>Fullscreen</code> option stored on the attributes.\nGets whether the window has keyboard focus.\nReturns an identifier unique to the window.\nReturns the position of the top-left hand corner of the …\nReturns the physical size of the window’s client area.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nGets the window’s current decorations state.\nWhether all bits in this flags value are unset.\nGets the window’s current maximized state.\nGets the window’s current minimized state.\nGets the window’s current resizable state.\nGets the window’s current visibility state.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe name of the cursor icon as defined in w3c standard.\nCreates a new Window for platforms where this is …\nInitializes a new builder with default values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReturns the position of the top-left hand corner of the …\nReturns the physical size of the entire window.\nGet the parent window stored on the attributes.\nNotify the windowing system before presenting to the …\nReturns the primary monitor of the system.\nThe intersection of a source flags value with the …\nRequest the new size for the window.\nQueues a <code>WindowEvent::RedrawRequested</code> event to be emitted …\nRequests user attention to the window, this has no effect …\nReset the dead key state of the keyboard.\nReturns window resize increments if any were set.\nReturns the scale factor that can be used to map logical …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nChange the window blur state.\nPrevents the window contents from being captured by other …\nSet grabbing mode on the cursor preventing it from leaving …\nModifies whether the window catches cursor events.\nModifies the cursor icon of the window.\nChanges the position of the cursor in window coordinates.\nModifies the cursor’s visibility.\nTurn window decorations on or off.\nSets the enabled window buttons.\nSets the window to fullscreen or back.\nSets whether the window should get IME events\nSet the IME cursor editing area, where the <code>position</code> is the …\nSets the IME purpose for the window using <code>ImePurpose</code>.\nSets a maximum dimension size for the window.\nSets the window to maximized or back.\nSets a minimum dimension size for the window.\nSets the window to minimized or back\nModifies the position of the window.\nSets whether the window is resizable or not.\nSets window resize increments.\nSets the current window theme. Use <code>None</code> to fallback to …\nModifies the title of the window.\nChange the window transparency state.\nModifies the window’s visibility.\nSets the window icon.\nChange the window level.\nShow window menu at a specified position .\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the current window theme.\nGets the current title of the window.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGet whether the window will support transparency.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the current window attributes.\nWhether the window will be initially focused or not.\nSets whether the background of the window should be …\nPrevents the window contents from being captured by other …\nSets whether the window should have a border, a title bar, …\nSets the enabled window buttons.\nSets whether the window should be put into fullscreen upon …\nRequests the window to be of specific dimensions.\nSets the maximum dimensions a window can have.\nRequest that the window is maximized upon creation.\nSets the minimum dimensions a window can have.\nBuild window with parent window.\nSets a desired initial position for the window.\nSets whether the window is resizable or not.\nBuild window with resize increments hint.\nSets a specific theme for the window.\nSets the initial title of the window in the title bar.\nSets whether the background of the window should be …\nSets whether the window will be initially visible or …\nSets the window icon.\nSets the window level.\nThe fallback icon theme to search if no icon theme was …\nSet the fallback icon theme to search when loading system …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUnfocuses any actively-focused widget.\nRepresents a type that you can apply arbitrary functions …\nRepresents a type which can have functions applied to it …\nAdditional methods for the [<code>Column</code>] and [<code>Row</code>] widgets.\nApply a function to this value and return the (possibly) …\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nApply a function which takes the parameter by value.\nApply a function which takes the parameter by mutable …\nApply a function which takes the parameter by reference.\nCombines color with background to create appearance of …\nAppends all elements in an iterator to the widget.\nAppends all elements in an iterator to the widget.\nPushes an element into the widget.\nConditionally pushes an element to the widget.\nConditionally pushes an element to the widget.\nA widget for multiple choice selection.\nApply a custom appearance filter\nOr implement any custom theme of your liking.\nNo filtering is applied\nA tabbed widget for switching between views in an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nContains stylesheet implementations for widgets native to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange the appearance of menu bars and their menus.\nStyles for the button widget from iced-rs.\nApply a custom appearance filter\nNo filtering is applied\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe appearance of a menu bar and its menus.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe default style.\nThe style of a menu bar and its menus\nThe supported style of the <code>StyleSheet</code>.\nThe style sheet of a menu bar and its menus.\nProduces the <code>Appearance</code> of a menu bar and its menus.\nThe background color of the menu bar and its menus.\nThe expand value of the menus’ background\nThe border radius of the menu bar.\nThe border <code>Color</code> of the menu bar and its menus.\nThe border width of the menu bar and its menus.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe border radius of the menus.\naccent element colors\naccent button element colors\nCurrently-defined theme.\ncosmic-comp active hint window outline width\nCurrently-defined theme type.\nThe transparency component. 0.0 (or 0u8) is fully …\nbackground element colors\nThe base color of the widget\nthe color of the border for the widget\nbutton component styling\nThe color.\ncorner radii\nget current container can be used in a component that is …\ndestructive element colors\ndestructive button element colors\nthe color of the widget when it is disabled\nthe color of the border for the widget when it is disabled\nthe color of dividers for this widget\nthe color of the widget when it is focused\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncosmic-comp window gaps size (outer, inner)\nThe color of the widget when it is hovered\nicon button element colors\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the active theme has a dark preference.\nWhether the theme has a dark preference.\nis dark\nenables blurred transparency\nWhether the active theme is high contrast.\nWhether the theme has a high contrast.\nis high contrast\nlink button element colors\nname of the theme\nthe color of text for this widget\nthe color of text in the widget when it is disabled\npalette\nPrefer dark or light theme. If <code>None</code>, the system preference …\nthe color of the widget when it is pressed\nprimary element colors\nsecondary element colors\nthe color of the widget when it is selected\nthe color of the widget when it is selected\nset the theme\nshade color for dialogs\nspacing\nStylesheet implements for <code>crate::Theme</code>\nWatches for changes to the system’s theme preference.\nsuggested element colors\nsuggested button element colors\nLoads the preferred system theme from <code>cosmic-config</code>.\ntext button element colors\nwarning element colors\nwarning button element colors\ncosmic-comp custom window hint color\nA widget for multiple choice selection.\nApply a custom appearance filter\nOr implement any custom theme of your liking.\nNo filtering is applied\nA tabbed widget for switching between views in an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nContains stylesheet implementations for widgets native to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange the appearance of menu bars and their menus.\nStyles for the button widget from iced-rs.\nApply a custom appearance filter\nNo filtering is applied\nThe appearance of a menu bar and its menus.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe default style.\nThe style of a menu bar and its menus\nThe supported style of the <code>StyleSheet</code>.\nThe style sheet of a menu bar and its menus.\nProduces the <code>Appearance</code> of a menu bar and its menus.\nThe background color of the menu bar and its menus.\nThe expand value of the menus’ background\nThe border radius of the menu bar.\nThe border <code>Color</code> of the menu bar and its menus.\nThe border width of the menu bar and its menus.\nThe border radius of the menus.\nA generic button which emits a message when pressed.\nA widget capable of drawing 2D graphics.\nItems are centered around the middle of the axis\nA box that can be checked.\nA widget for searching and selecting a single value from a …\nAn element decorating some content.\nA context menu is a menu in a graphical user interface …\nA widget for selecting a single value from a list of …\nItems are packed toward the end of the axis\nItems are packed towards the flex-relative end of the axis.\nResponsively generates rows and columns of widgets based …\nItems are packed towards the flex-relative start of the …\nResponsively generates rows and columns of widgets based …\nAn image which may be an SVG or PNG.\nThe identifier of a generic widget.\nAn element decorating some content.\nA frame that displays an image while keeping aspect ratio.\nSets the distribution of space between and around content …\nAn element decorating some content.\nA widget that only rebuilds its contents when necessary.\nEmit messages on mouse events.\nA piece of logic that can traverse the widget tree of an …\nA collection of panes distributed using either vertical or …\nA bar that displays progress.\nA circular button representing a choice.\nA widget that is aware of its dimensions.\nAn horizontal bar and a handle that selects a single value …\nAn amount of empty space.\nThe gap between the first and last items is exactly HALF …\nThe first and last items are aligned flush with the edges …\nThe gap between the first and last items is exactly THE …\nItems are packed toward the start of the axis\nItems are stretched to fill the container\nA vector graphics image.\nA paragraph.\nA multi-line text input.\nA field that can be filled with text.\nAn vertical bar and a handle that selects a single value …\nA component that displays information and allows …\nA container which constraints itself to a specific aspect …\nBuild the widget\nButton widgets for COSMIC applications.\nA button with the default style, which may contain any …\nA widget that displays an interactive calendar.\nA widget that displays an interactive calendar.\nDraw 2D graphics for your users.\nCreates a new <code>Canvas</code>.\nPushes an element to the center region.\nShow toggle controls using checkboxes.\nCreates a new <code>Checkbox</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nWidgets for selecting colors with a color picker.\nA container which aligns its children in a column.\nA container which aligns its children in a column.\nDisplay a dropdown list of searchable and selectable …\nCreates a new <code>ComboBox</code>.\nDecorate content and apply alignment.\nCreates a new <code>Container</code> with the provided content.\nOperates on a widget that contains other widgets.\nAn overlayed widget that attaches a toggleable context …\nAn overlayed widget that attaches a toggleable context …\nA context menu is a menu in a graphical user interface …\nA context menu is a menu in a graphical user interface …\nOperates on a custom widget.\nControls the density of the headerbar.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nAn element to distinguish a boundary between two elements.\nAdds the drag destination rectangles of the widget. Runs …\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nDisplays a list of options in a popover menu on select.\nDisplays a list of options in a popover menu on select.\nA text label whiich can transform into a text input on …\nPushes an element to the end region.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nResponsively generates rows of widgets based on the …\nResponsively generates rows of widgets based on the …\nOperates on a widget that can be focused.\nFocused state of the window\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nArrange widgets with a grid layout.\nArrange widgets with a grid layout.\nCreates a new horizontal <code>Space</code> with the given <code>Length</code>.\nLazily-generated SVG icon widget for Iced.\nCreate an <code>Icon</code> from a pre-existing <code>Handle</code>\nReturns the id of the widget\nDisplay images in your user interface.\nCreates a new <code>Image</code>.\nCreates a new inline <code>TextInput</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nCreates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …\nA <code>MenuBar</code> widget for displaying [<code>MenuTree</code>]s\nA container intercepting mouse events.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nNavigation side panel for switching between views.\nNavigation side panel for switching between views.\nNavigation side panel for switching between views. Can …\nA button for toggling the navigation side panel.\nA message emitted when the close button is pressed.\nA message emitted when dragged.\nProcesses a runtime <code>Event</code>.\nA message emitted when the maximize button is pressed.\nA message emitted when the minimize button is pressed.\nA message emitted when the header is right clicked.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nReturns the overlay of the <code>Widget</code>, if there is any.\nLet your users split regions of your application and …\nA widget showing a popup in an overlay positioned relative …\nProvide progress feedback to your users.\nCreates a new <code>ProgressBar</code>.\nCreate choices using radio buttons.\nCreates a new <code>Radio</code>.\nCreates a new <code>Responsive</code> widget with a closure that …\nA container which aligns its children in a row.\nA container which aligns its children in a row.\nOperates on a widget that can be scrolled.\nCreates a new search <code>TextInput</code>.\nCreates a new search <code>TextInput</code>.\nA widget providing a conjoined set of linear items that …\nA selection of multiple choices appearing as a conjoined …\nSets the id of the widget This may be called while diffing …\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nDisplay an interactive selector of a single value from a …\nCreates a new <code>Slider</code>.\nDistribute content vertically.\nA control for incremental adjustments of a value.\nA control for incremental adjustments of a value.\nPushes an element to the start region.\nReturns the <code>State</code> of the <code>Widget</code>.\nDisplay vector graphics in your application.\nCreates a new <code>Svg</code> widget from the given <code>Handle</code>.\nA collection of tabs for developing a tabbed interface.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nCreates a new <code>Text</code> widget with the provided content.\nDisplay a multi-line text input for text editing.\nCreates a new <code>TextEditor</code>.\nA text input widget from iced widgets plus some added …\nCreates a new <code>TextInput</code>.\nOperates on a widget that has text input.\nDefines the title of the window\nA widget that displays toasts.\nDisplay an interactive selector of a single value from a …\nCreates a new <code>VerticalSlider</code>.\nCreates a new vertical <code>Space</code> with the given <code>Length</code>.\nConverts the headerbar builder into an Iced element.\nThe appearance of a container.\nA container which constraints itself to a specific aspect …\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the <code>Appearance</code> of a container.\nSets the content alignment for the horizontal axis of the …\nSets the content alignment for the vertical axis of the …\nProduces the <code>Appearance</code> of a container.\nThe <code>Background</code> of the container.\nThe <code>Border</code> of the container.\nCenters the contents in the horizontal axis of the …\nCenters the contents in the vertical axis of the <code>Container</code>.\nReturns the argument unchanged.\nSets the height of the <code>Container</code>.\nThe icon <code>Color</code> of the container.\nCalls <code>U::from(self)</code>.\nSets the maximum height of the <code>Container</code> in pixels.\nSets the maximum width of the <code>Container</code>.\nSets the <code>Padding</code> of the <code>Container</code>.\nThe <code>Shadow</code> of the container.\nSets the style of the <code>Container</code>.\nThe text <code>Color</code> of the container.\nSets the width of the [<code>self.</code>].\nThe appearance of a button.\nA builder for constructing a custom <code>Button</code>.\nA generic button which emits a message when pressed.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a button.\nProduces the active <code>Appearance</code> of a button.\nThe <code>Background</code> of the button.\nThe border <code>Color</code> of the button.\nThe border radius of the button.\nThe border width of the button.\nA button with the default style, which may contain any …\nAn image button which may contain any widget as its …\nA text button with the destructive style\nProduces the disabled <code>Appearance</code> of a button.\n<code>Appearance</code> when the button is the target of a DND …\n<code>Appearance</code> when the button is the target of a DND …\nApplies the <strong>Extra Large</strong> button size preset.\nApplies the <strong>Extra Large</strong> button size preset.\nApplies the <strong>Extra Small</strong> button size preset.\nApplies the <strong>Extra Small</strong> button size preset.\nProduces a <code>Command</code> that focuses the <code>Button</code> with the given …\nSets the preferred font size.\nSets the preferred font weight.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the height of the <code>Button</code>.\nSets the preferred height of the button.\nProduces the hovered <code>Appearance</code> of a button.\nA button constructed from an icon handle, using icon …\nThe icon <code>Color</code> of the button.\nSets the preferred size of icons.\nSets the <code>Id</code> of the <code>Button</code>.\nSets the <code>Id</code> of the button.\nA button constructed from an image handle, using image …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe label to display within the button.\nApplies the <strong>Large</strong> button size preset.\nApplies the <strong>Large</strong> button size preset.\nComputes the layout of a <code>Button</code>.\nSets the prefered font line height.\nHyperlink button widget\nA hyperlink button.\nApplies the <strong>Medium</strong> button size preset.\nApplies the <strong>Medium</strong> button size preset.\nReturns the <code>mouse::Interaction</code> of a <code>Button</code>.\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the button is …\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nSet the value of [<code>on_press</code>] as either <code>Some</code> or <code>None</code>.\nThe <code>Color</code> of the outline.\nAn outline placed around the border.\nSets the <code>Padding</code> of the <code>Button</code>.\nSets the preferred padding of the button.\nProduces the pressed <code>Appearance</code> of a button.\nSets the widget to a selected state.\nBackground color of the selection indicator\nThe amount of offset to apply to the shadow of the button.\nSets the preferred spacing between elements in the button.\nA text button with the standard style\nSets the style variant of this <code>Button</code>.\nThe preferred style of the button.\nA text button with the suggested style\nA text button with the text style\nThe text <code>Color</code> of the button.\nSets the width of the <code>Button</code>.\nSets the preferred width of the button.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA hyperlink button.\nA widget that displays an interactive calendar.\nGets the first date that will be visible on the calender\nA bevelled corner.\nThe stroke for each sub-path does not extend beyond its …\nA simple cache that stores generated <code>Geometry</code> to avoid …\nA widget capable of drawing 2D graphics.\nA <code>Canvas</code> event.\nThe style used to fill geometry.\nThe kind of geometry this renderer can draw.\nA fill which linearly interpolates colors along a …\nA <code>Gradient</code> color.\nA keyboard event.\nThe shape used at the end of open subpaths when they are …\nThe dash pattern used when stroking the line.\nThe shape used at the corners of paths or basic shapes …\nA linear gradient interpolates colors along a direction …\nA sharp corner.\nA mouse event.\nAn immutable set of points that may or may not be …\nThe state and logic of a <code>Canvas</code>.\nA renderer capable of drawing some <code>Self::Geometry</code>.\nAt the end of each sub-path, the shape representing the …\nA round corner.\nA solid <code>Color</code>.\nAt the end of each sub-path, the shape representing the …\nThe internal state mutated by the <code>Program</code>.\nThe style of a stroke.\nThe coloring style of some drawing.\nA bunch of text that can be drawn to a canvas\nA touch event.\nThe color of the text\nThe contents of the text\nDraws the given layers of <code>Self::Geometry</code>.\nDraws the state of the <code>Program</code>, producing a bunch of …\nHandle events of a canvas.\nFill <code>Geometry</code> with a certain style.\nThe font of the text\nA gradient that can be used as a fill for some geometry.\nThe horizontal alignment of the text\nThe shape to be used at the end of open subpaths when they …\nThe dash pattern used when stroking the line.\nThe line height of the text.\nThe shape to be used at the corners of paths or basic …\nReturns the current mouse interaction of the <code>Program</code>.\nThe offset of <code>LineDash::segments</code> to start the pattern.\nBuild different kinds of 2D shapes.\nThe position of the text relative to the alignment …\nThe fill rule defines how to determine what is inside and …\nThe alternating lengths of lines and gaps which describe …\nThe shaping strategy of the text.\nThe size of the text\nCreate lines from a <code>Path</code> and assigns them various …\nThe color or gradient of the fill.\nThe color or gradient of the stroke.\nUpdates the <code>State</code> of the <code>Program</code>.\nThe vertical alignment of the text\nThe distance between the two edges of the stroke.\nThe <code>Event</code> was handled and processed by a widget.\nA <code>Canvas</code> event.\nThe <code>Event</code> was <strong>NOT</strong> handled by any widget.\nA keyboard event.\nA mouse event.\nThe status of an <code>Event</code> after being processed.\nA touch event.\nThe style used to fill geometry.\nA <code>Gradient</code> color.\nThe fill rule defines how to determine what is inside and …\nA solid <code>Color</code>.\nThe coloring style of some drawing.\nThe fill rule defines how to determine what is inside and …\nThe color or gradient of the fill.\nA fill which linearly interpolates colors along a …\nA linear gradient.\nA linear gradient interpolates colors along a direction …\nPacked <code>Gradient</code> data for use in shader code.\nThe absolute ending position of the gradient.\nCreates a new <code>Packed</code> gradient for use in shader code.\nThe absolute starting position of the gradient.\n<code>ColorStop</code>s along the linear gradient direction.\nA segment of a differentiable curve.\nA <code>Path</code> builder.\nAn immutable set of points that may or may not be …\nBuild and draw curves.\nThe center of the arc.\nThe end of the segment’s angle in radians, clockwise …\nThe radius of the arc.\nThe start of the segment’s angle in radians, clockwise …\nA segment of a differentiable curve.\nAn elliptical <code>Arc</code>.\nThe center of the arc.\nThe center of the arc.\nThe end of the segment’s angle in radians, clockwise …\nThe end of the segment’s angle in radians, clockwise …\nThe radii of the arc’s ellipse. The horizontal and …\nThe radius of the arc.\nThe clockwise rotation of the arc’s ellipse.\nThe start of the segment’s angle in radians, clockwise …\nThe start of the segment’s angle in radians, clockwise …\nFlag parameters for arcs as described by the SVG …\nAn alias for <code>usize</code>.\nA view over a contiguous storage of custom attributes.\nInterface for objects storing custom attributes associated …\nAn alias for a slice of <code>f32</code> values.\nA beveled corner is to be used to join path segments. The …\nThe default builder for <code>Path</code>.\nA builder for <code>Path</code> with custom attributes.\nThe stroke for each sub-path does not extend beyond its …\nID of a control point in a path.\nID of an endpoint point in a path.\nRepresents an event or edge of path.\nRefers to an event in a path.\nThe fill rule defines how to determine what is inside and …\nA path event representing endpoints and control points as …\nAn iterator of endpoint and control point ids for <code>Path</code> and …\nA view over a sequence of endpoint IDs forming a polygon.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nLine cap as defined by the SVG specification.\nLine join as defined by the SVG specification.\nA sharp corner is to be used to join path segments.\nSame as a miter join, but if the miter limit is exceeded, …\nAn empty attribute slice.\nA simple path data structure.\nAn object that stores multiple paths contiguously.\nA view on a <code>PathBuffer</code>.\nThe commands of a path encoded in a single array using IDs …\nA view over <code>PathCommands</code>.\nA path event representing endpoints and control points as …\nA view on a <code>Path</code>.\nA view over a sequence of endpoints forming a polygon.\nInterface for types types (typically endpoints and control …\nInterface for objects storing endpoints and control points …\nAn iterator of over a <code>Path</code> traversing the path in reverse.\nAt each end of each sub-path, the shape representing the …\nA round corner is to be used to join path segments.\nThe positive or negative side of a vector or segment.\nAt the end of each sub-path, the shape representing the …\nThe two possible orientations for the edges of a shape to …\nPath building utilities.\nA generic representation for paths that allow more control …\nReturns the endpoint’s custom attributes as a slice of …\nTools to iterate over paths.\nOf the four candidate arc sweeps, two will represent an …\nf32 version of the lyon_geom types used everywhere. Most …\nReturns the number of float attributes per endpoint.\nThe default path data structure.\nA container to store multiple paths contiguously.\nSpecific path types for polygons.\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\n<code>lyon_path</code> traits reexported here for convenience.\nThe radius of each corner of a rounded rectangle.\nBuilds a path.\nA Builder that approximates curves with successions of …\nA convenience wrapper for <code>PathBuilder</code> without custom …\nThe base path building interface.\nThe type of object that is created by this builder.\nA path building interface that tries to stay close to SVG…\nBuilds a path with a transformation applied.\nImplements an SVG-like building interface on top of a …\nAdds a sub-path containing a circle.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single point.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds an elliptical arc.\nStarts a new sub-path at a given position.\nBuilds a path object, consuming the builder.\nEnds the current sub-path by connecting it back to its …\nCloses the current sub path.\nAdds a cubic bézier curve to the current sub-path.\nAdds a cubic bézier segment to the current sub-path.\nEnds the current sub path.\nReturns a builder that approximates all curves with …\nAdds an horizontal line segment.\nAdds a line segment to the current sub-path.\nAdds a line segment to the current sub-path.\nStart a new sub-path at the given position.\nApplies the provided path event.\nAdds a quadratic bézier curve to the current sub-path.\nAdds a quadratic bézier segment to the current sub-path.\nEquivalent to <code>arc_to</code> in relative coordinates.\nEquivalent to <code>cubic_bezier_to</code> in relative coordinates.\nAdds an horizontal line segment in relative coordinates.\nEquivalent to <code>line_to</code> in relative coordinates.\nEquivalent to <code>move_to</code> in relative coordinates.\nEquivalent to <code>quadratic_bezier_to</code> in relative coordinates.\nAdds a vertical line segment in relative coordinates.\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nEquivalent to <code>cubic_bezier_to</code> with implicit first control …\nEquivalent to <code>quadratic_bezier_to</code> with implicit control …\nEquivalent to <code>smooth_cubic_bezier_to</code> in relative …\nEquivalent to <code>smooth_quadratic_bezier_to</code> in relative …\nReturns a builder that applies the given transformation to …\nAdds a vertical line segment.\nReturns a builder that support SVG commands.\nA view on a <code>PathCommands</code> buffer and two slices for …\nAn iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.\nAn iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.\nThe commands of a path encoded in a single array using IDs …\nBuilds path commands.\nA view over <code>PathCommands</code>.\nAn iterator of <code>PathEvent</code>.\nAn angle in radians\nAn elliptic arc curve segment.\nFlag parameters for arcs as described by the SVG …\nA 2d curve segment defined by four points: the beginning …\nAn infinite line defined by a point and a vector.\nA line defined by the equation …\nA linear segment.\nA 2d curve segment defined by three points: the beginning …\nAlias for <code>euclid::default::Rotation2D</code>\nCommon APIs to segment types.\nAn elliptic arc curve segment using the SVG’s end-point …\nAlias for <code>euclid::default::Transform2D</code>\nAlias for <code>euclid::default::Translation2D</code>\nA 2D triangle defined by three points <code>a</code>, <code>b</code> and <code>c</code>.\nReturn the curve after the split point.\nAngle in radians\nCompute the length of the segment using a flattened …\nElliptic arc related maths and tools.\nReturn the curve before the split point.\nSample the derivative at t (expecting t between 0 and 1).\nSample x derivative at t (expecting t between 0 and 1).\nSample y derivative at t (expecting t between 0 and 1).\nEpsilon constants are usually not a good way to deal with …\nSwap the direction of the segment.\nApproximates the curve with sequence of line segments.\nStart of the curve.\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nOf the four candidate arc sweeps, two will represent an …\nShorthand for <code>Point::new(x, y)</code>.\nSample the curve at t (expecting t between 0 and 1).\nShorthand for <code>Size::new(x, y)</code>.\nSplit this curve into two sub-curves.\nReturn the curve inside a given range of t.\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\nEnd of the curve.\nShorthand for <code>Vector::new(x, y)</code>.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nSample x at t (expecting t between 0 and 1).\nThe <code>x</code> (traditionally, horizontal) coordinate.\nSample y at t (expecting t between 0 and 1).\nThe <code>y</code> (traditionally, vertical) coordinate.\nAn elliptic arc curve segment.\nFlag parameters for arcs as described by the SVG …\nFlattening iterator for arcs.\nAn elliptic arc curve segment using the SVG’s end-point …\nOf the four candidate arc sweeps, two will represent an …\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\nA string with a fixed capacity.\nA vector with a fixed capacity.\nError value indicating insufficient capacity\nA draining iterator for <code>ArrayVec</code>.\nBy-value iterator for <code>ArrayVec</code>.\nA 2d curve segment defined by four points: the beginning …\nAn angle in radians\nA 2d vector of booleans, useful for component-wise logic …\nA 3d vector of booleans, useful for component-wise logic …\nA 2d axis aligned rectangle represented by its minimum and …\nAn axis aligned 3D box represented by its minimum and …\nHomogeneous vector in 3D space.\nA one-dimensional distance, with value represented by <code>T</code> …\nA 2d Point tagged with a unit.\nA 3d Point tagged with a unit.\nA 2d Rectangle optionally tagged with a unit.\nA rigid transformation. All lengths are preserved under …\nA transform that can represent rotations in 2d, …\nA transform that can represent rotations in 3d, …\nA scaling factor between two different units of …\nA group of 2D side offsets, which correspond to …\nA 2d size tagged with a unit.\nA 3d size tagged with a unit.\nA 2d transform represented by a column-major 3 by 3 …\nA 3d transform stored as a column-major 4 by 4 matrix.\nA 2d transformation from a space to another that can only …\nA 3d transformation from a space to another that can only …\nTrait for basic trigonometry functions, so they can be …\nThe default unit.\nA 2d Vector tagged with a unit.\nA 3d Vector tagged with a unit.\nAngle in radians\nUtilities for testing approximate ordering - especially …\nShorthand for …\nShorthand for <code>BoolVector2D { x, y }</code>.\nShorthand for <code>BoolVector3D { x, y, z }</code>.\nA set of aliases for all types, tagged with the default …\nThe extent of the element in the <code>U</code> units along the <code>z</code> axis.\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis.\nComponent multiplied by the imaginary number <code>i</code>.\nComponent multiplied by the imaginary number <code>j</code>.\nComponent multiplied by the imaginary number <code>k</code>.\nA one-dimensional length, tagged with its units.\nShorthand for <code>Point2D::new(x, y)</code>.\nShorthand for <code>Point3D::new(x, y)</code>.\nThe real part.\nShorthand for …\nShorthand for <code>Size2D::new(w, h)</code>.\nShorthand for <code>Size3D::new(w, h, d)</code>.\nConvenience constructor.\nConvenience constructor.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>z</code> (traditionally, depth) coordinate.\nTrait for testing approximate equality\nDefault epsilon value\nReturns <code>true</code> is this object is approximately equal to the …\nReturns <code>true</code> is this object is approximately equal to the …\nAngle in radians\nThe extent of the element in the <code>U</code> units along the <code>z</code> axis.\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis.\nComponent multiplied by the imaginary number <code>i</code>.\nComponent multiplied by the imaginary number <code>j</code>.\nComponent multiplied by the imaginary number <code>k</code>.\nThe real part.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>z</code> (traditionally, depth) coordinate.\nDefines the smallest integer equal or greater than the …\nDefines the biggest integer equal or lower than the …\nDefines the nearest integer value to the original value.\nRounds to the smallest integer equal or greater than the …\nRounds to the biggest integer equal or lower than the …\nRounds to the nearest integer value.\nA flattening iterator for quadratic bézier segments.\nA flattening iterator for quadratic bézier segments.\nA 2d curve segment defined by three points: the beginning …\nCommon APIs to segment types.\nReturn the curve after the split point.\nCompute the length of the segment using a flattened …\nReturn the curve before the split point.\nSample the derivative at t (expecting t between 0 and 1).\nSample x derivative at t (expecting t between 0 and 1).\nSample y derivative at t (expecting t between 0 and 1).\nSwap the direction of the segment.\nApproximates the curve with sequence of line segments.\nStart of the curve.\nSample the curve at t (expecting t between 0 and 1).\nSplit this curve into two sub-curves.\nReturn the curve inside a given range of t.\nEnd of the curve.\nSample x at t (expecting t between 0 and 1).\nSample y at t (expecting t between 0 and 1).\nAngle between vectors v1 and v2 (oriented clockwise …\nAn iterator that consumes <code>Event</code> iterator and yields …\nAn iterator that consumes an iterator of <code>Point</code>s and …\nAn extension trait for <code>PathEvent</code> iterators.\nApplies a 2D transform to a path iterator and yields the …\nReturns an iterator that turns curves into line segments.\nReturns an iterator applying a 2D transform to all of its …\nAn angle in radians (f32).\nAlias for <code>euclid::default::Box2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Point2D&lt;f32&gt;</code>.\nAlias for <code>euclid::default::Rotation2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Scale&lt;f32&gt;</code>\nAlias for <code>euclid::default::Size2D&lt;f32&gt;</code>.\nAlias for <code>euclid::default::Transform2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Translation2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Point2D&lt;f32&gt;</code>.\nAngle in radians\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nShorthand for <code>Point::new(x, y)</code>.\nShorthand for <code>Size::new(x, y)</code>.\nShorthand for <code>Vector::new(x, y)</code>.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe default builder for <code>Path</code>.\nA builder for <code>Path</code> with custom attributes.\nAn iterator of endpoint and control point ids for <code>Path</code> and …\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nA simple path data structure.\nA view on a <code>Path</code>.\nAn iterator of over a <code>Path</code> traversing the path in reverse.\nA Builder that appends a path to an existing PathBuffer.\nA Builder that appends a path to an existing PathBuffer, …\nIterator over the paths in a <code>PathBufferSlice</code>.\nAn object that stores multiple paths contiguously.\nA view on a <code>PathBuffer</code>.\nA view over a sequence of endpoint IDs forming a polygon.\nAn iterator of <code>Event&lt;EndpointId, ()&gt;</code>.\nAn iterator of <code>PathEvent</code>.\nA view over a sequence of endpoints forming a polygon.\nAn iterator of <code>IdEvent</code> for <code>Polygon</code>.\nAn iterator of <code>Event&lt;&amp;Endpoint, ()&gt;</code>.\nBuilds a path.\nThe base path building interface.\nAn extension trait for <code>PathEvent</code> iterators.\nThe type of object that is created by this builder.\nA path building interface that tries to stay close to SVG…\nAdds a sub-path containing a circle.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single point.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds an elliptical arc.\nStarts a new sub-path at a given position.\nBuilds a path object, consuming the builder.\nEnds the current sub-path by connecting it back to its …\nCloses the current sub path.\nAdds a cubic bézier curve to the current sub-path.\nAdds a cubic bézier segment to the current sub-path.\nEnds the current sub path.\nReturns a builder that approximates all curves with …\nReturns an iterator that turns curves into line segments.\nAdds an horizontal line segment.\nAdds a line segment to the current sub-path.\nAdds a line segment to the current sub-path.\nStart a new sub-path at the given position.\nApplies the provided path event.\nAdds a quadratic bézier curve to the current sub-path.\nAdds a quadratic bézier segment to the current sub-path.\nEquivalent to <code>arc_to</code> in relative coordinates.\nEquivalent to <code>cubic_bezier_to</code> in relative coordinates.\nAdds an horizontal line segment in relative coordinates.\nEquivalent to <code>line_to</code> in relative coordinates.\nEquivalent to <code>move_to</code> in relative coordinates.\nEquivalent to <code>quadratic_bezier_to</code> in relative coordinates.\nAdds a vertical line segment in relative coordinates.\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nEquivalent to <code>cubic_bezier_to</code> with implicit first control …\nEquivalent to <code>quadratic_bezier_to</code> with implicit control …\nEquivalent to <code>smooth_cubic_bezier_to</code> in relative …\nEquivalent to <code>smooth_quadratic_bezier_to</code> in relative …\nReturns a builder that applies the given transformation to …\nReturns an iterator applying a 2D transform to all of its …\nAdds a vertical line segment.\nReturns a builder that support SVG commands.\nA bevelled corner.\nThe stroke for each sub-path does not extend beyond its …\nA <code>Gradient</code> color.\nThe shape used at the end of open subpaths when they are …\nThe dash pattern used when stroking the line.\nThe shape used at the corners of paths or basic shapes …\nA sharp corner.\nAt the end of each sub-path, the shape representing the …\nA round corner.\nA solid <code>Color</code>.\nAt the end of each sub-path, the shape representing the …\nThe style of a stroke.\nThe coloring style of some drawing.\nThe shape to be used at the end of open subpaths when they …")