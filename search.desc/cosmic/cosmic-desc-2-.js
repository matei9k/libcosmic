searchState.loadedDescShard("cosmic", 2, "Adds a sub-path from a polygon.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds an elliptical arc.\nStarts a new sub-path at a given position.\nBuilds a path object, consuming the builder.\nEnds the current sub-path by connecting it back to its …\nCloses the current sub path.\nAdds a cubic bézier curve to the current sub-path.\nAdds a cubic bézier segment to the current sub-path.\nEnds the current sub path.\nReturns a builder that approximates all curves with …\nAdds an horizontal line segment.\nAdds a line segment to the current sub-path.\nAdds a line segment to the current sub-path.\nStart a new sub-path at the given position.\nApplies the provided path event.\nAdds a quadratic bézier curve to the current sub-path.\nAdds a quadratic bézier segment to the current sub-path.\nEquivalent to <code>arc_to</code> in relative coordinates.\nEquivalent to <code>cubic_bezier_to</code> in relative coordinates.\nAdds an horizontal line segment in relative coordinates.\nEquivalent to <code>line_to</code> in relative coordinates.\nEquivalent to <code>move_to</code> in relative coordinates.\nEquivalent to <code>quadratic_bezier_to</code> in relative coordinates.\nAdds a vertical line segment in relative coordinates.\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nEquivalent to <code>cubic_bezier_to</code> with implicit first control …\nEquivalent to <code>quadratic_bezier_to</code> with implicit control …\nEquivalent to <code>smooth_cubic_bezier_to</code> in relative …\nEquivalent to <code>smooth_quadratic_bezier_to</code> in relative …\nReturns a builder that applies the given transformation to …\nAdds a vertical line segment.\nReturns a builder that support SVG commands.\nA view on a <code>PathCommands</code> buffer and two slices for …\nAn iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.\nAn iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.\nThe commands of a path encoded in a single array using IDs …\nBuilds path commands.\nA view over <code>PathCommands</code>.\nAn iterator of <code>PathEvent</code>.\nAn angle in radians\nAn elliptic arc curve segment.\nFlag parameters for arcs as described by the SVG …\nA 2d curve segment defined by four points: the beginning …\nAn infinite line defined by a point and a vector.\nA line defined by the equation …\nA linear segment.\nA 2d curve segment defined by three points: the beginning …\nAlias for <code>euclid::default::Rotation2D</code>\nCommon APIs to segment types.\nAn elliptic arc curve segment using the SVG’s end-point …\nAlias for <code>euclid::default::Transform2D</code>\nAlias for <code>euclid::default::Translation2D</code>\nA 2D triangle defined by three points <code>a</code>, <code>b</code> and <code>c</code>.\nReturn the curve after the split point.\nAngle in radians\nCompute the length of the segment using a flattened …\nElliptic arc related maths and tools.\nReturn the curve before the split point.\nSample the derivative at t (expecting t between 0 and 1).\nSample x derivative at t (expecting t between 0 and 1).\nSample y derivative at t (expecting t between 0 and 1).\nEpsilon constants are usually not a good way to deal with …\nSwap the direction of the segment.\nApproximates the curve with sequence of line segments.\nStart of the curve.\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nOf the four candidate arc sweeps, two will represent an …\nShorthand for <code>Point::new(x, y)</code>.\nSample the curve at t (expecting t between 0 and 1).\nShorthand for <code>Size::new(x, y)</code>.\nSplit this curve into two sub-curves.\nReturn the curve inside a given range of t.\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\nEnd of the curve.\nShorthand for <code>Vector::new(x, y)</code>.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nSample x at t (expecting t between 0 and 1).\nThe <code>x</code> (traditionally, horizontal) coordinate.\nSample y at t (expecting t between 0 and 1).\nThe <code>y</code> (traditionally, vertical) coordinate.\nAn elliptic arc curve segment.\nFlag parameters for arcs as described by the SVG …\nFlattening iterator for arcs.\nAn elliptic arc curve segment using the SVG’s end-point …\nOf the four candidate arc sweeps, two will represent an …\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\nA string with a fixed capacity.\nA vector with a fixed capacity.\nError value indicating insufficient capacity\nA draining iterator for <code>ArrayVec</code>.\nBy-value iterator for <code>ArrayVec</code>.\nA 2d curve segment defined by four points: the beginning …\nAn angle in radians\nA 2d vector of booleans, useful for component-wise logic …\nA 3d vector of booleans, useful for component-wise logic …\nA 2d axis aligned rectangle represented by its minimum and …\nAn axis aligned 3D box represented by its minimum and …\nHomogeneous vector in 3D space.\nA one-dimensional distance, with value represented by <code>T</code> …\nA 2d Point tagged with a unit.\nA 3d Point tagged with a unit.\nA 2d Rectangle optionally tagged with a unit.\nA rigid transformation. All lengths are preserved under …\nA transform that can represent rotations in 2d, …\nA transform that can represent rotations in 3d, …\nA scaling factor between two different units of …\nA group of 2D side offsets, which correspond to …\nA 2d size tagged with a unit.\nA 3d size tagged with a unit.\nA 2d transform represented by a column-major 3 by 3 …\nA 3d transform stored as a column-major 4 by 4 matrix.\nA 2d transformation from a space to another that can only …\nA 3d transformation from a space to another that can only …\nTrait for basic trigonometry functions, so they can be …\nThe default unit.\nA 2d Vector tagged with a unit.\nA 3d Vector tagged with a unit.\nAngle in radians\nUtilities for testing approximate ordering - especially …\nShorthand for …\nShorthand for <code>BoolVector2D { x, y }</code>.\nShorthand for <code>BoolVector3D { x, y, z }</code>.\nA set of aliases for all types, tagged with the default …\nThe extent of the element in the <code>U</code> units along the <code>z</code> axis.\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis.\nComponent multiplied by the imaginary number <code>i</code>.\nComponent multiplied by the imaginary number <code>j</code>.\nComponent multiplied by the imaginary number <code>k</code>.\nA one-dimensional length, tagged with its units.\nShorthand for <code>Point2D::new(x, y)</code>.\nShorthand for <code>Point3D::new(x, y)</code>.\nThe real part.\nShorthand for …\nShorthand for <code>Size2D::new(w, h)</code>.\nShorthand for <code>Size3D::new(w, h, d)</code>.\nConvenience constructor.\nConvenience constructor.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>z</code> (traditionally, depth) coordinate.\nTrait for testing approximate equality\nDefault epsilon value\nReturns <code>true</code> is this object is approximately equal to the …\nReturns <code>true</code> is this object is approximately equal to the …\nAngle in radians\nThe extent of the element in the <code>U</code> units along the <code>z</code> axis.\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis.\nComponent multiplied by the imaginary number <code>i</code>.\nComponent multiplied by the imaginary number <code>j</code>.\nComponent multiplied by the imaginary number <code>k</code>.\nThe real part.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>z</code> (traditionally, depth) coordinate.\nDefines the smallest integer equal or greater than the …\nDefines the biggest integer equal or lower than the …\nDefines the nearest integer value to the original value.\nRounds to the smallest integer equal or greater than the …\nRounds to the biggest integer equal or lower than the …\nRounds to the nearest integer value.\nA flattening iterator for quadratic bézier segments.\nA flattening iterator for quadratic bézier segments.\nA 2d curve segment defined by three points: the beginning …\nCommon APIs to segment types.\nReturn the curve after the split point.\nCompute the length of the segment using a flattened …\nReturn the curve before the split point.\nSample the derivative at t (expecting t between 0 and 1).\nSample x derivative at t (expecting t between 0 and 1).\nSample y derivative at t (expecting t between 0 and 1).\nSwap the direction of the segment.\nApproximates the curve with sequence of line segments.\nStart of the curve.\nSample the curve at t (expecting t between 0 and 1).\nSplit this curve into two sub-curves.\nReturn the curve inside a given range of t.\nEnd of the curve.\nSample x at t (expecting t between 0 and 1).\nSample y at t (expecting t between 0 and 1).\nAngle between vectors v1 and v2 (oriented clockwise …\nAn iterator that consumes <code>Event</code> iterator and yields …\nAn iterator that consumes an iterator of <code>Point</code>s and …\nAn extension trait for <code>PathEvent</code> iterators.\nApplies a 2D transform to a path iterator and yields the …\nReturns an iterator that turns curves into line segments.\nReturns an iterator applying a 2D transform to all of its …\nAn angle in radians (f32).\nAlias for <code>euclid::default::Box2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Point2D&lt;f32&gt;</code>.\nAlias for <code>euclid::default::Rotation2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Scale&lt;f32&gt;</code>\nAlias for <code>euclid::default::Size2D&lt;f32&gt;</code>.\nAlias for <code>euclid::default::Transform2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Translation2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Point2D&lt;f32&gt;</code>.\nAngle in radians\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nShorthand for <code>Point::new(x, y)</code>.\nShorthand for <code>Size::new(x, y)</code>.\nShorthand for <code>Vector::new(x, y)</code>.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe default builder for <code>Path</code>.\nA builder for <code>Path</code> with custom attributes.\nAn iterator of endpoint and control point ids for <code>Path</code> and …\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nA simple path data structure.\nA view on a <code>Path</code>.\nAn iterator of over a <code>Path</code> traversing the path in reverse.\nA Builder that appends a path to an existing PathBuffer.\nA Builder that appends a path to an existing PathBuffer, …\nIterator over the paths in a <code>PathBufferSlice</code>.\nAn object that stores multiple paths contiguously.\nA view on a <code>PathBuffer</code>.\nA view over a sequence of endpoint IDs forming a polygon.\nAn iterator of <code>Event&lt;EndpointId, ()&gt;</code>.\nAn iterator of <code>PathEvent</code>.\nA view over a sequence of endpoints forming a polygon.\nAn iterator of <code>IdEvent</code> for <code>Polygon</code>.\nAn iterator of <code>Event&lt;&amp;Endpoint, ()&gt;</code>.\nBuilds a path.\nThe base path building interface.\nAn extension trait for <code>PathEvent</code> iterators.\nThe type of object that is created by this builder.\nA path building interface that tries to stay close to SVG…\nAdds a sub-path containing a circle.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single point.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds an elliptical arc.\nStarts a new sub-path at a given position.\nBuilds a path object, consuming the builder.\nEnds the current sub-path by connecting it back to its …\nCloses the current sub path.\nAdds a cubic bézier curve to the current sub-path.\nAdds a cubic bézier segment to the current sub-path.\nEnds the current sub path.\nReturns a builder that approximates all curves with …\nReturns an iterator that turns curves into line segments.\nAdds an horizontal line segment.\nAdds a line segment to the current sub-path.\nAdds a line segment to the current sub-path.\nStart a new sub-path at the given position.\nApplies the provided path event.\nAdds a quadratic bézier curve to the current sub-path.\nAdds a quadratic bézier segment to the current sub-path.\nEquivalent to <code>arc_to</code> in relative coordinates.\nEquivalent to <code>cubic_bezier_to</code> in relative coordinates.\nAdds an horizontal line segment in relative coordinates.\nEquivalent to <code>line_to</code> in relative coordinates.\nEquivalent to <code>move_to</code> in relative coordinates.\nEquivalent to <code>quadratic_bezier_to</code> in relative coordinates.\nAdds a vertical line segment in relative coordinates.\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nEquivalent to <code>cubic_bezier_to</code> with implicit first control …\nEquivalent to <code>quadratic_bezier_to</code> with implicit control …\nEquivalent to <code>smooth_cubic_bezier_to</code> in relative …\nEquivalent to <code>smooth_quadratic_bezier_to</code> in relative …\nReturns a builder that applies the given transformation to …\nReturns an iterator applying a 2D transform to all of its …\nAdds a vertical line segment.\nReturns a builder that support SVG commands.\nA bevelled corner.\nThe stroke for each sub-path does not extend beyond its …\nA <code>Gradient</code> color.\nThe shape used at the end of open subpaths when they are …\nThe dash pattern used when stroking the line.\nThe shape used at the corners of paths or basic shapes …\nA sharp corner.\nAt the end of each sub-path, the shape representing the …\nA round corner.\nA solid <code>Color</code>.\nAt the end of each sub-path, the shape representing the …\nThe style of a stroke.\nThe coloring style of some drawing.\nThe shape to be used at the end of open subpaths when they …\nThe dash pattern used when stroking the line.\nThe shape to be used at the corners of paths or basic …\nThe offset of <code>LineDash::segments</code> to start the pattern.\nThe alternating lengths of lines and gaps which describe …\nThe color or gradient of the stroke.\nThe distance between the two edges of the stroke.\nA fill which linearly interpolates colors along a …\nA linear gradient.\nA linear gradient interpolates colors along a direction …\nPacked <code>Gradient</code> data for use in shader code.\nThe absolute ending position of the gradient.\nCreates a new <code>Packed</code> gradient for use in shader code.\nThe absolute starting position of the gradient.\n<code>ColorStop</code>s along the linear gradient direction.\nTries to load an image by its <code>Handle</code>.\nPixel is 8-bit alpha\nAnimationDecoder trait\nAn Image in AVIF format.\nPixel contains 8-bit B, G and R channels\nPixel is 8-bit BGR with an alpha channel\nAn Image in BMP Format\nAn Image in BMP Format\nThe number of channels of this pixel type.\nA string that can help to interpret the meaning each …\nThis pixel has the format of one of the predefined …\nPixel is 8-bit CMYK\nAn enumeration over supported color types and bit depths\nThe maximum value for this type of primitive within the …\nThe minimum value for this type of primitive within the …\nAn Image in DDS Format\nAn error was encountered while decoding.\nThe delay of a frame relative to the previous one.\nA Dynamic Image\nTypes which are safe to treat as an immutable byte slice …\nAn error was encountered while encoding.\nContains the error value\nAn enumeration of color types encountered in image formats.\nAn Image in farbfeld Format\nAn Image in farbfeld Format\nA flat buffer over a (multi channel) image.\nA single animation frame\nAn implementation dependent iterator, reading the frames …\nA trait for manipulating images.\nTrait to inspect an image.\nAn Image in GIF Format\nAn Image in GIF Format\nSendable grayscale + alpha channel image buffer\nSendable grayscale image buffer\nAn Image in Radiance HDR Format\nAn Image in ICO Format\nAn Image in ICO Format\nGeneric image buffer\nThe trait that all decoders implement\nSpecialized image decoding not be supported by all formats\nThe trait all encoders implement\nThe generic error type for image operations.\nAn enumeration of supported image formats. Not all formats …\nEach pixel in this image is 16-bit Luma\nEach pixel in this image is 8-bit Luma\nEach pixel in this image is 16-bit Luma with alpha\nEach pixel in this image is 8-bit Luma with alpha\nAn enumeration of supported image formats for encoding.\nResult of an image decoding/encoding process\nEach pixel in this image is 16-bit Rgb\nEach pixel in this image is 32-bit float Rgb\nEach pixel in this image is 8-bit Rgb\nEach pixel in this image is 16-bit Rgb with alpha\nEach pixel in this image is 32-bit float Rgb with alpha\nEach pixel in this image is 8-bit Rgb with alpha\nAn error occurred while interacting with the environment.\nAn Image in JPEG Format\nAn Image in JPEG Format with specified quality, up to 100\nPixel is 1-bit luminance\nPixel is 16-bit luminance\nPixel is 16-bit luminance\nPixel is 2-bit luminance\nPixel is 4-bit luminance\nPixel is 8-bit luminance\nPixel is 8-bit luminance\nPixel is 1-bit luminance with an alpha channel\nPixel is 16-bit luminance with an alpha channel\nPixel is 16-bit luminance with an alpha channel\nPixel is 2-bit luminance with an alpha channel\nPixel is 4-bit luminance with an alpha channel\nPixel is 8-bit luminance with an alpha channel\nPixel is 8-bit luminance with an alpha channel\nCompleting the operation would have required more …\nGrayscale colors.\nGrayscale colors + alpha channel\nContains the success value\nAn Image in OpenEXR Format\nAn Image in OpenEXR Format\nAn error was encountered in input arguments.\nA generalized pixel.\nThe type of pixel.\nThe pixel with an associated <code>ColorType</code>. Not all possible …\nImmutable pixel iterator\nAn Image in PNG Format\nAn Image in PNG Format\nAn Image in general PNM Format\nAn Image in one of the PNM Formats\nThe type of each channel in a pixel. For example, this can …\nRepresents the progress of an image operation.\nAn Image in QOI format.\nAn image in QOI Format\nThe type of reader produced by <code>into_reader</code>.\nRGB colors.\nPixel contains 1-bit R, G and B channels\nPixel is 16-bit RGB\nPixel contains 16-bit R, G and B channels\nPixel contains 2-bit R, G and B channels\nPixel is 32-bit float RGB\nPixel is 32-bit float RGB\nAn image buffer for 32-bit float RGB pixels, where the …\nPixel contains 4-bit R, G and B channels\nPixel contains 8-bit R, G and B channels\nPixel contains 8-bit R, G and B channels\nSendable Rgb image buffer\nRGB colors + alpha channel\nPixel is 1-bit RGB with an alpha channel\nPixel is 16-bit RGBA\nPixel is 16-bit RGB with an alpha channel\nPixel is 2-bit RGB with an alpha channel\nPixel is 32-bit float RGBA\nPixel is 32-bit float RGBA\nAn image buffer for 32-bit float RGBA pixels, where the …\nPixel is 4-bit RGB with an alpha channel\nPixel is 8-bit RGB with an alpha channel\nPixel is 8-bit RGB with an alpha channel\nSendable Rgb + alpha channel image buffer\nA View into another image\nThe scalar type that is used to store each channel in this …\nAn Image in TGA Format\nAn Image in TGA Format\nAn Image in TIFF Format\nAn Image in TIFF Format\nPixel is of unknown color type with the specified bits per …\nAn operation can not be completed by the chosen …\nA value for signalling an error: An unsupported format was …\nAn Image in WEBP Format\nAn image in WebP Format.\nApply the function <code>f</code> to each channel of this pixel.\nApply the function <code>f</code> to each channel of this pixel and …\nApply the function <code>f</code> to each channel except the alpha …\nApply the function <code>f</code> to each channel except the alpha …\nGet the bytes of this value.\nBlend the color of a given pixel into ourself, taking into …\nPut a pixel at location (x, y), taking into account alpha …\nThe bounding rectangle of this image.\nIterators and other auxiliary structure for the <code>ImageBuffer</code>…\nReturns the components as a slice.\nReturns the channels of this pixel as a 4 tuple. If the …\nReturns the components as a mutable slice\nEncoding and decoding for various image file formats.\nSupplementary color information.\nReturns the color type of the image data produced by this …\nCopies all of the pixels from another image into this …\nCopies all of the pixels from one part of this image to …\nReturns a tuple containing the width and height of the …\nThe width and height of this image.\nContains detailed error representation.\nImage representations for ffi.\nConstruct a pixel from the 4 channels a, b, c and d. If …\nReturns a view into a slice.\nReturns mutable view into a mutable slice.\nReturns the pixel located at (x, y). Indexed from top left.\nGets a reference to the mutable pixel at location <code>(x, y)</code>. …\nGuess image format from memory block\nThe height of this image.\nReturns the ICC color profile embedded in the image\nRead a tuple containing the (width, height) of the image …\nImage Processing Functions\nReturns true if this x, y coordinate is contained inside …\nConsume the decoder producing a series of frames.\nReturns a reader that can be used to obtain the bytes of …\nInvert this pixel\nInput and output of images.\nA <code>repr(C)</code> description of the layout of buffer samples.\nCreate a new image from a Reader.\nCreate a new image from a byte slice\nCreate a new image from a byte slice\nApply the function <code>f</code> to each channel of this pixel.\nApply the function <code>f</code> to each channel of this pixel and …\nApply the function <code>f</code> to each channel except the alpha …\nApply the function <code>f</code> to each channel except the alpha …\nMathematical helper functions and types.\nOpen the image located at the path specified. The image’…\nReturns the color type of the image file before decoding\nReturns an Iterator over the pixels of this image. The …\nPut a pixel at location (x, y). Indexed from top left.\nReturns all the bytes in the image.\nSame as <code>read_image</code> but periodically calls the provided …\nDecode a rectangular section of the image; see …\nDecode a rectangular section of the image, periodically …\nUnderlying linear container holding sample values.\nSaves the supplied buffer to a file at the path specified.\nSaves the supplied buffer to a file at the path specified …\nReturns the minimum number of bytes that can be …\nSet decoding limits for this decoder. See <code>Limits</code> for the …\nReturns a mutable subimage that is a view into this image. …\nConvert this pixel to luma\nConvert this pixel to luma with an alpha channel\nConvert this pixel to RGB\nConvert this pixel to RGB with an alpha channel\nReturns the total number of bytes in the decoded image.\nReturns the pixel located at (x, y). Indexed from top left.\nPuts a pixel at location (x, y). Indexed from top left.\nReturns a subimage that is an immutable view into this …\nThe width of this image.\nWrites the supplied buffer to a writer in the specified …\nWrites all the bytes in an image to the encoder.\nProvides color conversions for whole image buffers.\nEnumerate the pixels of an image.\nEnumerate the pixels of an image.\nEnumerate the rows of an image.\nEnumerate the rows of an image.\nIterate over pixel refs.\nIterate over mutable pixel refs.\nIterate over rows of an image\nIterate over mutable rows of an image\nConverts <code>self</code> to a buffer of type T\nDecoding and Encoding of BMP Images\nDecoding of DDS images\nDecoding of DXT (S3TC) compression\nDecoding of farbfeld images\nDecoding of GIF Images\nDecoding of Radiance HDR Images\nDecoding and Encoding of ICO files\nDecoding and Encoding of JPEG Images\nDecoding of OpenEXR (.exr) Images\nDecoding and Encoding of PNG Images\nDecoding of netpbm image formats (pbm, pgm, ppm and pam).\nDecoding and encoding of QOI images\nDecoding of TGA Images\nDecoding and Encoding of TIFF Images\nDecoding and Encoding of WebP Images\nA bmp decoder\nThe representation of a BMP encoder.\nThe representation of a DDS decoder\nThe DXT1 format. 48 bytes of RGB data in a 4x4 pixel …\nThe DXT3 format. 64 bytes of RGBA data in a 4x4 pixel …\nThe DXT5 format. 64 bytes of RGBA data in a 4x4 pixel …\nDXT decoder\nDXT encoder\nDXT reader\nWhat version of DXT compression are we using? Note that …\nfarbfeld decoder\nfarbfeld encoder\nfarbfeld Reader\nFinite number of repetitions\nGIF decoder\nGIF encoder.\nWrapper struct around a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>\nLooping GIF\nNumber of repetitions for a GIF animation\nAdapter to conform to <code>ImageDecoder</code> trait\nAn Radiance HDR decoder\nRadiance HDR encoder\nScanline buffered pixel by pixel iterator\nMetadata for Radiance HDR image\nWrapper struct around a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>\nRefer to wikipedia\nRadiance HDR file signature\nColor components\nDivide color values by corresponding tuple member (r, g, …\nAll lines contained in image header are put here. Ordering …\nExponent\nDivide color values by exposure to get to get physical …\nHeight of decoded image. It depends on orientation too.\nOrientation matrix. For standard orientation it is …\nPixel height divided by pixel width\nHelper function for reading raw 3-channel f32 images\nCreates <code>Rgbe8Pixel</code> from components\nConverts <code>Rgb&lt;f32&gt;</code> into <code>Rgbe8Pixel</code>\nWidth of decoded image. It could be either scanline length,\nAn ico decoder\nICO encoder\nAn ICO image entry\nPixels per centimeter\nPixels per inch (2.54 cm)\nJPEG decoder\nThe representation of a JPEG encoder\nRepresents the absence of a unit, the values indicate only …\nRepresents the pixel density of an image\nRepresents a unit in which the density of an image is …\nA couple of values for (Xdensity, Ydensity)\nThe unit in which the density is measured\nAn OpenEXR decoder. Immediately reads the meta data from …\nA thin wrapper that implements <code>ImageEncoder</code> for OpenEXR …\nUses a heuristic to select one of the preceding filters …\nAn <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.\nFilters based on the average of left and right neighbor …\nHigh compression level\nCompression level of a PNG encoder. The default setting is …\nDefault compression level\nFast, minimal compression\nFilter algorithms used to process image data to improve …\nHuffman coding compression\nNo processing done, best used for low bit depth grayscale …\nAlgorithm that takes into account the left, upper left, …\nPNG decoder\nPNG encoder\nPng Reader\nRun-length encoding compression\nFilters based on previous pixel in the same scanline\nFilters based on the scanline above\nHeader produced by a <code>pam</code> file (“Portable Arbitrary Map”…\nMagic number P7\nStandardized tuple type specifiers in the header of a <code>pam</code>.\nSamples are encoded as decimal ascii strings separated by …\nSamples are unsigned binary integers in big endian\nMagic numbers P1 and P4\nHeader produced by a <code>pbm</code> file (“Portable Bit Map”)\nPixels are either black (0) or white (1)\nPixels are either black (0) or white (1) and a second …\nAn image format which is not standardized\nMagic numbers P2 and P5\nHeader produced by a <code>pgm</code> file (“Portable Gray Map”)\nPixels represent the amount of white\nGrayscale with an additional alpha channel\nMagic numbers P3 and P6\nHeader produced by a <code>ppm</code> file (“Portable Pixel Map”)\nPNM decoder\nEncodes images to any of the <code>pnm</code> image formats.\nStores the complete header data of a file.\nDenotes the category of the magic number\nThree channels: Red, Green, Blue\nFour channels: Red, Green, Blue, Alpha\nThe kind of encoding used to store sample values\nNumber of color channels\nBinary or Ascii encoded file\nBinary or Ascii encoded file\nBinary or Ascii encoded file\nHeight of the image file\nHeight of the image file\nHeight of the image file\nHeight of the image file\nMaximum sample value within the image\nMaximum sample value within the image\nMaximum sample value within the image\nColor interpretation of image pixels\nWidth of the image file\nWidth of the image file\nWidth of the image file\nWidth of the image file\nQOI decoder\nQOI encoder\nThe representation of a TGA decoder\nTGA encoder.\nDecoder for TIFF images.\nEncoder for tiff images\nWrapper struct around a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>\nWebP Image format decoder. Currently only supports lossy …\nWebP Encoder.\nWebP encoder quality.\nAn implementation of the VP8 Video Codec\nA Representation of the last decoded video frame\nVP8 Decoder\nIndicates whether this frame is intended for display\nThe height of the luma plane\nIndicates whether this frame is a keyframe\nThe pixel type of the frame as defined by Section 9.2 of …\nThe blue plane of the frame\nThe red plane of the frame\nThe width of the luma plane\nThe luma plane of the frame\nThe required color type can not be handled.\nAn error was encountered while decoding.\nAn error was encountered while decoding an image.\nThe resulting image exceed dimension limits in either …\nThe dimensions passed are wrong.\nAn error was encountered while encoding.\nAn error was encountered while encoding an image.\nContains the error value\nThe format is known exactly.\nRepeated an operation for which error that could not be …\nAn image format is not supported.\nA string describing the parameter. This is discouraged and …\nSome feature specified by string. This is discouraged and …\nThe generic error type for image operations.\nA best effort representation for image formats.\nResult of an image decoding/encoding process\nThe operation would have performed an allocation larger …\nAn error occurred while interacting with the environment.\nCompleting the operation would have required more …\nIndicates the limit that prevented an operation from …\nCompleting the operation would have required more …\nThe format can be identified by a name.\nThe end of the image has been reached.\nContains the success value\nAn error was encountered in input arguments.\nAn error was encountered in inputs arguments.\nDetails how a parameter is malformed.\nA common path extension for the format is known.\nThe format is not known or could not be determined.\nAn operation can not be completed by the chosen …\nThe specified strict limits are not supported for this …\nThe implementation for an operation was not provided.\nDetails what feature is not supported.\nThe given limits\nThe supported strict limits\nThe color format did not match the channel count.\nThe samples are in column-major form and all samples are …\nDenotes invalid flat sample buffers when trying to convert …\nA flat buffer over a (multi channel) image.\nAll samples are packed.\nDifferent normal forms of buffers.\nThe represented image can not use this representation.\nAt least pixels are packed.\nThe samples are in row-major form and all samples are …\nA ffi compatible description of a sample buffer.\nThe represented image was too large.\nNo pixel aliases another.\nA flat buffer that can be used as an image view.\nA mutable owning version of a flat buffer.\nDeprecated - ChannelCountMismatch is used instead\nAdd this to an index to get to the sample in the next …\nThe number of channels in the color representation of the …\nSupplementary color information.\nThe height of the represented image.\nAdd this to an index to get to the next sample in …\nA <code>repr(C)</code> description of the layout of buffer samples.\nUnderlying linear container holding sample values.\nThe width of the represented image.\nAdd this to an index to get to the next sample in …\nA bi-level color map\nCubic Filter\nThe color type on which the map operates on\nA color map\nAvailable Sampling Filters.\nGaussian Filter\nLanczos with window 3\nNearest Neighbor\nLinear Filter\nPerforms a Gaussian blur on the supplied image. <code>sigma</code> is a …\nBrighten the supplied image. <code>value</code> is the amount to …\nFunctions for altering and converting the color of …\nAdjust the contrast of the supplied image. <code>contrast</code> is the …\nReturn a mutable view into an image The coordinates set …\nReturn an immutable view into an image The coordinates set …\nReduces the colors of the image using the supplied …\nPerform a 3x3 box filter on the supplied image. <code>kernel</code> is …\nFlip an image horizontally\nFlip an image horizontally and put the result into the …\nFlip an image horizontally in place.\nFlip an image vertically\nFlip an image vertically and put the result into the …\nFlip an image vertically in place.\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to a grayscale image with the …\nConvert the supplied image to a grayscale image with the …\nDetermine if this implementation of ColorMap overrides the …\nFill the image with a linear horizontal gradient\nHue rotate the supplied image. <code>value</code> is the degrees to …\nReduces the colors using the supplied <code>color_map</code> and …\nReturns the index of the closest match of <code>color</code> in the …\nLinearly sample from an image using coordinates in [0, w-1]…\nSample from an image using coordinates in [0, w-1] and [0, …\nInvert each pixel within the supplied image. This function …\nLooks up color by index in the color map.  If <code>idx</code> is out …\nMaps <code>color</code> to the closest color in the color map.\nOverlay an image at a given coordinate (x, y)\nCalculate the region that can be copied from top to bottom.\nReplace the contents of an image at a given coordinate (x, …\nResize the supplied image to the specified dimensions. …\nRotate an image 180 degrees clockwise.\nRotate an image 180 degrees clockwise and put the result …\nRotate an image 180 degrees clockwise in place.\nRotate an image 270 degrees clockwise.\nRotate an image 270 degrees clockwise and put the result …\nRotate an image 90 degrees clockwise.\nRotate an image 90 degrees clockwise and put the result …\nLinearly sample from an image using coordinates in [0, 1].\nSample from an image using coordinates in [0, 1], taking …\nResize the supplied image to the specific dimensions.\nTile an image by repeating it multiple times\nPerforms an unsharpen mask on the supplied image. <code>sigma</code> is …\nFill the image with a linear vertical gradient\nA bi-level color map\nThe color type on which the map operates on\nA color map\nBrighten the supplied image. <code>value</code> is the amount to …\nBrighten the supplied image in place. <code>value</code> is the amount …\nAdjust the contrast of the supplied image. <code>contrast</code> is the …\nAdjust the contrast of the supplied image in place. …\nReduces the colors of the image using the supplied …\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to a grayscale image with the …\nConvert the supplied image to a grayscale image with the …\nDetermine if this implementation of ColorMap overrides the …\nHue rotate the supplied image. <code>value</code> is the degrees to …\nHue rotate the supplied image in place. <code>value</code> is the …\nReduces the colors using the supplied <code>color_map</code> and …\nReturns the index of the closest match of <code>color</code> in the …\nInvert each pixel within the supplied image. This function …\nLooks up color by index in the color map.  If <code>idx</code> is out …\nMaps <code>color</code> to the closest color in the color map.\nSet of supported strict limits for a decoder.\nResource limits for decoding.\nA multi-format image reader.\nThe maximum allowed sum of allocations allocated by the …\nThe maximum allowed image height. This limit is strict. …\nThe maximum allowed image width. This limit is strict. The …\nA Rectangle defined by its top left corner, width and …\nThe rectangle’s height.\nThe rectangle’s width.\nThe x coordinate of the top left corner.\nThe y coordinate of the top left corner.\nA mesh with a gradient.\nA vertex which contains 2D position &amp; packed gradient data.\nA set of vertices and indices representing a list of …\nA low-level primitive to render a mesh of triangles.\nA mesh with a solid color.\nA two-dimensional vertex with a color.\nThe color of the vertex in <strong>linear</strong> RGBA.\nThe packed vertex data of the gradient.\nThe list of vertex indices that defines the triangles of …\nThe vertex position in 2D space.\nThe vertex position in 2D space.\nThe vertices of the mesh\nThe vertices and indices of the mesh.\nThe vertices and indices of the mesh.\nThe size of the drawable region of the mesh.\nThe size of the drawable region of the mesh.\nA backend-agnostic renderer that supports all the built-in …\nA store of recently used sections of text.\nA multi-line text editor.\nA set of system fonts.\nA bunch of text.\nA weak reference to a [<code>cosmic-text::Buffer</code>] that can be …\nA version number.\nA weak reference to a <code>cosmic_text::Buffer</code>.\nCache text.\nThe clip bounds of the text.\nThe color of the text.\nDraw and edit text.\nReturns the global <code>FontSystem</code>.\nMeasures the dimensions of the given <code>cosmic_text::Buffer</code>.\nDraw paragraphs.\nThe position of the text.\nReturns the attributes of the given <code>Font</code>.\nConverts some <code>Color</code> to a <code>cosmic_text::Color</code>.\nConverts some <code>Shaping</code> strategy to a <code>cosmic_text::Shaping</code> …\nConverts some <code>Wrap</code> mode to a <code>cosmic_text::Wrap</code> strategy.\nA store of recently used sections of text.\nA cache entry.\nA cache key representing a section of text.\nThe hash of a <code>Key</code>.\nThe bounds of the text.\nThe buffer of text, ready for drawing.\nThe content of the text.\nThe <code>Font</code> of the text.\nThe line height of the text.\nThe minimum bounds of the text.\nThe shaping strategy of the text.\nThe size of the text.\nAn action to perform on an <code>Editor</code>\nAdvanced text shaping and font fallback.\nWhether to associate cursors placed at a boundary between …\nAlign or justify\nRepresents an angle in degrees or radians.\nText attributes\nList of text attributes to apply to a line\nAn owned version of <code>Attrs</code>\nDelete text behind cursor\nBasic shaping with no font fallback.\nAn iterator over the paragraphs in the input text. It is …\nA value borrowed together with an <code>FontSystem</code>\nA buffer of text that is shaped and laid out\nMove cursor to the end of the document\nA line (or paragraph) of text that is shaped and laid out\nMove cursor to the start of the document\nKey for building a glyph cache\nFlags that change rendering\nMetrics, but implementing Eq and Hash using u32 …\nA set of change items grouped into one logical change\nA unique change to an editor\nMouse click at specified position\nCloses a subpath, connecting the final point to the …\nText color\n32-bit RGBA bitmap.\nPath command.\nUse <code>\\r</code> for line ending (many legacy systems)\nUse <code>\\r\\n</code> for line ending (Windows-style)\nGlyphs in cursive fonts generally use a more informal …\nCurrent cursor location\nA cubic bezier curve from the previous point to the final …\nDelete text in front of cursor\nMouse double click at specified position\nMove cursor down\nMouse drag to specified position\nA trait to allow easy replacements of <code>Editor</code>, like …\nA wrapper of [<code>Buffer</code>] for easy editing\nMove cursor to end of line\nCreate new line\nEscape, clears selection\nA font family.\nAn owned version of <code>Family</code>\nFantasy fonts are primarily decorative or expressive fonts …\nA font\nFont-specific part of <code>Attrs</code> to be used for matching\nAccess to the system fonts.\nWraps at a glyph level\nMove cursor to specific line\nMove cursor to start of line\nInsert character at cursor\nA form that is generally cursive in nature.\nThe position of a cursor within a [<code>Buffer</code>].\nApply specific <code>LayoutCursor</code>\nA laid out glyph\nA line of laid out glyphs\nA line of visible text for rendering\nAn iterator of visible text lines, see <code>LayoutRun</code>\nMove cursor left\nMove cursor to next word boundary to the left\nUse <code>\\n</code> for line ending (POSIX-style)\nUse <code>\\n\\r</code> for line ending (some legacy systems)\nSelect by lines\nLine ending\nIterator over lines terminated by <code>LineEnding</code>\nA straight line from the previous point to the specified …\n8-bit alpha mask.\nMetrics of text\nThe sole criterion of a monospace font is that all glyphs …\nA motion to perform on a <code>Cursor</code>\nMove the cursor with some motion\nBegins a new subpath at the specified point.\nThe name of a font family of choice.\nMove cursor to next character (Self::Right in LTR, …\nMove cursor to next word boundary\nNo selection\nNo wrapping\nNo line ending\nA face that is neither italic not obliqued.\nNormal selection\nA typically-sloped version of the regular face.\nMove cursor down one page\nMove cursor up one page\nMove cursor to end of paragraph\nMove cursor to start of paragraph\nDescribes the offset and dimensions of a rendered mask.\nMove cursor to previous character (Self::Left in LTR, …\nMove cursor to previous word boundary\nA quadratic curve from the previous point to the final …\nMove cursor right\nMove cursor to next word boundary to the right\nGlyphs in sans-serif fonts, as the term is used in CSS, …\nScroll position in [<code>Buffer</code>]\nScroll specified number of lines\nSelection mode\nSerif fonts represent the formal text style for a script.\nA set of buffers containing allocations for shaped text.\nA shaped glyph\nA shaped line (or paragraph)\nA helper structure for caching shape runs.\nKey for caching shape runs.\nA shaped span (for bidirectional processing)\nA shaped word (for word wrapping)\nThe shaping strategy of some text.\nMove cursor to start of line, skipping whitespace\nA face width.\nAllows italic or oblique faces to be selected.\nBinning of subpixel position for cache optimization\n32-bit RGBA subpixel mask.\nCache for rasterizing with the swash scaler\nContent of a scaled glyph image.\nScaled glyph image.\nTwo dimensional transformation matrix.\nMouse triple click at specified position\nMove cursor up\nMove cursor up or down by a number of pixels\nSpecifies the weight of glyphs in the font, their degree …\nSelect by words\nWraps at the word level\nWraps at the word level, or fallback to glyph level if a …\nWrapping mode\nPerform an Action on the editor\nWhether to associate the cursor with the run before it or …\nApply a change\nGet the current automatic indentation setting\nMutably borrows <code>self</code> together with an <code>FontSystem</code> for more …\nGet the internal <code>BufferRef</code>\nGet the internal <code>BufferRef</code>\nCache key, see CacheKey\n<code>CacheKeyFlags</code>\nOptional color override\nContent of the image.\nCopy selection\nGet the current cursor\nGet X and Y position of the top left corner of the cursor\nRaw image data.\nDelete text starting at start Cursor and ending at end …\nDelete selection, adjusting cursor and returning true if …\nCursor indicating end of change\nEnd index of cluster in original line\nGet completed change\n<code>CacheKeyFlags</code>\nFont ID\nFont id of the glyph\nFont size in pixels\nFont size of the glyph\n<code>f32</code> bits of font size\nIndex of [<code>LayoutGlyph</code>] in [<code>LayoutLine::glyphs</code>]\nGlyph ID\nFont id of the glyph\nThe array of layout glyphs to draw\nGlyphs in line\nHeight in pixels.\nThe horizontal position of scroll in fractional pixels\nFirst-byte-index of glyph at cursor (will insert behind …\nInsert if true, delete if false\nInsert text at specified cursor with specified attrs_list\nInsert a string at the current cursor or replacing the …\nChange items grouped into one change\nIndex of [<code>LayoutLine</code>] in [<code>BufferLine::layout</code>]\nHorizontal offset with respect to the origin specified …\nUnicode BiDi embedding level, character is left-to-right …\nIndex of [<code>BufferLine</code>] in [<code>Buffer::lines</code>]\nIndex of [<code>BufferLine</code>] in [<code>Buffer::lines</code>]\nIndex of [<code>BufferLine</code>] in [<code>Buffer::lines</code>]. This will be …\nY offset to next line\nLine height in pixels\nLine height of the glyph, will override buffer setting\nMaximum line height of any spans in line\nThe index of the original text line\nY offset to top of line\nWidth of line\nY offset to baseline of line\nBufferLines (or paragraphs) of text in the buffer\nMaximum ascent of the glyphs in line\nMaximum descent of the glyphs in line\nMetadata from <code>Attrs</code>\nOffset and size of the image.\nGet the <code>Buffer</code> redraw flag\nTrue if the original paragraph direction is RTL\nGet the current selection position\nGet the bounds of the current selection\nEnable or disable automatic indentation\nSet the current cursor\nSet the <code>Buffer</code> redraw flag\nSet the current selection position\nSet the current tab width. A <code>tab_width</code> of 0 is not …\nShape lines until scroll, after adjusting scroll if the …\nSource of the image.\nCursor indicating start of change\nStart index of cluster in original line\nStart collecting change\nGet the current tab width\nThe original text line\nText to be inserted or deleted\nVertical offset with respect to the origin specified when …\nPixel offset from the start of the [<code>BufferLine</code>]. This will …\nWidth of hitbox\nWidth of the line\nWidth in pixels.\nGet the internal <code>Buffer</code>\nGet the internal <code>Buffer</code>, mutably\nX offset of hitbox\nInteger component of X offset in line\nBinning of fractional X offset\nX offset in line\nY offset of hitbox\nInteger component of Y offset in line\nBinning of fractional Y offset\nY offset in line\nA font’s raw data, typically backed by a Vec.\nGlyphs in cursive fonts generally use a more informal …\nA font database.\nA single font face info.\nA font family.\nFantasy fonts are primarily decorative or expressive fonts …\nA font’s path.\nA unique per database face ID.\nA form that is generally cursive in nature.\nA <code>Name</code> language.\nThe sole criterion of a monospace font is that all glyphs …\nThe name of a font family of choice.\nA face that is neither italic not obliqued.\nA typically-sloped version of the regular face.\nA database query.\nGlyphs in sans-serif fonts, as the term is used in CSS, …\nSerif fonts represent the formal text style for a script.\nA font’s raw data originating from a shared file mapping.\nA font source.\nA face width.\nAllows italic or oblique faces to be selected.\nSpecifies the weight of glyphs in the font, their degree …\nA list of family names.\nA prioritized list of font family names or generic family …\nAn unique ID.\nA face index in the <code>source</code>.\nIndicates that the font face is monospaced.\nA PostScript name.\nA font source.\nA font face stretch.\nSelects a normal, condensed, or expanded face from a font …\nA font face style.\nAllows italic or oblique faces to be selected.\nA font face weight.\nSpecifies the weight of glyphs in the font, their degree …\nText is set vertically from bottom to top.\nA cluster level.\nFlags for buffers.\nDefines the direction in which text is to be read.\nA font face handle.\nA feature tag with an accompanying range specifying on …\nA buffer that contains the results of the shaping process.\nA glyph info.\nHolds the positions of the glyph in both horizontal and …\nInitial, unset direction.\nA script language.\nText is set horizontally from left to right.\nText is set horizontally from right to left.\nA text script.\nFlags used for serialization with a <code>BufferSerializer</code>.\nA reusable plan for shaping a text buffer.\nText is set vertically from top to bottom.\nA buffer that contains an input string ready for shaping.\nA font variation.\nAn index to the start of the grapheme cluster in the …\nA selected glyph.\nPredefined scripts.\nShapes the buffer content using provided font and features.\nShapes the buffer content using the provided font and plan.\nHow much the line advances after drawing this glyph when …\nHow much the glyph moves on the X-axis before drawing it, …\nHow much the line advances after drawing this glyph when …\nHow much the glyph moves on the Y-axis before drawing it, …\nA grayscale bitmap with 2 bits per pixel.\nA packed grayscale bitmap with 2 bits per pixel.\nA grayscale bitmap with 4 bits per pixel.\nA packed grayscale bitmap with 4 bits per pixel.\nA grayscale bitmap with 8 bits per pixel.\nA monochrome bitmap.\nA packed monochrome bitmap.\nA color bitmap with 32 bits per pixel.\nA list of errors that can occur during a CFF glyph …\nA font face.\nThe face index is larger than the number of faces in the …\nA list of font face parsing errors.\nParsed face tables.\nA 32-bit signed fixed-point number (16.16).\nA trait for parsing raw binary data of fixed size.\nA type-safe wrapper for glyph ID.\nA form that is generally cursive in nature.\nA <code>Name</code> language.\nA slice-like container that converts internal binary data …\nA slice-like container that converts internal binary data …\nAn iterator over <code>LazyArray16</code>.\nAn iterator over <code>LazyArray32</code>.\nA line metrics.\nAn attempt to read out of bounds detected.\nThe <code>head</code> table is missing or malformed.\nThe <code>hhea</code> table is missing or malformed.\nThe <code>maxp</code> table is missing or malformed.\nA face that is neither italic not obliqued.\nA variation coordinate in a normalized coordinate system.\nA typically-sloped version of the regular face.\nA trait for glyph outline construction.\nFace permissions.\nA platform ID.\nA glyph’s raster image.\nA glyph raster image format.\nA raw font face.\nA list of all supported tables as raw data.\nA rectangle.\nA rectangle described by the left-lower and upper-right …\nA RGBA color in the sRGB color space.\nObject’s raw data size.\nA script metrics used by subscript and superscript.\nA face style.\nA raw table record.\nA 4-byte tag.\nAn affine transform.\nUnicode Ranges.\nFace data must start with <code>0x00010000</code>, <code>0x74727565</code>, …\nA font variation value.\nA variation axis.\nA face weight.\nA face width.\nThe ‘a’ component of the transform.\nAn Anchor Point Table implementation.\nThis module contains Apple Advanced Typography Layout …\nAn Axis Variations Table implementation.\nAn axis tag name.\nThe ‘b’ component of the transform.\nThe ‘c’ component of the transform.\nA Color Bitmap Data Table implementation.\nA Color Bitmap Location Table implementation.\nA Compact Font Format Table implementation.\nA Compact Font Format 2 Table implementation.\nAppends a ClosePath segment.\nA Character to Glyph Index Mapping Table implementation.\nA Color Table implementation.\nA Color Palette Table implementation.\nAppends a CurveTo segment.\nThe ‘d’ component of the transform.\nA raw image data. It’s up to the caller to decode it.\nThe input font file data.\nThe ‘e’ component of the transform.\nThe ‘f’ component of the transform.\nA Feature Name Table implementation.\nReturns the number of fonts stored in a TrueType font …\nAn image format.\nA Font Variations Table implementation.\nA Glyph Definition Table implementation.\nA Glyph Data Table implementation.\nA Glyph Positioning Table implementation.\nA Glyph Substitution Table implementation.\nA Glyph Variations Table implementation.\nA Font Header Table implementation.\nImage height.\nA Horizontal Header Table implementation.\nA Horizontal/Vertical Metrics Table implementation.\nA Horizontal/Vertical Metrics Variations Table …\nA Kerning Table implementation.\nAn Extended Kerning Table implementation.\nAppends a LineTo segment.\nAn Index to Location Table implementation.\nA Math Table implementation.\nA Maximum Profile Table implementation.\nAn Extended Glyph Metamorphosis Table implementation.\nAppends a MoveTo segment.\nA Metrics Variations Table implementation.\nA Naming Table implementation.\nA list of name ID’s.\nAn axis name in the <code>name</code> table.\nThis module contains OpenType Layout supplementary tables …\nA OS/2 and Windows Metrics Table implementation.\nParses an object from a raw data.\nA pixels per em of the selected strike.\nLine position.\nA PostScript Table implementation.\nAppends a QuadTo segment.\nA Standard Bitmap Graphics Table implementation.\nAn SVG Table implementation.\nAn array of table records.\nLine thickness.\nA Tracking Table implementation.\nAn axis value.\nA Vertical Header Table implementation.\nA Vertical Origin Table implementation.\nImage width.\nHorizontal offset.\nThe horizontal maximum of the rect.\nThe horizontal minimum of the rect.\nX offset.\nHorizontal face size.\nVertical offset.\nThe vertical maximum of the rect.\nThe vertical minimum of the rect.\nY offset.\nVertical face size.\nAn anchor point.\nAn Anchor Point Table.\nAn Extended State Table.\nA State Table entry.\nA lookup table.\nA legacy state entry used by StateTable.\nA State Table.\nA type-safe wrapper for a kerning value offset.\nPredefined classes.\nAdditional data.\nAdditional data.\nEntry flags.\nEntry flags.\nA new state.\nA new state.\nPredefined states.\nAn axis value map.\nA list of segment maps.\nAn iterator over maps.\nAn Axis Variations Table.\nA normalized coordinate value obtained using default …\nThe segment maps array — one segment map for each axis …\nThe modified, normalized coordinate value.\nA Color Bitmap Data Table.\nA Color Bitmap Location Table.\nAn affine transformation matrix.\nA Compact Font Format Table.\nA Compact Font Format 2 Table.\nA character encoding subtable variant.\nGlyph was found in the variation encoding table.\nA result of a variation glyph mapping.\nA character encoding subtable.\nA format 0 subtable.\nA format 10 subtable.\nA format 12 subtable.\nA format 13 subtable.\nA format 14 subtable.\nA format 2 subtable.\nA format 4 subtable.\nA format 6 subtable.\nA list of subtables.\nAn iterator over <code>Subtables</code>.\nA Character to Glyph Index Mapping Table.\nGlyph should be looked in other, non-variation tables.\nSubtable encoding.\nFirst character code covered.\nFirst character code of subrange.\nA subtable format.\nJust a list of 256 8bit glyph IDs.\nArray of glyph indices for the character codes covered.\nArray of glyph indexes for character codes in the range.\nSubtable platform.\nA list of subtables.\nThe composite mode ‘Clear’.\nA ClipBox.\nThe composite mode ‘Color’.\nThe composite mode ‘ColorBurn’.\nThe composite mode ‘ColorDodge’.\nA gradient extend.\nA composite mode\nThe composite mode ‘Darken’.\nThe composite mode ‘Destination’.\nThe composite mode ‘DestinationAtop’.\nThe composite mode ‘DestinationIn’.\nThe composite mode ‘DestinationOut’.\nThe composite mode ‘DestinationOver’.\nThe composite mode ‘Difference’.\nThe composite mode ‘Exclusion’.\nA gradient extend.\nAn iterator over stops of a gradient.\nThe composite mode ‘HardLight’.\nThe composite mode ‘Hue’.\nThe composite mode ‘Lighten’.\nA linear gradient\nA paint with a linear gradient.\nThe composite mode ‘Luminosity’.\nThe composite mode ‘Multiply’.\nThe composite mode ‘Overlay’.\nThe <code>Pad</code> gradient extend mode.\nA paint.\nA trait for color glyph painting.\nThe composite mode ‘Plus’.\nA radial gradient\nA paint with a radial gradient.\nThe <code>Reflect</code> gradient extend mode.\nThe <code>Repeat</code> gradient extend mode.\nThe composite mode ‘Saturation’.\nThe composite mode ‘Screen’.\nThe composite mode ‘SoftLight’.\nA paint with a solid color.\nThe composite mode ‘Source’.\nThe composite mode ‘SourceAtop’.\nThe composite mode ‘SourceIn’.\nThe composite mode ‘SourceOut’.\nThe composite mode ‘SourceOver’.\nA sweep gradient\nA paint with a sweep gradient.\nA Color Table.\nThe composite mode ‘Xor’.\nThe x of the center.\nThe y of the center.\nThe color of the color stop.\nThe end angle.\nThe extend.\nThe extend.\nThe extend.\nOutline a glyph and store it.\nPaint the stored outline using the provided color.\nPop the last clip path.\nPop the last layer.\nPop the last transform.\nPush a new clip path using the currently stored outline.\nPush a new clip path using the clip box.\nPush a new layer with the given composite mode.\nPush a rotation transform.\nPush a scaling transform.\nPush a skewing transform.\nPush a transform.\nPush a translation transform.\nThe <code>r0</code> value.\nThe <code>r1</code> value.\nThe start angle.\nThe offset of the color stop.\nThe <code>x0</code> value.\nThe <code>x0</code> value.\nThe <code>x1</code> value.\nThe <code>x1</code> value.\nThe <code>x2</code> value.\nThe horizontal maximum of the rect.\nThe horizontal minimum of the rect.\nThe <code>y0</code> value.\nThe <code>y0</code> value.\nThe <code>y1</code> value.\nThe <code>y1</code> value.\nThe <code>y2</code> value.\nThe vertical maximum of the rect.\nThe vertical minimum of the rect.\nA Color Palette Table.\nA feature names.\nA list fo feature names.\nAn iterator over <code>FeatureNames</code>.\nA setting name.\nA Feature Name Table.\nThe index of the default setting in the <code>setting_names</code>.\nThe feature’s exclusive settings. If set, the feature …\nThe feature’s ID.\nThe <code>name</code> table index for the feature’s name in a …\nThe <code>name</code> table index for the feature’s name in a …\nA list of feature names. Sorted by <code>FeatureName.feature</code>.\nThe setting.\nThe feature’s setting names.\nA Font Variations Table.\nA variation axis.\nA list of variation axes.\nAn axis name in the <code>name</code> table.\nA glyph class.\nA Glyph Definition Table.\nA Glyph Data Table.\nAn Anchor Table.\nAn <code>Anchor</code> parsing helper.\nA <code>ValueRecord</code> pairs matrix used by <code>PairAdjustment</code>.\nA Cursive Attachment Positioning Subtable.\nA list of entry and exit <code>Anchor</code> pairs.\nA Device Table.\nA Device Table hinting values.\nAn array or ligature anchor matrices.\nA Mark Array.\nA Mark-to-Base Attachment Positioning Subtable.\nA Mark-to-Ligature Attachment Positioning Subtable.\nA Mark-to-Mark Attachment Positioning Subtable.\nA Pair Adjustment Positioning Subtable.\nA <code>ValueRecord</code> pairs set used by <code>PairAdjustment</code>.\nA list of <code>PairSet</code>s.\nA glyph positioning lookup subtable enumeration.\nA Single Adjustment Positioning Subtable.\nA Value Record.\nAn array of Value Records.\nA Device Table indexes into Item Variation Store.\nAn anchors matrix.\nA base coverage.\nNumber of columns in the matrix.\nA mark coverage.\nA list of mark anchors.\nNumber of rows in the matrix.\nHorizontal value, in design units.\nHorizontal adjustment for advance, in design units — …\nA <code>Device</code> table with horizontal adjustment for advance.\nA <code>Device</code> table with horizontal value.\nHorizontal adjustment for placement, in design units.\nA <code>Device</code> table with horizontal adjustment for placement.\nVertical value, in design units.\nVertical adjustment for advance, in design units — only …\nA <code>Device</code> table with vertical adjustment for advance.\nA <code>Device</code> table with vertical value.\nVertical adjustment for placement, in design units.\nA <code>Device</code> table with vertical adjustment for placement.\nA list of glyphs for Alternate Substitution Subtable.\nA set of <code>AlternateSet</code>.\nA Alternate Substitution Subtable.\nGlyph components for one ligature.\nA <code>Ligature</code> set.\nA list of <code>Ligature</code> sets.\nA Ligature Substitution Subtable.\nA Multiple Substitution Subtable.\nA Reverse Chaining Contextual Single Substitution Subtable.\nA sequence of glyphs for Multiple Substitution Subtable.\nA list of <code>Sequence</code> tables.\nA Single Substitution Subtable.\nA glyph substitution lookup subtable enumeration.\nArray of alternate glyph IDs, in arbitrary order.\nGlyph components for one ligature.\nLigature to substitute.\nA list of substitute glyphs.\nA Glyph Variations Table.\nAn index format used by the Index to Location Table.\nA Font Header Table.\nA bounding box that large enough to enclose any glyph from …\nAn index format used by the Index to Location Table.\nUnits per EM.\nA Horizontal Header Table.\nFace ascender.\nFace descender.\nFace line gap.\nNumber of metrics in the <code>hmtx</code> table.\nHorizontal/Vertical Metrics.\nA Horizontal/Vertical Metrics Table.\nWidth/Height advance for <code>hmtx</code>/<code>vmtx</code>.\nSide bearings for glyph IDs greater than or equal to the …\nA list of metrics indexed by glyph ID.\nSum of long metrics + bearings.\nLeft/Top side bearing for <code>hmtx</code>/<code>vmtx</code>.\nA Horizontal/Vertical Metrics Variations Table.\nA kerning subtable format.\nA kerning pair.\nA kerning subtable.\nA format 0 subtable.\nA format 2 subtable.\nA format 3 subtable.\nA list of subtables.\nAn iterator over kerning subtables.\nA Kerning Table.\nSubtable format.\nIndicates that subtable has a cross-stream values.\nIndicates that subtable uses a state machine.\nIndicates that subtable is for horizontal text.\nGlyphs pair.\nA list of kerning pairs.\nA list of subtables.\nKerning value.\nIndicates that subtable is variable.\nA container of Anchor Points used by <code>Subtable4</code>.\nA state machine entry.\nAn extended kerning subtable format.\nA kerning subtable.\nA format 0 subtable.\nA format 1 subtable.\nA format 2 subtable.\nA format 4 subtable.\nA format 6 subtable.\nA list of extended kerning subtables.\nAn iterator over extended kerning subtables.\nAn Extended Kerning Table.\nAn action index.\nAnchor points.\nSubtable format.\nIndicates that subtable has a cross-stream values.\nIndicates that subtable uses a state machine.\nIndicates that subtable is for horizontal text.\nA list of kerning pairs.\nA state table.\nA state table.\nA list of subtables.\nThe tuple count.\nIndicates that subtable is variable.\nLong offsets.\nShort offsets.\nAn Index to Location Table.\nA Math Constants Table.\nA Glyph Assembly Table.\nA Math Glyph Construction Table.\nA mapping from glyphs to Math Glyph Construction Tables.\nA Math Glyph Info Table.\nDetails for a glyph part in an assembly.\nDescription of math glyph variants.\nA Math Kern Table.\nAn entry in a Math Kern Info Table.\nA Math Kern Info Table.\nA Math Value with optional device corrections.\nA mapping from glyphs to Math Values.\nGlyph part flags.\nA Math Table.\nA Math Variants Table.\nAdvance width/height, in design units, of the variant …\nA general recipe on how to construct a variant with large …\nThe kerning data for the bottom-left corner.\nThe kerning data for the bottom-right corner.\nMath positioning constants.\nDevice corrections for this value.\nLengths of the connectors on the end of the glyph, in font …\nGlyphs which are <em>extended shapes</em>.\nThe full advance of the part, in font design units.\nGlyph ID for the part.\nPer-glyph positioning information.\nConstructions for shapes growing in the horizontal …\nPer-glyph italics correction values.\nThe italics correction of the assembled glyph.\nPer-glyph information for mathematical kerning.\nMinimum overlap of connecting glyphs during glyph …\nPart flags.\nParts the assembly is composed of.\nLengths of the connectors on the start of the glyph, in …\nPer-glyph horizontal positions for attaching mathematical …\nThe kerning data for the top-left corner.\nThe kerning data for the top-right corner.\nThe X or Y value in font design units.\nThe ID of the variant glyph.\nPrepared variants of the glyph with varying advances.\nVariants and assembly recipes for growable glyphs.\nConstructions for shapes growing in the vertical direction.\nA Maximum Profile Table.\nThe total number of glyphs in the face.\nA metamorphosis chain.\nA list of metamorphosis chains.\nAn iterator over metamorphosis chains.\nA contextual subtable state table trailing data.\nA contextual subtable.\nA subtable coverage.\nThe feature table is used to compute the sub-feature flags …\nA contextual subtable state table trailing data.\nAn insertion subtable.\nA ligature subtable.\nA subtable in a metamorphosis chain.\nA subtable kind.\nA list of subtables in a metamorphosis chain.\nAn iterator over a metamorphosis chain subtables.\nAn Extended Glyph Metamorphosis Table.\nA list of metamorphosis chains.\nLigature components.\nA subtable coverage.\nA current index.\nA current insert index.\nDefault chain features.\nComplement of flags for the settings that this feature and …\nFlags for the settings that this feature and setting …\nSubtable feature flags.\nA list of chain features.\nInsertion glyphs.\nThe type of feature.\nA subtable kind.\nLigature actions.\nLigatures.\nA mark index.\nA marked insert index.\nThe feature’s setting (aka selector).\nThe contextual glyph substitution state table.\nA state table.\nA state table.\nA list of chain subtables.\nA Metrics Variations Table.\nA Name Record.\nA list of face names.\nAn iterator over face names.\nA platform ID.\nA Naming Table.\nA platform-specific encoding ID.\nA language ID.\nA raw name data.\nA Name ID.\nA list of names.\nA platform ID.\nA Chained Contextual Lookup Subtable.\nA Chained Sequence Rule.\nA set of <code>ChainedSequenceRule</code>.\nA list of <code>ChainedSequenceRule</code> sets.\nA value of Class Definition Table.\nA Class Definition Table.\nA Contextual Lookup Subtable.\nA Coverage Table.\nA Feature.\nAn index in <code>FeatureList</code>.\nA list of <code>Feature</code> records.\nA Feature Variations Table.\nSimple glyph contexts.\nSimple glyph contexts.\nClass-based glyph contexts.\nClass-based glyph contexts.\nCoverage-based glyph contexts.\nCoverage-based glyph contexts.\nAn index in <code>LanguageSystemList</code>.\nA Language System Table.\nA list of <code>LanguageSystem</code> records.\nA Layout Table.\nA Lookup Table.\nLookup table flags.\nAn index in <code>LookupList</code>.\nA list of <code>Lookup</code> values.\nA trait for parsing Lookup subtables.\nA list of lookup subtables.\nAn iterator over lookup subtables.\nA record that describes a range of glyph IDs.\nA data storage used by <code>ScriptList</code>, <code>LanguageSystemList</code> and …\nA trait to parse item in <code>RecordList</code>.\nAn iterator over <code>RecordList</code> values.\nA Script Table.\nAn index in <code>ScriptList</code>.\nA list of <code>Script</code> records.\nA sequence rule record.\nA sequence rule.\nA set of <code>SequenceRule</code>s.\nA list of <code>SequenceRuleSet</code>s.\nAn index in <code>FeatureVariations</code>.\nContains either glyph IDs or glyph Classes.\nDefault language.\nLast glyph ID in the range\nArray of indices into the FeatureList, in arbitrary order.\nA list of all supported features.\nLookup qualifiers.\nList of supported languages, excluding the default one. …\nContains either glyph IDs or glyph Classes.\nA list of all lookups.\nIndex into GDEF mark glyph sets structure.\nParses raw data.\nParses raw data.\nIndex of a feature required for this language system.\nA list of all supported scripts.\nFirst glyph ID in the range\nAvailable subtables.\nScript tag.\nLanguage tag.\nCoverage Index of first glyph ID in range.\nUsed to substitute an alternate set of lookup tables to …\nArray of glyph IDs. Sorted.\nArray of glyph ranges. Ordered by <code>RangeRecord.start</code>.\nA form that is generally cursive in nature.\nA face that is neither italic not obliqued.\nA typically-sloped version of the regular face.\nFace permissions.\nA script metrics used by subscript and superscript.\nA face style.\nA OS/2 and Windows Metrics Table.\nUnicode Ranges.\nA face weight.\nA face width.\nTable version.\nX offset.\nHorizontal face size.\nY offset.\nVertical face size.\nAn iterator over glyph names.\nA PostScript Table.\nFlag that indicates that the font is monospaced.\nItalic angle in counter-clockwise degrees from the …\nUnderline metrics.\nA strike of glyphs.\nA list of <code>Strike</code>s.\nAn iterator over <code>Strikes</code>.\nA Standard Bitmap Graphics Table.\nThe pixels per EM size for which this strike was designed.\nThe device pixel density (in PPI) for which this strike …\nA list of <code>Strike</code>s.\nAn SVG documents.\nA list of SVG documents.\nAn iterator over <code>SvgDocumentsList</code> values.\nAn SVG Table.\nThe SVG document data.\nA list of SVG documents.\nThe last glyph ID, <em>inclusive</em>, for the range covered by …\nThe first glyph ID for the range covered by this record.\nA Tracking Table.\nA single track.\nA track data.\nA list of tracks.\nAn iterator over <code>Tracks</code>.\nHorizontal track data.\nThe <code>name</code> table index for the track’s name.\nA list of sizes.\nA list of tracks.\nA track value.\nA list of tracking values for each size.\nVertical track data.\nA Vertical Header Table.\nFace ascender.\nFace descender.\nFace line gap.\nNumber of metrics in the <code>vmtx</code> table.\nA Vertical Origin Table.\nVertical origin metrics for the Vertical Origin Table.\nDefault origin.\nGlyph ID.\nA list of metrics for each glyph.\nY coordinate, in the font’s design coordinate system, of …\nA multi-line text editor.\nA weak reference to an <code>Editor</code>.\nThe bounds of the <code>Editor</code>.\nA bunch of text.\nA weak reference to a <code>Paragraph</code>.\nThe horizontal alignment of the <code>Paragraph</code>.\nThe minimum bounds of the <code>Paragraph</code>.\nThe vertical alignment of the <code>Paragraph</code>.\nA wrapper around raw image data.\nIn-memory data\nThe data of a raster image.\nImage filtering strategy.\nA handle of some image data.\nThe image Handle to be displayed. Iced exposes its own …\nBilinear interpolation.\nNearest neighbor.\nFile data\nA <code>Renderer</code> that can render raster graphics.\nDecoded image pixels in RGBA format.\nReturns the dimensions of an image for the given <code>Handle</code>.\nDraws an image with the given <code>Handle</code> and inside the …\nThe height of the image.\nThe pixels.\nThe width of the image.\nThe bounds of a <code>Node</code> and its children, using absolute …\nA set of size constraints for layouting.\nThe bounds of an element and its children.\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nDistribute elements using a flex-based layout.\nProduces a <code>Node</code> with two children nodes one right next to …\nComputes the <code>Node</code> that fits the <code>Limits</code> given some width, …\nComputes a <code>padded</code> <code>Node</code> with a positioning step.\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nThe main axis of a flex layout.\nThe horizontal axis\nThe vertical axis\nComputes the flex layout with the given axis and limits, …\nThe cursor has a defined position.\nThe back mouse button.\nThe button of a mouse.\nA mouse button was pressed.\nA mouse button was released.\nA mouse click.\nThe mouse cursor state.\nThe mouse cursor entered the window.\nThe mouse cursor left the window.\nThe mouse cursor was moved\nA mouse event.\nThe forward mouse button.\nThe interaction of a mouse cursor.\nThe left mouse button.\nA line-based scroll movement\nThe middle (wheel) button.\nSome other button.\nA pixel-based scroll movement\nThe right mouse button.\nA scroll movement.\nThe cursor is currently unavailable (i.e. out of bounds or …\nThe mouse wheel was scrolled.\nTrack mouse clicks.\nThe scroll movement.\nThe new position of the mouse cursor\nThe number of horizontal lines scrolled\nThe number of horizontal pixels scrolled\nThe number of vertical lines scrolled\nThe number of vertical pixels scrolled\nA mouse click.\nA double click\nThe kind of mouse click.\nA single click\nA triple click\nA generic <code>Overlay</code>.\nAn <code>Overlay</code> container that displays multiple overlay …\nAn interactive component that can be displayed on top of …\nDraws the <code>Overlay</code> using the associated <code>Renderer</code>.\nReturns a <code>Group</code> of overlay <code>Element</code> children.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns the layout <code>Node</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nProcesses a runtime <code>Event</code>.\nApplies an <code>Operation</code> to the <code>Overlay</code>.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nA renderer that does nothing.\nA polygon with four sides.\nA component that can be used by widgets to draw themselves …\nThe styling attributes of a <code>Renderer</code>.\nThe <code>Border</code> of the <code>Quad</code>.\nThe bounds of the <code>Quad</code>.\nClears all of the recorded primitives in the <code>Renderer</code>.\nFills a <code>Quad</code> with the provided <code>Background</code>.\nThe color to apply to symbolic icons.\nThe scale factor\nThe <code>Shadow</code> of the <code>Quad</code>.\nThe text color\nDraws the primitives recorded in the given closure in a …\nApplies a <code>translation</code> to the primitives recorded in the …\nA stream of runtime events.\nThe events that will be produced by a <code>Subscription</code> with …\nThe description of a <code>Subscription</code>.\nHashes the <code>Recipe</code>.\nExecutes the <code>Recipe</code> and produces the stream of events of …\nIn-memory data\nThe data of a vectorial image.\nA handle of Svg data.\nFile data\nA <code>Renderer</code> that can render vector graphics.\nReturns the default dimensions of an SVG for the given …\nDraws an SVG with the given <code>Handle</code>, an optional <code>Color</code> …\nThe <code>char</code> representing a ▼ icon in the built-in <code>ICON_FONT</code>.\nAn absolute height in logical pixels.\nAdvanced text shaping and font fallback.\nNo shaping and no font fallback.\nA bounds difference.\nThe <code>char</code> representing a ✔ icon in the <code>ICON_FONT</code>.\nThe point was within the bounds of the returned character …\nThe difference detected in some text.\nA component that can be used by widgets to edit multi-line …\nThe <code>Editor</code> of this <code>Renderer</code>.\nThe font of this <code>Paragraph</code>.\nThe font of the <code>Editor</code>.\nThe font type used.\nWraps at a glyph level\nThe output of the <code>Highlighter</code>.\nA type capable of highlighting text.\nThe result of hit testing on text.\nThe icon font of the backend.\nThe highlight iterator type.\nThe height of a line of text in a paragraph.\nNo wraping\nNo difference.\nA text paragraph.\nThe <code>Paragraph</code> of this <code>Renderer</code>.\nThe Raw of this <code>Renderer</code>.\nA factor of the size of the text.\nA renderer capable of measuring and drawing <code>Text</code>.\nThe settings to configure the <code>Highlighter</code>.\nA shape difference.\nThe shaping strategy of some text.\nA paragraph.\nWraps at a word level\nWraps at the word level, or fallback to glyph level if a …\nThe wrap mode of some text.\nReturns the current boundaries of the <code>Editor</code>.\nThe bounds of the paragraph.\nNotifies the <code>Highlighter</code> that the line at the given index …\nCompares the <code>Paragraph</code> with some desired <code>Text</code> and returns …\nThe content of the paragraph.\nReturns the current line of the <code>Highlighter</code>.\nReturns the current <code>Cursor</code> of the <code>Editor</code>.\nReturns the current cursor position of the <code>Editor</code>.\nReturns the default <code>Self::Font</code>.\nReturns the default size of <code>Text</code>.\nEdit text.\nDraws the given <code>Editor</code> at the given position and with the …\nDraws the given <code>Paragraph</code> at the given position and with …\nDraws the given Raw\nDraws the given <code>Text</code> at the given position and with the …\nThe font of the <code>Text</code>.\nReturns the distance to the given grapheme index in the …\nRuns a text <code>Highlighter</code> in the <code>Editor</code>.\nHighlights the given line.\nHighlight text.\nTests whether the provided point is within the boundaries …\nReturns the horizontal alignment of the <code>Paragraph</code>.\nThe horizontal alignment of the <code>Text</code>.\nReturns the text of the given line in the <code>Editor</code>, if it …\nReturns the amount of lines in the <code>Editor</code>.\nThe line height of the <code>Text</code>.\nLoads a <code>Self::Font</code> from its bytes.\nReturns the minimum boundaries that can fit the contents …\nReturns the minimum height that can fit the contents of …\nReturns the minimum width that can fit the contents of the …\nCreates a new <code>Highlighter</code> from its <code>Self::Settings</code>.\nPerforms an <code>Action</code> on the <code>Editor</code>.\nLays out the <code>Paragraph</code> with some new boundaries.\nReturns the current selected text of the <code>Editor</code>.\nThe <code>Shaping</code> strategy of the <code>Text</code>.\nThe size of the <code>Text</code> in logical pixels.\nUpdates the <code>Editor</code> with some new attributes.\nUpdates the <code>Highlighter</code> with some new <code>Self::Settings</code>.\nUpdates the <code>Paragraph</code> to match the given <code>Text</code>, if needed.\nReturns the vertical alignment of the <code>Paragraph</code>.\nThe vertical alignment of the <code>Text</code>.\nCreates a new <code>Paragraph</code> laid out with the given <code>Text</code>.\nCreates a new <code>Editor</code> laid out with the given text.\nThe <code>Wrap</code> mode of the <code>Text</code>.\nAn interaction with an <code>Editor</code>.\nDelete the previous character.\nCursor without a selection\nClick the <code>Editor</code> at the given <code>Point</code>.\nThe cursor of an <code>Editor</code>.\nDelete the next character.\nA direction in some text.\nMove to the end of the text.\nMove to the start of the text.\nMove down.\nDrag the mouse on the <code>Editor</code> to the given <code>Point</code>.\nAn action that edits text.\nPerform an <code>Edit</code>.\nA component that can be used by widgets to edit multi-line …\nMove to the end of the line.\nBreak the current line.\nThe font of the <code>Editor</code>.\nMove to the start of the line.\nInsert the given character.\nMove left.\n&lt;-\nA cursor movement.\nApply a <code>Motion</code>.\nMove to the start of the next window.\nMove to the start of the previous window.\nPaste the given text.\nMove right.\n-&gt;\nScroll the <code>Editor</code> a certain amount of lines.\nSelect text with a given <code>Motion</code>.\nSelect the line at the current cursor.\nSelect the word at the current cursor.\nCursor selecting a range of text\nMove up.\nMove to the left boundary of a word.\nMove to the right boundary of a word.\nReturns the current boundaries of the <code>Editor</code>.\nReturns the current <code>Cursor</code> of the <code>Editor</code>.\nReturns the current cursor position of the <code>Editor</code>.\nRuns a text <code>Highlighter</code> in the <code>Editor</code>.\nReturns the text of the given line in the <code>Editor</code>, if it …\nReturns the amount of lines in the <code>Editor</code>.\nPerforms an <code>Action</code> on the <code>Editor</code>.\nReturns the current selected text of the <code>Editor</code>.\nUpdates the <code>Editor</code> with some new attributes.\nCreates a new <code>Editor</code> laid out with the given text.\nThe amount of lines to scroll.\nThe format of some text.\nThe output of the <code>Highlighter</code>.\nA type capable of highlighting text.\nThe highlight iterator type.\nA highlighter that highlights nothing.\nThe settings to configure the <code>Highlighter</code>.\nNotifies the <code>Highlighter</code> that the line at the given index …\nThe <code>Color</code> of the text.\nReturns the current line of the <code>Highlighter</code>.\nThe <code>Font</code> of the text.\nHighlights the given line.\nCreates a new <code>Highlighter</code> from its <code>Self::Settings</code>.\nUpdates the <code>Highlighter</code> with some new <code>Self::Settings</code>.\nThe identifier of a generic widget.\nWidget Id\nApplication Message\nA piece of logic that can traverse the widget tree of an …\nA wrapper around an <code>Operation</code> output that can be used for …\nA paragraph of text.\nA persistent state widget tree.\nA component that displays information and allows …\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nThe children of the root widget of the <code>Tree</code>.\nOperates on a widget that contains other widgets.\nOperates on a custom widget.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nAdds the drag destination rectangles of the widget. Runs …\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nOperates on a widget that can be focused.\nReturns the id of the widget\nthe Id of the <code>Tree</code>\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nProcesses a runtime <code>Event</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nQuery or update internal widget state.\nReturns the overlay of the <code>Widget</code>, if there is any.\nOperates on a widget that can be scrolled.\nSets the id of the widget This may be called while diffing …\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nThe <code>State</code> of the <code>Tree</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nThe tag of the <code>Tree</code>.\nWrite some text for your users to read.\nOperates on a widget that has text input.\nStore internal widget state in a state tree to ensure …\nThe <code>Operation</code> needs to be followed by another <code>Operation</code>.\nThe internal state of a widget that can be focused.\nWidget Id\nWidget Id\nMap Operation\nApplication Message\nApplication Message\nThe <code>Operation</code> produced no result.\nA piece of logic that can traverse the widget tree of an …\nA wrapper around an <code>Operation</code> output that can be used for …\nA wrapper around an <code>Operation</code> that can be used for …\nThe result of an <code>Operation</code>.\nThe internal state of a widget that can be scrolled.\nThe <code>Operation</code> produced some result.\nThe internal state of a widget that has text input.\nWrapper\nOperates on a widget that contains other widgets.\nOperates on a custom widget.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFocuses the widget.\nOperate on widgets that can be focused.\nOperates on a widget that can be focused.\nReturns whether the widget is focused or not.\nMaps the output of an <code>Operation</code> using the given function.\nMoves the cursor of the text input to an arbitrary …\nMoves the cursor of the text input to the end of the input …\nMoves the cursor of the text input to the front of the …\nProduces an <code>Operation</code> that applies the given <code>Operation</code> to …\nScroll the widget to the given <code>AbsoluteOffset</code> along the …\nOperate on widgets that can be scrolled.\nOperates on a widget that can be scrolled.\nSearch for widgets with the target Id.\nSelects all the content of the text input.\nSnaps the scroll of the widget to the given <code>percentage</code> …\nOperate on widgets that have text input.\nOperates on a widget that has text input.\nUnfocuses the widget.\nA summary of the focusable widgets present on a widget …\nThe internal state of a widget that can be focused.\nProduces an <code>Operation</code> that generates a <code>Count</code> and chains it …\nProduces an <code>Operation</code> that searches for the current …\nProduces an <code>Operation</code> that focuses the widget with the …\nFocuses the widget.\nProduces an <code>Operation</code> that searches for the current …\nProduces an <code>Operation</code> that searches for the current …\nThe index of the current focused widget, if any.\nReturns whether the widget is focused or not.\nThe total amount of focusable widgets.\nUnfocuses the widget.\nThe amount of absolute offset in each direction of a …\nThe amount of relative offset in each direction of a …\nThe internal state of a widget that can be scrolled.\nProduces an <code>Operation</code> that scrolls the widget with the …\nScroll the widget to the given <code>AbsoluteOffset</code> along the …\nProduces an <code>Operation</code> that snaps the widget with the given …\nSnaps the scroll of the widget to the given <code>percentage</code> …\nThe amount of horizontal offset\nThe amount of horizontal offset\nThe amount of vertical offset\nThe amount of vertical offset\nProduces an <code>Operation</code> that searches for the Id\nThe internal state of a widget that has text input.\nProduces an <code>Operation</code> that moves the cursor of the widget …\nMoves the cursor of the text input to an arbitrary …\nProduces an <code>Operation</code> that moves the cursor of the widget …\nMoves the cursor of the text input to the end of the input …\nProduces an <code>Operation</code> that moves the cursor of the widget …\nMoves the cursor of the text input to the front of the …\nProduces an <code>Operation</code> that selects all the content of the …\nSelects all the content of the text input.\nAn absolute height in logical pixels.\nAdvanced text shaping and font fallback.\nThe apperance of some text.\nNo shaping and no font fallback.\nWraps at a glyph level\nThe height of a line of text in a paragraph.\nNo wraping\nA factor of the size of the text.\nThe shaping strategy of some text.\nThe internal state of a <code>Text</code> widget.\nThe supported style of the <code>StyleSheet</code>.\nThe style sheet of some text.\nA paragraph of text.\nWraps at a word level\nWraps at the word level, or fallback to glyph level if a …\nThe wrap mode of some text.\nProduces the <code>Appearance</code> of some text.\nThe <code>Color</code> of the text.\nDraws text using the same logic as the <code>Text</code> widget.\nProduces the <code>layout::Node</code> of a <code>Text</code> widget.\nA map of named widget states.\nNo meaningful internal state.\nSome meaningful internal state.\nThe internal <code>State</code> of a widget.\nThe identifier of some widget state.\nA persistent state widget tree.\nThe children of the root widget of the <code>Tree</code>.\nReconciliates the <code>current_children</code> with the provided list …\nthe Id of the <code>Tree</code>\nThe <code>State</code> of the <code>Tree</code>.\nThe tag of the <code>Tree</code>.\nThe appearance of an application.\nAn interactive cross-platform application.\nThe <code>Executor</code> that will run commands and subscriptions.\nThe data needed to initialize your <code>Application</code>.\nThe type of <strong>messages</strong> your <code>Application</code> will produce.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of an application.\nThe theme of your <code>Application</code>.\nReturns the <code>Appearance</code> of the application for the provided …\nThe background <code>Color</code> of the application.\nThe default icon <code>Color</code> of the application.\nInitializes the <code>Application</code> with the flags provided to <code>run</code> …\nRuns the <code>Application</code>.\nReturns the scale factor of the <code>Application</code>.\nReturns the current <code>Style</code> of the <code>Theme</code>.\nReturns the event <code>Subscription</code> for the current state of the\nThe default text <code>Color</code> of the application.\nReturns the current <code>Theme</code> of the <code>Application</code>.\nReturns the current title of the <code>Application</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Application</code>.\nReturns the widgets to display in the <code>Application</code>.\nRead the current contents of the clipboard.\nReads the current content of the <code>Clipboard</code>.\nRead the current contents of primary.\nReads the current content of the primary <code>Clipboard</code>.\nWrite the given contents to the clipboard.\nWrite the given contents to primary.\nDnD action chosen by the compositor.\nXrgb8888 or Argb8888 image data with premultiplied alpha\nDnD Cancelled.\nA rectangle with a logical location and size relative to a …\nAn offer was dropped\nDnD Dropped. The operation is still ongoing until …\nDnD operation ended.\nThe offer has left the surface.\nThe offer is no longer on a DnD destination.\nMime accepted by destination. If <code>None</code>, no mime types are …\nDnd Offer event with the corresponding destination …\nA rectangle with a logical location and size relative to a …\nIf the selected action is ASK, the user must be presented …\nDnd Source event.\nAccepted actions in this rectangle\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nA unique ID\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nAccepted mime types in this rectangle\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nPrefered action in this rectangle\nThe rectangle representing this destination.\nThe intersection of a source flags value with the …\nSend an event in the channel\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nDescribes the mime types which are accepted.\nCan be converted to data with the available mime types.\nRaw data from the clipboard\nData that can be loaded from the clipboard.\nData that can be stored to the clipboard.\nList allowed mime types for the type to convert from a …\nConverts a type to a byte slice for the given mime type if …\nList available mime types for this data to convert to a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA set of asynchronous actions to be performed by some …\nCreates a <code>Command</code> that produces the <code>Message</code>s published …\nThe <code>Event</code> was handled and processed by a widget.\nA DnD event.\nA user interface event.\nThe <code>Event</code> was <strong>NOT</strong> handled by any widget.\nA keyboard event\nDescribes an event specific to MacOS\nA MacOS specific event\nA mouse event\nA platform specific event\nA platform specific event\nTriggered when the app receives an URL from the system\nThe status of an <code>Event</code> after being processed.\nA touch event\nA window event\nReturns a <code>Subscription</code> to all the ignored runtime events.\nCreates a <code>Subscription</code> that produces a message for every …\nCreates a <code>Subscription</code> that listens and filters all the …\nA default cross-platform executor.\nA type that can run futures.\nRuns the given closure inside the <code>Executor</code>.\nCreates a new <code>Executor</code>.\nSpawns a future in the <code>Executor</code>.\nGlyphs in cursive fonts generally use a more informal …\nAn error while loading a font.\nA font family.\nFantasy fonts are primarily decorative or expressive fonts …\nA font.\nThe sole criterion of a monospace font is that all glyphs …\nThe name of a font family of choice.\nGlyphs in sans-serif fonts, as the term is used in CSS, …\nSerif fonts represent the formal text style for a script.\nThe width of some text.\nThe style of some text.\nThe weight of some text.\nThe <code>Family</code> of the <code>Font</code>.\nLoad a font from its bytes.\nThe <code>Stretch</code> of the <code>Font</code>.\nThe <code>Style</code> of the <code>Font</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nA key string that corresponds to the character typed by …\nA keyboard event.\nA key on the keyboard.\nA keyboard key was pressed.\nA keyboard key was released.\nThe left side of the keyboard.\nThe location of a key on the keyboard.\nThe current state of the keyboard modifiers.\nThe keyboard modifiers have changed.\nA key with an established name.\nThe numpad of the keyboard.\nThe right side of the keyboard.\nThe standard group of keys on the keyboard.\nAn unidentified key.\nListens to keyboard key presses and calls the given …\nListens to keyboard key releases and calls the given …\nThe key pressed.\nThe key released.\nThe location of the key.\nThe location of the key.\nThe state of the modifier keys.\nThe state of the modifier keys.\nThe text produced by the key press, if any.\nThe cursor has a defined position.\nThe back mouse button.\nThe button of a mouse.\nA mouse button was pressed.\nA mouse button was released.\nThe mouse cursor state.\nThe mouse cursor entered the window.\nThe mouse cursor left the window.\nThe mouse cursor was moved\nA mouse event.\nThe forward mouse button.\nThe interaction of a mouse cursor.\nThe left mouse button.\nA line-based scroll movement\nThe middle (wheel) button.\nSome other button.\nA pixel-based scroll movement\nThe right mouse button.\nA scroll movement.\nThe cursor is currently unavailable (i.e. out of bounds or …\nThe mouse wheel was scrolled.\nThe scroll movement.\nThe new position of the mouse cursor\nThe number of horizontal lines scrolled\nThe number of horizontal pixels scrolled\nThe number of vertical lines scrolled\nThe number of vertical pixels scrolled\nA generic overlay.\nBuild and show dropdown menus.\nThe appearance of a menu.\nA list of selectable options.\nThe local state of a <code>Menu</code>.\nThe supported style of the <code>StyleSheet</code>.\nThe style sheet of a menu.\nProduces the <code>Appearance</code> of a menu.\nThe <code>Background</code> of the menu.\nThe <code>Border</code> of the menu.\nThe background <code>Color</code> of a selected option in the menu.\nThe text <code>Color</code> of a selected option in the menu.\nThe text <code>Color</code> of the menu.\nThe settings of an application.\nIf set to true, the renderer will try to perform …\nThe default <code>Font</code> to be used.\nThe text size that will be used by default.\nIf set to true the application will exit when the main …\nThe data needed to initialize the Application.\nThe fonts to load on boot.\nThe identifier of the application.\nThe window settings.\nA request to listen to external events.\nCreates a <code>Subscription</code> that publishes the events sent from …\nReturns a <code>Subscription</code> that will call the given function …\nReturns a <code>Subscription</code> that will create and asynchronously …\nReturns a <code>Subscription</code> that will create and asynchronously …\nA <code>Duration</code> type to represent a span of time, typically …\nA measurement of a monotonically nondecreasing clock. …\nReturns a <code>Subscription</code> that produces messages at a set …\nA touch interaction.\nA unique identifier representing a finger on a touch …\nA touch interaction was ended.\nA touch interaction was canceled.\nAn on-going touch interaction was moved.\nA touch interaction was started.\nA generic widget that produces a message when pressed.\nA widget capable of drawing 2D graphics.\nA box that can be checked.\nA container that distributes its contents vertically.\nA widget for searching and selecting a single value from a …\nA reusable, custom widget that uses The Elm Architecture.\nAn element decorating some content.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe built-in dark variant.\nThe type of event this <code>Component</code> handles internally.\nA frame that displays an image while keeping aspect ratio.\nA widget that only rebuilds its contents when necessary.\nThe built-in light variant.\nEmit messages on mouse events.\nA collection of panes distributed using either vertical or …\nA widget for selecting a single value from a list of …\nA bar that displays progress.\nA circular button representing a choice.\nThe default graphics renderer for <code>iced</code>.\nA widget that is aware of its dimensions.\nA container that distributes its contents horizontally.\nDisplay a horizontal or vertical rule for dividing content.\nA widget that can vertically display an infinite amount of …\nAn horizontal bar and a handle that selects a single value …\nAn amount of empty space.\nThe internal state of this <code>Component</code>.\nA vector graphics image.\nA paragraph.\nA multi-line text input.\nA field that can be filled with text.\nA built-in theme.\nA widget that applies any <code>Theme</code> to its contents.\nA toggler widget.\nAn element to display a widget over another.\nAn vertical bar and a handle that selects a single value …\nAllow your users to perform actions by pressing a button.\nCreates a new <code>Button</code> with the provided content.\nDraw 2D graphics for your users.\nCreates a new <code>Canvas</code>.\nShow toggle controls using checkboxes.\nCreates a new <code>Checkbox</code>.\nCreates a new <code>Column</code> with the given children.\nCreates a <code>Column</code> with the given children.\nDisplay a dropdown list of searchable and selectable …\nCreates a new <code>ComboBox</code>.\nTurns an implementor of <code>Component</code> into an <code>Element</code> that can …\nDecorate content and apply alignment.\nCreates a new <code>Container</code> with the provided content.\nFocuses the next focusable widget.\nFocuses the previous focusable widget.\nCreates a horizontal <code>Rule</code> with the given height.\nCreates a new horizontal <code>Space</code> with the given <code>Length</code>.\nDisplay images in your user interface.\nCreates a new <code>Image</code>.\nUse widgets that can provide hints to ensure continuity.\nCreates a new <code>keyed::Column</code> with the given children.\nCreates a <code>Column</code> with the given children.\nCreates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …\nA container intercepting mouse events.\nUpdate the <code>Component</code> state based on the provided <code>Operation</code>\nDisplay interactive elements on top of other widgets.\nLet your users split regions of your application and …\nDisplay a dropdown list of selectable values.\nCreates a new <code>PickList</code>.\nProvide progress feedback to your users.\nCreates a new <code>ProgressBar</code>.\nCreate choices using radio buttons.\nCreates a new <code>Radio</code>.\nCreates a new <code>Responsive</code> widget with a closure that …\nCreates a new <code>Row</code> with the given children.\nCreates a <code>Row</code> with the given children.\nDisplay a horizontal or vertical rule for dividing content.\nNavigate an endless amount of content with a scrollbar.\nCreates a new <code>Scrollable</code> with the provided content.\nDisplay an interactive selector of a single value from a …\nCreates a new <code>Slider</code>.\nDistribute content vertically.\nDisplay vector graphics in your application.\nCreates a new <code>Svg</code> widget from the given <code>Handle</code>.\nDraw and interact with text.\nCreates a new <code>Text</code> widget with the provided content.\nDisplay a multi-line text input for text editing.\nCreates a new <code>TextEditor</code>.\nDisplay fields that can be filled with text.\nCreates a new <code>TextInput</code>.\nUse the built-in theme and styles.\nA widget that applies any <code>Theme</code> to its contents.\nShow toggle controls using togglers.\nCreates a new <code>Toggler</code>.\nDisplay a widget over another.\nCreates a new <code>Tooltip</code> with the provided content, tooltip …\nProcesses an <code>Event</code> and updates the <code>Component</code> state …\nCreates a vertical <code>Rule</code> with the given width.\nDisplay an interactive selector of a single value from a …\nCreates a new <code>VerticalSlider</code>.\nCreates a new vertical <code>Space</code> with the given <code>Length</code>.\nProduces the widgets of the <code>Component</code>, which may trigger …\nThe appearance of a button.\nA generic widget that produces a message when pressed.\nThe local state of a <code>Button</code>.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a button.\nProduces the active <code>Appearance</code> of a button.\nThe <code>Background</code> of the button.\nThe <code>Border</code> of the buton.\nThe border <code>Color</code> of the button.\nThe border radius of the button.\nThe border width of the button.\nProduces the disabled <code>Appearance</code> of a button.\nDraws a <code>Button</code>.\nProduces a <code>Command</code> that focuses the <code>Button</code> with the given …\nProduces the hovered <code>Appearance</code> of a button.\nThe icon <code>Color</code> of the button.\nComputes the layout of a <code>Button</code>.\nReturns the <code>mouse::Interaction</code> of a <code>Button</code>.\nProduces the pressed <code>Appearance</code> of a button.\nThe <code>Shadow</code> of the butoon.\nThe amount of offset to apply to the shadow of the button.\nThe text <code>Color</code> of the button.\nProcesses the given <code>Event</code> and updates the <code>State</code> of a <code>Button</code>\nA bevelled corner.\nThe stroke for each sub-path does not extend beyond its …\nA simple cache that stores generated <code>Geometry</code> to avoid …\nA widget capable of drawing 2D graphics.\nA <code>Canvas</code> event.\nThe style used to fill geometry.\nThe kind of geometry this renderer can draw.\nA fill which linearly interpolates colors along a …\nA <code>Gradient</code> color.\nA keyboard event.\nThe shape used at the end of open subpaths when they are …\nThe dash pattern used when stroking the line.\nThe shape used at the corners of paths or basic shapes …\nA linear gradient interpolates colors along a direction …\nA sharp corner.\nA mouse event.\nAn immutable set of points that may or may not be …\nThe state and logic of a <code>Canvas</code>.\nA renderer capable of drawing some <code>Self::Geometry</code>.\nAt the end of each sub-path, the shape representing the …\nA round corner.\nA solid <code>Color</code>.\nAt the end of each sub-path, the shape representing the …\nThe internal state mutated by the <code>Program</code>.\nThe style of a stroke.\nThe coloring style of some drawing.\nA bunch of text that can be drawn to a canvas\nA touch event.\nThe color of the text\nThe contents of the text\nDraws the given layers of <code>Self::Geometry</code>.\nDraws the state of the <code>Program</code>, producing a bunch of …\nHandle events of a canvas.\nThe font of the text\nThe horizontal alignment of the text\nThe shape to be used at the end of open subpaths when they …\nThe dash pattern used when stroking the line.\nThe line height of the text.\nThe shape to be used at the corners of paths or basic …\nReturns the current mouse interaction of the <code>Program</code>.\nThe offset of <code>LineDash::segments</code> to start the pattern.\nThe position of the text relative to the alignment …\nThe fill rule defines how to determine what is inside and …\nThe alternating lengths of lines and gaps which describe …\nThe shaping strategy of the text.\nThe size of the text\nThe color or gradient of the fill.\nThe color or gradient of the stroke.\nUpdates the <code>State</code> of the <code>Program</code>.\nThe vertical alignment of the text\nThe distance between the two edges of the stroke.\nThe <code>Event</code> was handled and processed by a widget.\nA <code>Canvas</code> event.\nThe <code>Event</code> was <strong>NOT</strong> handled by any widget.\nA keyboard event.\nA mouse event.\nThe status of an <code>Event</code> after being processed.\nA touch event.\nThe appearance of a checkbox.\nA box that can be checked.\nThe icon in a <code>Checkbox</code>.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a checkbox.\nProduces the active <code>Appearance</code> of a checkbox.\nThe <code>Background</code> of the checkbox.\nThe <code>Border</code> of hte checkbox.\nThe unicode code point that will be used as the icon.\nFont that will be used to display the <code>code_point</code>,\nProduces the hovered <code>Appearance</code> of a checkbox.\nThe icon <code>Color</code> of the checkbox.\nThe line height of the icon.\nThe shaping strategy of the icon.\nFont size of the content.\nThe text <code>Color</code> of the checkbox.\nThe wrap mode of the icon.\nA widget for searching and selecting a single value from a …\nThe local state of a <code>ComboBox</code>.\nBuild matchers from given list of options.\nSearch list of options for a given query.\nThe appearance of a container.\nAn element decorating some content.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the <code>Appearance</code> of a container.\nProduces the <code>Appearance</code> of a container.\nThe <code>Background</code> of the container.\nThe <code>Border</code> of the container.\nDraws the background of a <code>Container</code> given its <code>Appearance</code> …\nThe icon <code>Color</code> of the container.\nComputes the layout of a <code>Container</code>.\nThe <code>Shadow</code> of the container.\nThe text <code>Color</code> of the container.\nProduces a <code>Command</code> that queries the visible screen bounds …\nImage filtering strategy.\nA handle of some image data.\nA frame that displays an image while keeping aspect ratio.\nBilinear interpolation.\nNearest neighbor.\nA frame that displays an image with the ability to zoom …\nDraws an <code>Image</code>\nComputes the layout of an <code>Image</code>.\nZoom and pan on an image.\nCreates a new <code>Viewer</code> with the given image <code>Handle</code>.\nThe local state of a <code>Viewer</code>.\nA frame that displays an image with the ability to zoom …\nReturns the bounds of the underlying image, given the …\nA container that distributes its contents vertically.\nDistribute content vertically.\nA container that distributes its contents vertically.\nAll panes are visible\nThe appearance of the hovered region of a pane grid.\nA fixed reference line for the measurement of coordinates.\nBottom edge.\nA <code>Pane</code> was picked and then dropped outside of other <code>Pane</code> …\nCenter region.\nThe arrangement of a <code>PaneGrid</code>.\nThe content of a <code>Pane</code>.\nThe visible contents of the <code>PaneGrid</code>\nA four cardinal direction.\n↓\nAn event produced during a drag and drop interaction of a …\nA pane that can be dragged.\nA <code>Pane</code> was dropped on top of another <code>Pane</code>.\nThe edges of an area.\nAn <code>Edge</code> of the full <code>PaneGrid</code>.\nEdge region.\nThe horizontal axis: —\n←\nLeft edge.\nA line.\nA maximized pane is visible\nA layout node of a <code>PaneGrid</code>.\nA rectangular region in a <code>PaneGrid</code> used to display widgets.\nA <code>Pane</code>.\nThe region of this <code>Node</code> is taken by a <code>Pane</code>.\nA single <code>Pane</code> of the <code>PaneGrid</code>.\nA collection of panes distributed using either vertical or …\nA <code>Pane</code> was picked for dragging.\nThe region of a <code>Pane</code>.\nAn event produced during a resize interaction of a <code>PaneGrid</code>…\n→\nRight edge.\nA divider that splits a region in a <code>PaneGrid</code> into two …\nA split of the available space.\nThe region of this <code>Node</code> is split into two.\nThe state of a <code>PaneGrid</code>.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a container.\nThe <code>Target</code> area a pane can be dropped on.\nThe title bar of a <code>Pane</code>.\nTop edge.\n↑\nThe vertical axis: |\nThe <code>Background</code> of the pane region.\nThe <code>Border</code> of the pane region.\nReturns whether the <code>Draggable</code> with the given <code>Layout</code> can be …\nThe <code>Color</code> of the <code>Line</code>.\nDraws a <code>PaneGrid</code>.\nThe <code>Appearance</code> to draw when a pane is hovered.\nThe <code>Line</code> to draw when a split is hovered.\nThe internal state of the <code>PaneGrid</code>.\nCalculates the <code>Layout</code> of a <code>PaneGrid</code>.\nReturns the current <code>mouse::Interaction</code> of a <code>PaneGrid</code>.\nThe panes of the <code>PaneGrid</code>.\nThe <code>Line</code> to draw when a split is picked.\nThe new ratio of the <code>Split</code>.\nThe <code>Split</code> that is being dragged for resizing.\nThe state of a <code>PaneGrid</code>.\nProcesses an <code>Event</code> and updates the <code>state</code> of a <code>PaneGrid</code> …\nThe width of the <code>Line</code>.\nThe left/top <code>Configuration</code> of the split.\nThe direction of the split.\nThe right/bottom <code>Configuration</code> of the split.\nThe ratio of the split in [0.0, 1.0].\nThe picked <code>Pane</code>.\nThe picked <code>Pane</code>.\nThe picked <code>Pane</code>.\nThe <code>Target</code> where the picked <code>Pane</code> was dropped on.\nThe left/top <code>Node</code> of the split.\nThe direction of the split.\nThe right/bottom <code>Node</code> of the split.\nThe <code>Split</code> of this <code>Node</code>.\nThe ratio of the split in [0.0, 1.0].\nThe current action of a <code>PaneGrid</code>.\nA <code>Pane</code> in the <code>PaneGrid</code> is being clicked.\nA <code>Pane</code> in the <code>PaneGrid</code> is being dragged.\nThe <code>PaneGrid</code> is idle.\nThe internal state of a <code>PaneGrid</code>.\nA <code>Split</code> in the <code>PaneGrid</code> is being dragged.\nThe state of a <code>PaneGrid</code>.\nThe internal state of the <code>PaneGrid</code>.\nThe panes of the <code>PaneGrid</code>.\nThe <code>Axis</code> of the <code>Split</code>.\nThe starting <code>Point</code> of the click interaction.\nThe starting <code>Point</code> of the drag interaction.\nThe <code>Pane</code> being clicked.\nThe <code>Pane</code> being dragged.\nThe <code>Split</code> being dragged.\nThe appearance of a pick list.\nDisplays an arrow icon (▼).\nA custom dynamic handle.\nThe handle to the right side of the <code>PickList</code>.\nThe icon of a <code>Handle</code>.\nNo handle will be shown.\nA widget for selecting a single value from a list of …\nThe state of a <code>PickList</code>.\nA custom static handle.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a container.\nProduces the active <code>Appearance</code> of a pick list.\nThe <code>Background</code> of the pick list.\nThe <code>Border</code> of the pick list.\nThe unicode code point that will be used as the icon.\nDraws a <code>PickList</code>.\nFont that will be used to display the <code>code_point</code>,\nThe handle <code>Color</code> of the pick list.\nProduces the hovered <code>Appearance</code> of a pick list.\nComputes the layout of a <code>PickList</code>.\nLine height of the content.\nReturns the current <code>mouse::Interaction</code> of a <code>PickList</code>.\nReturns the current overlay of a <code>PickList</code>.\nThe placeholder <code>Color</code> of the pick list.\nThe shaping strategy of the icon.\nFont size of the content.\nThe text <code>Color</code> of the pick list.\nProcesses an <code>Event</code> and updates the <code>State</code> of a <code>PickList</code> …\nThe wrap mode of the icon.\nThe <code>Icon</code> used when <code>PickList</code> is closed.\nThe <code>Icon</code> used when <code>PickList</code> is open.\nFont size of the content.\nThe appearance of a progress bar.\nA bar that displays progress.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a progress bar.\nProduces the <code>Appearance</code> of the progress bar.\nThe <code>Background</code> of the progress bar.\nThe <code>Background</code> of the bar of the progress bar.\nThe border radius of the progress bar.\nThe appearance of a radio button.\nA circular button representing a choice.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a radio button.\nProduces the active <code>Appearance</code> of a radio button.\nThe <code>Background</code> of the radio button.\nThe border <code>Color</code> of the radio button.\nThe border width of the radio button.\nThe <code>Color</code> of the dot of the radio button.\nProduces the hovered <code>Appearance</code> of a radio button.\nThe text <code>Color</code> of the radio button.\nThe appearance of a rule.\nDifferent offset on each end of the rule, length units. …\nThe fill mode of a rule.\nFill the whole length of the container.\nUniform offset from each end, length units.\nFill a percent of the length of the container. The rule …\nDisplay a horizontal or vertical rule for dividing content.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a rule.\nProduces the style of a rule.\nThe color of the rule.\nThe <code>FillMode</code> of the rule.\nThe radius of the line corners.\nThe width (thickness) of the rule line.\nThe amount of absolute offset in each direction of a …\nAlignment of the scrollable’s content relative to it’s …\nBoth vertical and horizontal scrolling\nThe direction of <code>Scrollable</code>.\nContent is aligned to the end of the <code>Viewport</code>\nHorizontal scrolling\nProperties of a scrollbar within a <code>Scrollable</code>.\nThe amount of relative offset in each direction of a …\nA widget that can vertically display an infinite amount of …\nThe appearance of a scrollable.\nThe appearance of the scroller of a scrollable.\nContent is aligned to the start of the <code>Viewport</code>.\nThe local state of a <code>Scrollable</code>.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a scrollable.\nVertical scrolling\nThe current <code>Viewport</code> of the <code>Scrollable</code>.\nProduces the style of an active scrollbar.\nProduces the style of an active horizontal scrollbar.\nThe <code>Background</code> of a scrollable.\nThe <code>Border</code> of a scrollable.\nThe <code>Border</code> of the scroller.\nThe <code>Color</code> of the scroller.\nProduces the style of a scrollbar that is being dragged.\nProduces the style of a horizontal scrollbar that is being …\nDraws a <code>Scrollable</code>.\nProduces the style of a scrollbar when the scrollable is …\nProduces the style of a horizontal scrollbar when the …\nComputes the layout of a <code>Scrollable</code>.\nComputes the current <code>mouse::Interaction</code> of a <code>Scrollable</code>.\nProduces a <code>Command</code> that scrolls the <code>Scrollable</code> with the …\nThe appearance of the <code>Scroller</code> of a scrollable.\nProduces a <code>Command</code> that snaps the <code>Scrollable</code> with the …\nProcesses an <code>Event</code> and updates the <code>State</code> of a <code>Scrollable</code> …\nThe amount of horizontal offset\nThe amount of horizontal offset\nThe amount of vertical offset\nThe amount of vertical offset\nThe properties of the horizontal scrollbar.\nThe properties of the vertical scrollbar.\nThe appearance of a slider.\nA circular handle.\nLinear gradient for the background of the rail includes an …\nThe appearance of the handle of a slider.\nThe shape of the handle of a slider.\nStart and end colors of the rail\nThe appearance of a slider rail\nThe background color of the rail\nA rectangular shape.\nAn horizontal bar and a handle that selects a single value …\nThe local state of a <code>Slider</code>.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a slider.\nProduces the style of an active slider.\nThe border <code>Color</code> of the handle.\nThe border radius of the corners of the rail.\nThe border width of the handle.\nThe appearance of breakpoints.\nThe <code>Color</code> of the handle.\nThe colors of the rail of the slider.\nProduces the style of a slider that is being dragged.\nDraws a <code>Slider</code>.\nThe appearance of the <code>Handle</code> of the slider.\nProduces the style of an hovered slider.\nComputes the current <code>mouse::Interaction</code> of a <code>Slider</code>.\nThe colors of the rail of the slider.\nThe shape of the handle.\nProcesses an <code>Event</code> and updates the <code>State</code> of a <code>Slider</code> …\nThe width of the stroke of a slider rail.\nThe border radius of the corners of the rectangle.\nThe height of the rectangle.\nThe radius of the circle.\nThe width of the rectangle.\nLet the widget determin the angle of the gradient\nthe linear gradient of the slider\nAn amount of empty space.\nThe appearance of an SVG.\nA handle of Svg data.\nThe supported style of the <code>StyleSheet</code>.\nThe stylesheet of a svg.\nA vector graphics image.\nProduces the <code>Appearance</code> of the svg.\nThe <code>Color</code> filter of an SVG.\nProduces the hovered <code>Appearance</code> of a svg content.\nAn absolute height in logical pixels.\nAdvanced text shaping and font fallback.\nThe apperance of some text.\nNo shaping and no font fallback.\nWraps at a glyph level\nThe height of a line of text in a paragraph.\nNo wraping\nA factor of the size of the text.\nThe shaping strategy of some text.\nThe internal state of a <code>Text</code> widget.\nThe supported style of the <code>StyleSheet</code>.\nThe style sheet of some text.\nA paragraph.\nWraps at a word level\nWraps at the word level, or fallback to glyph level if a …\nThe wrap mode of some text.\nProduces the <code>Appearance</code> of some text.\nThe <code>Color</code> of the text.\nDraws text using the same logic as the <code>Text</code> widget.\nProduces the <code>layout::Node</code> of a <code>Text</code> widget.\nAn interaction with an <code>Editor</code>.\nThe appearance of a text input.\nDelete the previous character.\nClick the <code>Editor</code> at the given <code>Point</code>.\nThe content of a <code>TextEditor</code>.\nDelete the next character.\nMove to the end of the text.\nMove to the start of the text.\nMove down.\nDrag the mouse on the <code>Editor</code> to the given <code>Point</code>.\nAn action that edits text.\nPerform an <code>Edit</code>.\nMove to the end of the line.\nBreak the current line.\nMove to the start of the line.\nInsert the given character.\nMove left.\nA cursor movement.\nApply a <code>Motion</code>.\nMove to the start of the next window.\nMove to the start of the previous window.\nPaste the given text.\nMove right.\nScroll the <code>Editor</code> a certain amount of lines.\nSelect text with a given <code>Motion</code>.\nSelect the line at the current cursor.\nSelect the word at the current cursor.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a text input.\nA multi-line text input.\nMove up.\nMove to the left boundary of a word.\nMove to the right boundary of a word.\nProduces the style of an active text input.\nThe <code>Background</code> of the text editor.\nThe <code>Border</code> of the text editor.\nProduces the style of a disabled text input.\nProduces the <code>Color</code> of the value of a disabled text input.\nProduces the style of a focused text input.\nProduces the style of an hovered text input.\nProduces the <code>Color</code> of the placeholder of a text input.\nProduces the <code>Color</code> of the selection of a text input.\nProduces the <code>Color</code> of the value of a text input.\nThe amount of lines to scroll.\nThe appearance of a text input.\nThe cursor of a text input.\nThe default <code>Padding</code> of a <code>TextInput</code>.\nThe content of the <code>Icon</code>.\nThe left side of a <code>TextInput</code>.\nThe right side of a <code>TextInput</code>.\nThe side of a <code>TextInput</code>.\nThe state of a <code>TextInput</code>.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a text input.\nA field that can be filled with text.\nThe value of a <code>TextInput</code>.\nProduces the style of an active text input.\nThe <code>Background</code> of the text input.\nThe <code>Border</code> of the text input.\nThe unicode code point that will be used as the icon.\nTrack the cursor of a text input.\nProduces the style of a disabled text input.\nProduces the <code>Color</code> of the value of a disabled text input.\nDraws the <code>TextInput</code> with the given <code>Renderer</code>, overriding its\nProduces a <code>Command</code> that focuses the <code>TextInput</code> with the …\nProduces the style of a focused text input.\nThe font that will be used to display the <code>code_point</code>.\nProduces the style of an hovered text input.\nThe icon <code>Color</code> of the text input.\nComputes the layout of a <code>TextInput</code>.\nComputes the current <code>mouse::Interaction</code> of the <code>TextInput</code>.\nProduces a <code>Command</code> that moves the cursor of the <code>TextInput</code> …\nProduces a <code>Command</code> that moves the cursor of the <code>TextInput</code> …\nProduces a <code>Command</code> that moves the cursor of the <code>TextInput</code> …\nProduces the <code>Color</code> of the placeholder of a text input.\nProduces a <code>Command</code> that selects all the content of the …\nProduces the <code>Color</code> of the selection of a text input.\nThe side of a <code>TextInput</code> where to display the <code>Icon</code>.\nThe font size of the content.\nThe spacing between the <code>Icon</code> and the text in a <code>TextInput</code>.\nProcesses an <code>Event</code> and updates the <code>State</code> of a <code>TextInput</code> …\nProduces the <code>Color</code> of the value of a text input.\nThe cursor of a text input.\nCursor without a selection\nCursor selecting a range of text\nThe state of a <code>Cursor</code>.\nThe end of the selection\nThe start of the selection\nThe style of an application.\nA simple box.\nThe style of a button.\nThe style of a checkbox.\nColored text.\nThe style of a container.\nA <code>Theme</code> with a customized <code>Palette</code>.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nA custom style.\nThe danger style.\nThe danger style.\nThe built-in dark variant.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nNo filtering to the rendered SVG.\nThe default style.\nThe default style.\nThe default style.\nThe default style.\nThe destructive style.\nThe built-in light variant.\nThe style of a menu.\nA color palette.\nThe style of a pane grid.\nThe style of a pick list.\nThe positive style.\nThe primary style.\nThe primary style.\nThe primary style.\nThe style of a progress bar.\nThe style of a radio button.\nThe style of a rule.\nThe style of a scrollable.\nThe secondary style.\nThe secondary style.\nThe style of a slider.\nThe success style.\nThe success style.\nSvg\nThe style of text.\nThe text style.\nThe style of a text input.\nThe style of a text input.\nA built-in theme.\nThe style of a toggler.\nNo style.\nThe background <code>Color</code> of the <code>Palette</code>.\nThe danger <code>Color</code> of the <code>Palette</code>.\nDefine the colors of a theme.\nThe primary <code>Color</code> of the <code>Palette</code>.\nThe success <code>Color</code> of the <code>Palette</code>.\nThe text <code>Color</code> of the <code>Palette</code>.\nA set of background colors.\nA set of danger colors.\nThe built-in dark variant of an <code>Extended</code> palette.\nThe built-in light variant of an <code>Extended</code> palette.\nAn extended set of colors generated from a <code>Palette</code>.\nRecommended background, icon, and text <code>Color</code>.\nA color palette.\nA set of primary colors.\nA set of secondary colors.\nA set of success colors.\nThe background <code>Color</code> of the <code>Palette</code>.\nThe set of background colors.\nThe base background color.\nThe base primary color.\nThe base secondary color.\nThe base success color.\nThe base danger color.\nThe background color.\nThe danger <code>Color</code> of the <code>Palette</code>.\nThe set of danger colors.\nThe icon color, which defaults to the text color.\nWhether the palette is dark or not.\nThe primary <code>Color</code> of the <code>Palette</code>.\nThe set of primary colors.\nThe set of secondary colors.\nA stronger version of the base background color.\nA stronger version of the base primary color.\nA stronger version of the base secondary color.\nA stronger version of the base success color.\nA stronger version of the base danger color.\nThe success <code>Color</code> of the <code>Palette</code>.\nThe set of success colors.\nThe text <code>Color</code> of the <code>Palette</code>.\nThe text color.\nA weaker version of the base background color.\nA weaker version of the base primary color.\nA weaker version of the base secondary color.\nA weaker version of the base success color.\nA weaker version of the base danger color.\nThe appearance of a toggler.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a toggler.\nA toggler widget.\nReturns the active <code>Appearance</code> of the toggler for the …\nThe background <code>Color</code> of the toggler.\nThe <code>Color</code> of the background border of the toggler.\nThe border radius of the toggler.\nThe foreground <code>Color</code> of the toggler.\nThe <code>Color</code> of the foreground border of the toggler.\nthe space between the handle and the border of the toggler\nthe radius of the handle of the toggler\nReturns the hovered <code>Appearance</code> of the toggler for the …\nThe tooltip will appear on the bottom of the widget.\nThe tooltip will follow the cursor.\nThe tooltip will appear on the left of the widget.\nThe position of the tooltip. Defaults to following the …\nThe tooltip will appear on the right of the widget.\nAn element to display a widget over another.\nThe tooltip will appear on the top of the widget.\nThe appearance of a slider.\nA circular handle.\nThe appearance of the handle of a slider.\nThe shape of the handle of a slider.\nA rectangular shape.\nThe local state of a <code>VerticalSlider</code>.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a slider.\nAn vertical bar and a handle that selects a single value …\nProduces the style of an active slider.\nThe border <code>Color</code> of the handle.\nThe border width of the handle.\nThe appearance of breakpoints.\nThe <code>Color</code> of the handle.\nProduces the style of a slider that is being dragged.\nDraws a <code>VerticalSlider</code>.\nThe appearance of the <code>Handle</code> of the slider.\nProduces the style of an hovered slider.\nComputes the current <code>mouse::Interaction</code> of a <code>VerticalSlider</code>…\nThe colors of the rail of the slider.\nThe shape of the handle.\nProcesses an <code>Event</code> and updates the <code>State</code> of a …\nThe border radius of the corners of the rectangle.\nThe height of the rectangle.\nThe radius of the circle.\nThe width of the rectangle.\nAn operation to be performed on some window.\nThe window will always be below normal windows.\nThe window will always be on top of normal windows.\nRedraw at the given time.\nThe window is completely centered on the screen.\nChange the window <code>Icon</code>.\nChange the window <code>Level</code>.\nChange the <code>Mode</code> of the window.\nClose the window and exits the application.\nThe user has requested for the window to close.\nA window was closed.\nPlatform-specific\nThe platform-specific default position for a new window.\nMove the window with the left mouse button until the …\nA window-related event.\nFetch the raw identifier unique to the window.\nFetch if the current window is maximized or not.\nFetch if the current window is minimized or not.\nFetch the current <code>Mode</code> of the window.\nFetch the current logical dimensions of the window.\nA file has been dropped into the window.\nA file is being hovered over the window.\nA file was hovered, but has exited the window.\nA window was focused.\nThe application takes the whole screen of its current …\nBring the window to the front and sets input focus. Has no …\nThe application is hidden\nAn window icon normally used for the titlebar or taskbar.\nThe id of the window.\nPlatform-specific\nA window level groups windows with respect to their …\nSet the window to maximized or back\nSet the window to minimized or back\nThe mode of a window-based application.\nMove the window to the given logical coordinates.\nA window was moved.\nRedraw the next frame.\nThe default behavior.\nA window was opened.\nThe platform specific window settings of an application.\nThe position of a window in a given screen.\nA request to redraw a window.\nA window redraw was requested.")