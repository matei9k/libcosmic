searchState.loadedDescShard("usvg_tree", 0, "<code>usvg-tree</code> is an SVG tree representation used by usvg.\nRepresentation of the <code>align</code> value of the …\nAn alignment baseline property.\nIndicates that the alpha values of the mask should be used.\nApproxEqUlps is a trait for approximate equality …\nApproximate zero equality comparisons.\nRepresentation of the <code>preserveAspectRatio</code> attribute.\nA bounding box calculator.\nA generic gradient.\nA baseline shift property.\nA blending mode property.\nA clip-path element.\nA 8-bit RGB color.\nA dominant baseline property.\nA fill style.\nA fill rule.\nText font properties.\nA font stretch property.\nA font style property.\nA reference to raw GIF data. Should be decoded by the …\nA group container.\nA raster image element.\nAn embedded image kind.\nAn image rendering method.\nChecks that the current number is &gt; 0.\nA form that is generally cursive in nature.\nA reference to raw JPEG data. Should be decoded by the …\nA length adjust property.\nA line cap.\nA line join.\nA linear layout.\nA linear gradient.\nIndicates that the luminance values of the mask should be …\nA mask element.\nA mask type.\nAlias for <code>rctree::Node&lt;NodeKind&gt;</code>.\nAdditional <code>Node</code> methods.\nNode’s kind.\nA non-zero <code>f32</code>.\nAn immutable, finite <code>f32</code> that is known to be &gt; 0.\nA rectangle defined by left, top, right and bottom edges.\nA face that is neither italic not obliqued.\nAn immutable, finite <code>f32</code> in a 0..=1 range.\nA <code>NormalizedF32</code> value initialized with one.\nA typically-sloped version of the regular face.\nAn alias to <code>NormalizedF32</code>.\nA reference to raw PNG data. Should be decoded by the …\nA paint style.\nRepresentation of the <code>paint-order</code> property.\nA path element.\nA text-on-path layout.\nA pattern element.\nAn immutable, finite <code>f32</code> that is known to be &gt;= 0.\nA radial gradient.\nA rectangle defined by left, top, right and bottom edges.\nA preprocessed SVG tree. Can be rendered as is.\nA shape rendering method.\nA size.\nA spread method.\nGradient’s stop element.\nAn alias to <code>NormalizedF32</code>.\nA stroke style.\nA <code>stroke-miterlimit</code> value.\nAn alias to <code>NonZeroPositiveF32</code>.\nA text element.\nA text chunk anchor property.\nA text chunk.\nA text span decoration.\nA text span decoration style.\nA text chunk flow property.\nA path used by text-on-path.\nA text rendering method.\nA text style span.\nAn affine transformation matrix.\nA nodes tree container.\nAn element units.\nView box.\nA visibility property.\nA writing mode.\nA <code>PositiveF32</code> value initialized with zero.\nA <code>NormalizedF32</code> value initialized with zero.\nReturns node’s absolute transform.\nElement’s absolute transform.\n<code>&lt;align&gt;</code> value.\nA span alignment baseline.\nA text anchor.\nAppends <code>kind</code> as a node child.\nIndicates that a kerning should be applied.\nThis method tests for <code>self</code> and <code>other</code> values to be …\nThis method tests for <code>self</code> and <code>other</code> values to be not …\nChecks if the number is approximately zero.\nValue of the <code>preserveAspectRatio</code> attribute.\nBase gradient data.\nBase gradient data.\nA list of all baseline shift that should be applied to …\nApplies a bounding box transform.\nApplies a bounding box transform.\nConstructs a new <code>Color</code> set to black.\nGroup blend mode.\nReturns the bottom edge.\nReturns the bottom edge.\nContains a text bounding box.\nCalculates absolute transforms for all nodes in the tree.\nCalculates node’s absolute bounding box.\nA list of text chunks.\nAdditional clip path.\nElement’s clip path.\nCalls a closure for each <code>ClipPath</code> in the tree.\nGradient stop color.\nContent coordinate system units.\nContent coordinate system units.\nSegments list.\nA span decorations.\n<code>&lt;defer&gt;</code> value.\nA span dominant baseline.\nA relative X axis offsets.\nA relative Y axis offsets.\nA span end in bytes.\nExpand the bounding box to the specified bounds.\nExpands current size to specified size.\nA list of family names.\nA fill style.\nA fill style.\nFill style.\nSVG filter types.\nCalls a closure for each <code>Filter</code> in the tree.\nElement’s filters.\nText converted into paths, ready to render.\nA font.\nA font size.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts <code>Rect</code> into a bounding box <code>Transform</code>.\nCreates new <code>Rect</code>.\nCreates new <code>NonZeroRect</code>.\nCreates a <code>Fill</code> from <code>Paint</code>.\nCreates a Rect from Point array.\nCreates a new rotating <code>Transform</code>.\nCreates a new rotating <code>Transform</code> at the specified position.\nCreates a new <code>Transform</code>.\nCreates a new scaling <code>Transform</code>.\nCreates a new skewing <code>Transform</code>.\nCreates a new translating <code>Transform</code>.\nCreates a new <code>Size</code> from width and height.\nCreates new <code>Rect</code>.\nCreates new <code>NonZeroRect</code>.\nReturns the value as a primitive type.\nReturns the value as a primitive type.\nReturns the value as a primitive type.\nReturns an underlying value.\nReturns an underlying value.\nReturns the value as a <code>FiniteF32</code>.\nReturns the value as a <code>FiniteF32</code>.\nReturns the value as a <code>FiniteF32</code>.\nReturns transform’s scale part.\nChecks that transform contains a scale part.\nChecks that transform contains a skew part.\nChecks if the current tree has any text nodes.\nChecks that transform contains a translate part.\nReturns rect’s height.\nReturns rect’s height.\nReturns height.\nReturns node’s ID.\nReturns node’s ID.\nElement’s ID.\nElement’s ID.\nElement’s ID.\nElement’s ID.\nElement’s ID.\nElement’s ID.\nElement’s ID.\nElement’s ID.\nElement’s ID.\nCreates an identity transform.\nInsets the rectangle by the specified offset.\nReturns an intersection of two rectangles.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an inverted transform.\nChecks if the bounding box is default, i.e. invalid.\nChecks that transform is finite.\nChecks that transform is identity.\nChecks that transform is scale-only.\nChecks that transform contains only scale and translate.\nChecks that transform is skew-only.\nChecks that transform is translate-only.\nChecks that transform is finite and has non-zero scale.\nChecks that the current number is &gt; 0.\nGroup isolation.\nMask type.\nImage data.\nReturns the left edge.\nReturns the left edge.\nA length adjust property.\nA letter spacing property.\nAn optional line-through and its style.\nTransforms a points using the current transform.\nTransforms a slice of points using the current transform.\nAdditional mask.\nElement’s mask.\nCalls a closure for each <code>Mask</code> in the tree.\nCreates a new <code>PositiveF32</code> if the given value is &gt;= 0.\nCreates a new <code>NonZeroPositiveF32</code> if the given value is &gt; 0.\nCreates a <code>NormalizedF32</code> if the given value is in a 0..=1 …\nCreates a new <code>NonZeroF32</code> value.\nCreates a new <code>StrokeMiterlimit</code> value.\nCreates a new <code>Path</code> with default values.\nCreates a <code>NormalizedF32</code> clamping the given value to a …\nConstructs a new <code>Color</code> from RGB values.\nCreates a <code>NormalizedF64</code> by dividing the given value by …\nCreates a <code>NormalizedF32</code> by dividing the given value by 255.\nCreates a new <code>PositiveF32</code> without checking the value.\nCreates a new <code>NonZeroPositiveF32</code> without checking the …\nCreates a new <code>NormalizedF32</code> without checking the value.\nReturns renderable node by ID.\nGradient stop offset.\nGradient stop opacity.\nGroup opacity.\nOutsets the rectangle by the specified offset.\nAn optional overline and its style.\nA paint order style.\nFill and stroke paint order.\nCalls a closure for each <code>Paint</code> in the tree.\nA path.\nPost-concats the current transform.\nPost-rotates the current transform.\nPost-rotates the current transform by the specified …\nPost-scales the current transform.\nPost-translates the current transform.\nPre-concats the current transform.\nPre-rotates the current transform.\nPre-rotates the current transform by the specified …\nPre-scales the current transform.\nPre-translates the current transform.\nValue of the <code>viewBox</code> attribute.\nPattern rectangle.\nMask rectangle.\nRendering mode.\nRendering mode.\nRendering mode.\nReturns the right edge.\nReturns the right edge.\nPattern children.\nClip path children.\nClip path children.\nThe root element of the SVG tree.\nA list of rotation angles.\nConverts into an <code>IntRect</code> by adding 0.5 and discarding the …\nConverts into an <code>IntRect</code> rounding outwards.\nScales current size to specified size.\nChecks if this group should be isolated during rendering.\nReturns rect’s size.\nImage size.\n<code>&lt;meetOrSlice&gt;</code> value.\nIndicates that small caps should be used.\nA list of text chunk style spans.\nGradient spreading method.\nA span start in bytes.\nA text offset in SVG coordinates.\nA list of <code>stop</code> elements.\nA font stretch.\nA stroke style.\nA stroke style.\nStroke style.\nA font style.\nCalls a closure for each subroot this <code>Node</code> has.\nA text chunk actual text.\nA text chunk flow.\nA text length property.\nConverts into <code>IntRect</code>.\nConverts into <code>IntSize</code>.\nConverts a bounding box into <code>NonZeroRect</code>.\nConverts into <code>NonZeroRect</code>.\nConverts the current size to <code>NonZeroRect</code> at provided …\nConverts a bounding box into <code>Rect</code>.\nConverts into <code>Rect</code>.\nConverts the current size to <code>Rect</code> at provided position.\nReturns the value as a <code>u16</code>.\nReturns the value as a <code>u8</code>.\nReturns the top edge.\nReturns the top edge.\nTransforms the bounding box.\nTransforms the rect using the provided <code>Transform</code>.\nTransforms the rect using the provided <code>Transform</code>.\nGradient transform.\nPattern transform.\nClip path transform.\nElement’s transform.\nTranslates the rect to the specified position.\nAn optional underline and its style.\nReturns paint server units.\nCoordinate system units.\nCoordinate system units.\nCoordinate system units.\nCoordinate system units.\nChecks if anti-aliasing should be enabled.\nSome useful utilities.\nPattern viewbox.\nAn image rectangle in which it should be fit.\nSVG viewbox.\nA visibility property.\nElement visibility.\nElement visibility.\nA font width.\nConstructs a new <code>Color</code> set to white.\nReturns rect’s width.\nReturns rect’s width.\nReturns width.\nA word spacing property.\nA writing mode.\nReturns rect’s X position.\nReturns rect’s X position.\nAn absolute X axis offset.\nReturns rect’s Y position.\nReturns rect’s Y position.\nAn absolute Y axis offset.\nA blend filter primitive.\nA color channel.\nA color interpolation mode.\nA color matrix filter primitive.\nA color matrix filter primitive kind.\nA component-wise remapping filter primitive.\nA composite filter primitive.\nAn images compositing operation.\nA matrix convolution filter primitive.\nA convolve matrix representation.\nA diffuse lighting filter primitive.\nApplies a step function to a component.\nA displacement map filter primitive.\nA distant light source.\nA drop shadow filter primitive.\nAn edges processing mode.\nA filter element.\nA flood filter primitive.\nApplies an exponential shift to a component.\nA Gaussian blur filter primitive.\nKeeps a component as is.\nAn image filter primitive.\nAn image data.\nKind of the <code>feImage</code> data.\nIdentifies input for a filter primitive.\nA filter kind.\nA light source kind.\nApplies a linear shift to a component.\nA merge filter primitive.\nA morphology filter primitive.\nA morphology operation.\nAn offset filter primitive.\nA point light source.\nA filter primitive element.\nA specular lighting filter primitive.\nA spot light source.\nApplies a linear interpolation to a component.\nA tile filter primitive.\nA transfer function used by <code>FeComponentTransfer</code>.\nA turbulence generation filter primitive.\nA turbulence kind for the <code>feTurbulence</code> filter.\nAn SVG node.\nValue of the <code>preserveAspectRatio</code> attribute.\nDirection angle for the light source on the XY plane …\nIdentifies the base frequency for the noise function.\nIdentifies the base frequency for the noise function.\nA kernel matrix bias.\nA flood color.\nA flood color.\nColor interpolation mode.\nReturns a number of columns in the matrix.\nThe actual matrix.\nImage data.\nA diffuse constant.\nA matrix divisor.\nThe amount to offset the input graphic along the X-axis.\nThe amount to offset the input graphic along the X-axis.\nThe amount to offset the input graphic along the Y-axis.\nThe amount to offset the input graphic along the Y-axis.\nAn edges processing mode.\nDirection angle for the light source from the XY plane …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n<code>feFuncA</code> in the SVG.\n<code>feFuncB</code> in the SVG.\n<code>feFuncG</code> in the SVG.\n<code>feFuncR</code> in the SVG.\nReturns a matrix value at the specified position.\nChecks that <code>FilterKind</code> has a specific input.\nThe filter subregion height.\nElement’s ID.\nIdentifies input for the given filter primitive.\nIdentifies input for the given filter primitive.\nIdentifies input for the given filter primitive.\nIdentifies input for the given filter primitive.\nIdentifies input for the given filter primitive.\nIdentifies input for the given filter primitive.\nIdentifies input for the given filter primitive.\nIdentifies input for the given filter primitive.\nIdentifies input for the given filter primitive.\nIdentifies input for the given filter primitive.\nIdentifies input for the given filter primitive.\nIdentifies input for the given filter primitive.\nIdentifies input for the given filter primitive.\nIdentifies input for the given filter primitive.\nIdentifies input for the given filter primitive.\nIdentifies input for the given filter primitive.\nList of input layers that should be merged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFilter primitive kind.\nA matrix kind.\nIndicates whether the filter primitive should perform a …\nA light source.\nA light source.\nA lighting color.\nA lighting color.\nA limiting cone which restricts the region where the light …\nA convolve matrix.\nA blending mode.\nCreates a new <code>ConvolveMatrixData</code>.\nIdentifies the number of octaves for the noise function.\nA flood opacity.\nA flood opacity.\nA compositing operation.\nA filter operator.\nX point at which the light source is pointing.\nY point at which the light source is pointing.\nZ point at which the light source is pointing.\nAn alpha preserving flag.\nContent coordinate system units.\nA list of filter primitives.\nA filter radius along the X-axis.\nA filter radius along the Y-axis.\nFilter region.\nRendering method.\nAssigned name for this filter primitive.\nReturns a number of rows in the matrix.\nScale factor.\nThe starting number for the pseudo random number generator.\nA specular constant.\nA specular exponent.\nExponent value controlling the focus for the light source.\nA standard deviation along the X-axis.\nA standard deviation along the X-axis.\nA standard deviation along the Y-axis.\nA standard deviation along the Y-axis.\nSmooth transitions at the border of tiles.\nA surface scale.\nA surface scale.\nReturns a matrix’s X target.\nReturns a matrix’s Y target.\nRegion coordinate system units.\nThe filter subregion width.\n<code>x</code> coordinate of the filter subregion.\nX location for the light source.\nX location for the light source.\nIndicates a source color channel along the X-axis.\n<code>y</code> coordinate of the filter subregion.\nY location for the light source.\nY location for the light source.\nIndicates a source color channel along the Y-axis.\nZ location for the light source.\nZ location for the light source.\nReturns object aligned position.\nConverts <code>viewBox</code> to <code>Transform</code>.")